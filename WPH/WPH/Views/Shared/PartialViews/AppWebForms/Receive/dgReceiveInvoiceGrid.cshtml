
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer


<div>
    @(Html.Kendo().Grid<WPH.Models.SaleInvoice.SaleInvoiceViewModel>()
    .Name("receiveInvoiceKendoGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {

            columns.Bound(x => x.Description).Filterable(false).Title(Localizer["Description"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.TotalPrice).Title(Localizer["Total"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;" }).ClientTemplate("#= Receive_Databound(TotalPrice)#");
            //columns.Bound(x => x.MainInvoiceNum).Filterable(false).Title(Localizer["MainInvoiceNum"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;white-space: break-spaces;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.InvoiceNum).Filterable(false).Title(Localizer["InvoiceNum"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;white-space: break-spaces;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.InvoiceDateTxt).Filterable(false).Title(Localizer["InvoiceDate"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(20).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;", @class = "MyFont-Sarchia-grid" });
            
            columns.Bound(x => x.Guid).HtmlAttributes(new { @class = "ReceiveInvoiceGrid", @data_id = "#=Guid#" }).Hidden();

            columns.Select().HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;" })
                            .HtmlAttributes(new { @class = "select_receiveInvoice", @data_price = "#=TotalPrice#", @data_id = "#=Guid#", @data_date = "#=InvoiceDateTxt#", @data_desctiption = "#=Description#",  @data_invoice = "#=InvoiceNum#"});

        }
        else
        {
            
            columns.Select().HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;" })
                            .HtmlAttributes(new { @class = "select_receiveInvoice", @data_price = "#=TotalPrice#", @data_id = "#=Guid#", @data_date = "#=InvoiceDateTxt#", @data_desctiption = "#=Description#",  @data_invoice = "#=InvoiceNum#" });

            columns.Bound(x => x.Guid).HtmlAttributes(new { @class = "ReceiveInvoiceGrid", @data_id = "#=Guid#" }).Hidden();
            
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(20).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;" });
            columns.Bound(x => x.InvoiceDateTxt).Filterable(false).Title(Localizer["InvoiceDate"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.InvoiceNum).Filterable(false).Title(Localizer["InvoiceNum"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;white-space: break-spaces;", @class = "MyFont-Sarchia-grid" });
            //columns.Bound(x => x.MainInvoiceNum).Filterable(false).Title(Localizer["MainInvoiceNum"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;white-space: break-spaces;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.TotalPrice).Title(Localizer["Total"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;" }).ClientTemplate("#= Receive_Databound(TotalPrice)#");
            columns.Bound(x => x.Description).Filterable(false).Title(Localizer["Description"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;vertical-align: middle;", @class = "MyFont-Sarchia-grid" });

        }
    })

        //.DataSource(dataSource => dataSource
        //.Ajax()
        //.ServerOperation(false)
        //.Model(model =>
        //{
        //    model.Id(p => p.Guid);
        //})
        //.PageSize(10)
        //.Read(read => read.Action("GetAllCustomerAccount", "CustomerAccount").Data("GetCustomerId"))
        //)
        //.Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
        .Pageable(pageable => pageable
        .Input(true)
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5)
        .Numeric(true)) // Enable paging
        .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;overflow:auto" }) // Enable sorting
    )
</div>

<script>

    function Receive_Databound(total) {
        //var baseCurrencyId = $("#BaseCurrencyId").data("kendoDropDownList");
        //let currency = baseCurrencyId.text();

        let text = "";
        if (total != null) {

            let res = total.toString().split("_");
            for (let i = 0; i < res.length; i++) {
                //if (res[i].includes(currency)) {
                //}
                text += "<div style='white-space: nowrap;'>" + res[i] + " </div>";
            }
        }
        return text;
    }


    $(document).ready(function () {

        //$("#kendoGrid").on("dblclick", "tr.k-state-selected", function (element) {

        //    $("#kendoGrid").find("tr.k-state-selected td a.edit").click();

        //});

    })

</script>