@model WPH.Models.CustomDataModels.BaseInfo.BaseInfosAndPeriodsViewModel

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string font = "", pull = "", dir = "";
    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-left ";
        dir = "  ";
        <h3 id="newSaleInvoiceText" class="hidden">@Localizer["New"] @Localizer["SaleInvoice"]</h3>
    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-right ";
        dir = " direction:rtl; ";
        <h3 id="newSaleInvoiceText" class="hidden">@Localizer["SaleInvoice"] @Localizer["New"]</h3>
    }
    <h3 id="editSaleInvoiceText" class="hidden">@Localizer["Edit"] @Localizer["SaleInvoice"]</h3>
}

<h1 id="ProductId" class="hidden"></h1>

<div class="row page-header ">

    <div class="@pull">
        <h1 class="@font" style="font-size: 2.3rem">
            @Localizer["SaleInvoiceList"]
        </h1>

    </div>
    @if ((bool)ViewBag.AccessNewSaleInvoice)
    {
        <div class="@font @pull" style="margin:0 2rem;transform:translateY(-10%)">
            <a class="btn btn-danger" onClick="AddSaleInvoice(this)" href="#" style="padding:0.2rem">
                @Localizer["New"]
                <i class="ace-icon glyphicon  glyphicon-plus align-top bigger-125"></i>
            </a>
        </div>
    }


</div><!-- /.page-header -->

<script>
    function GetPeriodAndFilterForSale() {

        var periodId = $('#period-id').attr('data-Value');

        var fromDate = $("#KendoFromDate").data("kendoDatePicker");
        var toDate = $("#KendoDateTo").data("kendoDatePicker");

        var frDate = fromDate.value();
        var tDate = toDate.value();
        let frMonth = frDate.getMonth() + 1;
        let frDay = frDate.getDate();
        let toMonth = tDate.getMonth() + 1;
        let toDay = tDate.getDate();

        if (frMonth < 10)
            frMonth = "0" + frMonth;
        if (toMonth < 10)
            toMonth = "0" + toMonth;
        if (frDay < 10)
            frDay = "0" + frDay;
        if (toDay < 10)
            toDay = "0" + toDay;

        let from = frDate.getFullYear() + "-" + frMonth + "-" + frDay;
        let too = tDate.getFullYear() + "-" + toMonth + "-" + toDay;

        let Customer = $("#Customer").data("kendoDropDownList");
        let Currency = $("#Currency").data("kendoDropDownList");

        let productId = $("#ProductId").text();

        if ($("#ProductNameFilter").val() == "")
            productId = null;


        let filterViewModel = {
            PeriodId: periodId,
            TxtDateFrom: from,
            TxtDateTo: too,
            Customer: Customer.value(),
            Currency: Currency.value(),
            InvoiceNum: $("#InvoiceNum").val(),
            MainInvoiceNum: $("#MainInvoiceNumFilterTxt").val(),
            ProductId: productId
        };

        return filterViewModel;
    }
</script>

<div style="overflow:hidden">

    <div class="col-sm-12 MyFont-Roboto-grid">

        <div class="col-sm-3">
            @(Html.Kendo().DropDownList()
            .Name("periods")
            .BindTo(Model.periods)
            .DataTextField("Name")
            .DataValueField("Id")
            .Filter("contains")
            .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "PeriodsChange()" })
            )
        </div>

        <script>

            var productWithBorcode_listFilter = [];
            var productName_listFilter = [];

            let selected = false;
            function OnCloseProductFilter(e) {
                setTimeout(() => {

                    //console.log($("#ProductName").val());

                    if ($("#ProductNameFilter").val() == "")
                        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();


                    //$("#ProductNameText").text($("#ProductNameFilter").val());
                    if (!selected) {
                        selected = true;
                        var txt = $("#ProductNameFilter").val().toString();
                        let fr;
                        var reg = /^\d+$/;
                        let digi = reg.test(txt);
                        if (digi) {
                            fr = productWithBorcode_listFilter.find(element => element.Barcode === txt);
                            if (fr === null || fr === undefined) {
                                //$("#ProductName").val("");
                                $("#ProductExist-box").removeClass("hidden");
                                return;
                            }
                            $("#ProductNameFilter").val(fr.ProductName);
                            //$("#ProductNameText").text(fr.ProductName);
                        }
                        else {
                            fr = productName_listFilter.find(element => element.ProductName === txt);
                            if (txt === "")
                                return;
                            if (fr === null || fr === undefined) {
                                //$("#ProductName").val("");
                                $("#ProductExist-box").removeClass("hidden");
                                return;
                            }
                            //grid.editCell($("#SaleInvoiceDetailKendoGrid td:eq(9)"));
                        }

                        let productId = fr.ProductId;
                        $("#ProductId").text(productId);
                        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();

                    }
                    else {
                        selected = false;
                    }

                })

            }

        </script>


        <div class="col-sm-3">
            @(Html.Kendo().AutoComplete()
            .Name("ProductNameFilter")
            .DataTextField("ProductName")
            .Filter("contains")
            .Placeholder(Localizer["Medicine"] + " / " + Localizer["Barcode"] )
            .Events(a=>a.Close("OnCloseProductFilter").Select("OnCloseProductFilter"))
            .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem;" })
            )
            <span id="ProductExist-box" class="emptybox hidden" data-isEssential="true" style="color:red;">
                @Localizer["ThisProductNotExist"]
            </span>
        </div>


        <div class="col-sm-3">
            @(Html.Kendo().DropDownList()
            .Name("filters")
            .BindTo(Model.filters)
            .DataTextField("Name")
            .DataValueField("Id")
            .OptionLabel(" ")
            .Filter("contains")
            .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem;", onchange = "FiltersChange()" })
            )
        </div>



        <div class="col-sm-3 hidden" id="CustomerFilter">
            @(Html.Kendo().DropDownList()
            .Name("Customer")
            .DataTextField("Name")
            .DataValueField("Guid")
            .Filter("contains")
            .OptionLabel(" ")
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("GetAllCustomers", "Customer");
                })
                .ServerFiltering(false);
            })
            .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem;", onchange = "SetFilter()" })
                )
        </div>

        <div class="col-sm-3 hidden" id="CurrencyFilter">
            @(Html.Kendo().DropDownList()
            .Name("Currency")
            .DataTextField("Name")
            .DataValueField("Id")
            .OptionLabel(" ")
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("GetAllCurrencies", "BaseInfo");
                })
                .ServerFiltering(false);
            })
            .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem;", onchange = "SetFilter()" })
                )
        </div>

        <div class="col-sm-3 hidden" id="InvoiceNumFilter">

            <div class="col-sm-9">
                @(Html.Kendo().TextBox()
                .Name("InvoiceNum")
                .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem;" })
                )
            </div>

            <div class="col-sm-1">
                @(Html.Kendo().Button()
                .Name("btn-search-invoiceNum")
                .HtmlAttributes(new { style = "font-size:1.5rem;padding:0.7rem;margin-bottom:5px;", type = "button", @class = "k-primary ", onclick = "SetFilter()" })
                .Content("<i class='fa fa-search'></i>"))
            </div>

        </div>



    </div>

    <div class="col-sm-12 hidden" id="searchDiv" style="margin-top:20px;display:flex;align-items: flex-end;@dir">

        <div class="col-sm-3 " style="">
            <label class="block clearfix">
                <label for="form-field-8">@Localizer["FromDate"]: </label>
                <span class="block input-icon input-icon-right">
                    @(Html.Kendo().DatePicker()
                        .Name("KendoFromDate")
                        .Value(DateTime.Now)
                        .Format("dd/MM/yyyy")
                        .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "dateTimePickerWorkWithSpace(this)" })
                        )
                </span>
            </label>
        </div>

        <div class="col-sm-3 " style="">
            <label class="block clearfix">
                <label for="form-field-8">@Localizer["ToDate"]: </label>
                <span class="block input-icon input-icon-right">
                    @(Html.Kendo().DatePicker()
                        .Name("KendoDateTo")
                        .Value(DateTime.Now)
                        .Format("dd/MM/yyyy")
                        .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "dateTimePickerWorkWithSpace(this)" })
                        )
                </span>
            </label>
        </div>

        <div id="" class="col-sm-2 " style="">

            @(Html.Kendo().Button()
                .Name("btn-search-Sale")
                .HtmlAttributes(new { style = "font-size:1.5rem;padding:0.7rem;margin-bottom:5px;", type = "button", @class = "k-primary ", onclick = "btnSearchClick()" })
                .Content("<i class='fa fa-search'></i>"))

        </div>

    </div>

</div>

<input class="hidden" type="text" id="period-id" data-Value="@Model.periods.FirstOrDefault().Id" />
<h1 id="FromTo" class="hidden">@ViewBag.FromToId</h1>


<div id="ShowDiscountsListModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir">
    <div class="modal-dialog" style="width:80%">
        <div class="modal-content">
            @*<div class="modal-header">
                    <button type="button" class="close" onclick="closeShowDiscountsListModal()" aria-hidden="true">&times;</button>
                    <h3 id="ShowDiscountsListModal-header" class="smaller lighter blue no-margin @font">
                    </h3>
                </div>*@

            <div id="ShowDiscountsListModal-body" class="modal-body" style="">
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-ShowDiscountsList-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeShowDiscountsListModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="MoneyConvertModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style=" @dir">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button id="MoneyConvertModal-header-closebtn" type="button" class="close" onclick="closeMoneyConvertModal()" aria-hidden="true">&times;</button>
                <h3 id="MoneyConvertModal-header" class="smaller lighter blue no-margin @font">
                    @Localizer["New"] - @Localizer["MoneyConvert"]
                </h3>
            </div>

            <div id="MoneyConvertModal-body" class="modal-body" style="width:60rem">
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-MoneyConvertModal-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-MoneyConvertModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeMoneyConvertModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>



<div id="ShowCostsListModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir">
    <div class="modal-dialog" style="width:80%">
        <div class="modal-content">
            @*<div class="modal-header">
                    <button type="button" class="close" onclick="closeShowCostsListModal()" aria-hidden="true">&times;</button>
                    <h3 id="ShowCostsListModal-header" class="smaller lighter blue no-margin @font">
                    </h3>
                </div>*@

            <div id="ShowCostsListModal-body" class="modal-body" style="">
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-ShowCostsList-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeShowCostsListModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="ShowTotalPriceModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir">
    <div class="modal-dialog" style="width:80%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeShowTotalPriceModal()" aria-hidden="true">&times;</button>
                <h3 id="ShowTotalPriceModal-header" class="smaller lighter blue no-margin @font">
                    @Localizer["TotalSaleInvoice"]
                </h3>
            </div>

            <div id="ShowTotalPriceModal-body" class="modal-body" style="">
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-ShowTotalPrice-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeShowTotalPriceModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="SaleInvoiceDetailModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="z-index:999;@dir">
    <div class="modal-dialog" style="width: 98vw ">
        <div class="modal-content">
            <div class="modal-header" style="padding:5px">
                <button type="button" class="close" onclick="closeSaleInvoiceDetailModal()" aria-hidden="true">&times;</button>
                <div class="col-sm-3">
                    <h4 id="SaleInvoiceDetailModal-header" class="smaller lighter blue no-margin @font" >
                        @Localizer["SaleInvoice"]
                    </h4>

                </div>
               
            </div>

            <div id="SaleInvoiceDetailModal-body" class="modal-body" style="overflow:auto;">
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-SaleInvoiceDetailModal-ok")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right k-primary", onclick= "SaleInvoiceDetailsSaveChanges()" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-SaleInvoiceDetailModal-okandnew")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right k-primary hidden", onclick= "okAndNew()" })
                .Content(Localizer["OkAndNew"]))
                @(Html.Kendo().Button()
                .Name("btn-SaleInvoiceDetailModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeSaleInvoiceDetailModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="AddNewCustomerModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir ">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick= "closeAddNewCustomer()" aria-hidden="true">&times;</button>
                <h3 id="AddNewCustomerModal-header" class="smaller lighter blue no-margin @font">
                    @Localizer["New"] - @Localizer["Customer"]
                </h3>
            </div>

            <div id="AddNewCustomerModal-body" class="modal-body" style="width:80rem">
            </div>
            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-AddNewCustomer-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-AddNewCustomer-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeAddNewCustomer()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>




<div class="row Grid-Content @font">
    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/SaleInvoice/dgSaleInvoiceGrid.cshtml")
</div>
@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_GridAndModalLinks.cshtml")
@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_Modal.cshtml")


<script>

   

    $(document).ready(function () {

        GetAllProductsWithBarcodeForFilter().done(function (data) {

            productWithBorcode_listFilter = data;
            var productNameList = productWithBorcode_listFilter.map(({ ProductId, ProductName }) => ({ ProductId, ProductName }));

            const key = 'ProductName';

            productName_listFilter = [...new Map(productNameList.map(item =>
                [item[key], item])).values()];

        });

    });

    function FilterProduct2(product_list, filter) {

        var filter_list = product_list.filter(function (item) {
            if (this.count < 20 && item.ProductName.toLowerCase().indexOf(filter) > -1) {
                this.count++;
                return true;
            }

            return false;

        }, { count: 0 });

        return filter_list;

    }
    $('#ProductNameFilter').on('input', function () {

        var txt = $("#ProductNameFilter").val();

        var filter_list = FilterProduct2(productName_listFilter, txt);

        $("#ProductNameFilter").data("kendoAutoComplete").dataSource.data(filter_list);

    });

    $('#ProductNameFilter').on('keypress', function (e) {

        if (e.which === 13) {
            OnCloseProductFilter();
        }

    });

    function SetFilter() {

        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();
    }

    function PeriodsChange() {

        var period = $("#periods").data("kendoDropDownList");

        var periodValue = period.value();

        $('#period-id').attr('data-Value', periodValue);

        var fromTo = $("#FromTo").text();

        if (periodValue === fromTo) {

            $("#searchDiv").removeClass("hidden");

            let date = $("#KendoFromDate").data("kendoDatePicker");
            date.element.focus();
            date.element.select();

        } else {

            $("#searchDiv").addClass("hidden");

            $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();

        }

    }

    function btnSearchClick() {
        var period = $("#periods").data("kendoDropDownList");

        var periodValue = period.value();

        $('#period-id').attr('data-Value', periodValue);

        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();
    }

    function FiltersChange() {

        var filter = $("#filters").data("kendoDropDownList");
        var filterValue = filter.value();

        var customer = $("#Customer").data("kendoDropDownList");
        customer.value("");
        var currency = $("#Currency").data("kendoDropDownList");
        currency.value("");

        $("#InvoiceNum").val("");

        if (filterValue == '1') {

            $("#CustomerFilter").removeClass("hidden");
            $("#CurrencyFilter").addClass("hidden");
            $("#InvoiceNumFilter").addClass("hidden");

        } else if (filterValue == '2') {

            $("#CustomerFilter").addClass("hidden");
            $("#CurrencyFilter").removeClass("hidden");
            $("#InvoiceNumFilter").addClass("hidden");

        } else if (filterValue == '3') {

            $("#CustomerFilter").addClass("hidden");
            $("#CurrencyFilter").addClass("hidden");
            $("#InvoiceNumFilter").removeClass("hidden");

        } else if (filterValue == '4') {

            $("#CustomerFilter").addClass("hidden");
            $("#CurrencyFilter").addClass("hidden");
            $("#InvoiceNumFilter").addClass("hidden");

        } else {

            $("#CustomerFilter").addClass("hidden");
            $("#CurrencyFilter").addClass("hidden");
            $("#InvoiceNumFilter").addClass("hidden");
            $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();

        }

    }

    function GetAllProductsWithBarcodeForFilter() {
        return $.ajax({
            type: "Get",
            url: "/Product/GetAllProductsWithBarcodeForFilter",
        });
    }

    function AddSaleInvoice(element) {

        //$(".loader").removeClass("hidden");
        //$(".page-content").load("/SaleInvoice/AddAndNewModal", function (responce) {

        //    $(".loader").fadeIn("slow");
        //    $(".loader").addClass("hidden");
        //})


        $('#SaleInvoiceDetailModal').modal('toggle');

        var link = "/SaleInvoice/AddAndNewModal";

        $(".loader").removeClass("hidden");
        $('#SaleInvoiceDetailModal-body').load(link + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });


    }

    function EditSaleInvoice(element) {

        //$(".loader").removeClass("hidden");
        //var link = "/SaleInvoice/EditModal?Id=";
        //var Id = $(element).attr('data-id');
        //$(".page-content").load(link + Id, function (responce) {

        //    $(".loader").fadeIn("slow");
        //    $(".loader").addClass("hidden");
        //})

        $('#SaleInvoiceDetailModal').modal('toggle');

        var link = "/SaleInvoice/EditModal?Id=";
        var Id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");
        $('#SaleInvoiceDetailModal-body').load(link + Id, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });

    }

    function ShowDiscountsList(element) {

        $("#ShowDiscountsListModal #ERROR_Data").addClass("hidden");
        $("#ShowDiscountsListModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#ShowDiscountsListModal').modal('toggle');

        var link = "/SaleInvoiceDiscount/Form?SaleInvoiceId=";
        var Id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");
        $('#ShowDiscountsListModal-body').load(link + Id + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });
    };

    function closeShowDiscountsListModal() {
        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();
        $('#ShowDiscountsListModal').modal('hide');
        $('#ShowDiscountsListModal-body').empty();
        $(".modal-backdrop:last").remove();

    }


    function ShowCostsList(element) {

        $("#ShowCostsListModal #ERROR_Data").addClass("hidden");
        $("#ShowCostsListModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#ShowCostsListModal').modal('toggle');

        var link = "/Cost/SaleInvoiceCostForm?SaleInvoiceId=";
        var Id = $(element).attr('data-id');

        $(".loader").removeClass("hidden");
        $('#ShowCostsListModal-body').load(link + Id + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });
    };

    function closeShowCostsListModal() {
        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();
        $('#ShowCostsListModal').modal('hide');
        $('#ShowCostsListModal-body').empty();
        $(".modal-backdrop:last").remove();
    }


    function ShowTotalPrice(element) {

        $("#ShowTotalPriceModal #ERROR_Data").addClass("hidden");
        $("#ShowTotalPriceModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#ShowTotalPriceModal').modal('toggle');

        var link = "/SaleInvoice/TotalPriceModal?Id=";
        var Id = $(element).attr('data-id');

        $(".loader").removeClass("hidden");
        $('#ShowTotalPriceModal-body').load(link + Id + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });
    };

    function closeShowTotalPriceModal() {

        $('#ShowTotalPriceModal').modal('hide');
        $('#ShowTotalPriceModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    function closeSaleInvoiceDetailModal() {
        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();
        $('#SaleInvoiceDetailModal').modal('hide');
        $('#SaleInvoiceDetailModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    function SaleInvoiceDetailsSaveChanges() {
        $(this).attr("disabled", true);
        UpdateSaleInvoiceMaster();
        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();
        $(this).attr("disabled", false);
        $('#SaleInvoiceDetailModal').modal('hide');
        $('#SaleInvoiceDetailModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    function updateMasterSaleInvoice() {

        $("#addNewSaleInvoiceForm #ERROR_Data").addClass("hidden");
        $("#addNewSaleInvoiceForm #Date-valid").addClass("hidden");
        $("#addNewSaleInvoiceForm #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#addNewSaleInvoiceForm .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#addNewSaleInvoiceForm .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    isEmmpty = false;
                    $('#btn-updateSaleInvoice-accept').removeAttr("disabled");
                    ok_exit = false;
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        var link = "/SaleInvoice/AddOrUpdate";

        let SaleInvoice = {
            Guid: $("#Guid").val(),
            CustomerId: $("#CustomerId").val(),
            InvoiceDateTxt: $("#InvoiceDateTxt").val(),
            Description: $("#Description").val(),
            SalePriceTypeId: $("#SalePriceTypeId").val(),

        };

        $(".loader").removeClass("hidden");

        $.ajax({
            type: "Post",
            url: link,
            data: SaleInvoice,
            success: function (response) {
                $('#btn-updateSaleInvoice-accept').removeAttr("disabled");

                if (response === 0) {

                    ok_exit = false;
                    $("#addNewSaleInvoiceForm #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DateNotValid") {

                    ok_exit = false;
                    $("#addNewSaleInvoiceForm #Date-valid").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DataNotValid") {

                    ok_exit = false;
                    $("#addNewSaleInvoiceForm #ERROR_Data").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else {

                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                    if (ok_exit) {
                        ExitSale();
                    } else {
                        SetTotalPrice(response);
                    }
                }
            }
        });
    }

    function closeAddNewCustomer() {
        $('#AddNewCustomerModal').modal('hide');
        $('#AddNewCustomerModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    function closeReceivedAmountHistoryModal() {

        $('#ReceivedAmountHistoryModal').modal('hide');
        $('#ReceivedAmountHistoryModal-body').empty();
        for (let i = 0; i < Currency_list.length; i++) {

            GetReceiveAndDiscount($("#Guid").val(), Currency_list[i].Id);

        }
    }

    function ReceivedAmountHistory(id) {
        let link = "/Receive/ReceiveAmountHistoryModal?CurrencyId=" + id;

        $(".loader").removeClass("hidden");
        $('#ReceivedAmountHistoryModal').modal('toggle');
        $('#ReceivedAmountHistoryModal-body').load(link + '', function () {
            $(".modal-backdrop:last").css("z-index","1");
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });

    }

</script>