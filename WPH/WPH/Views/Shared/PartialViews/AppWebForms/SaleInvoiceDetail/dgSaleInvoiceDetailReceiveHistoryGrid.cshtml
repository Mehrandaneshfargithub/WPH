@model int
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string edit_title = Localizer["EditSaleInvoice"];
    string remove_title = Localizer["Remove"];
    string discount_title = Localizer["SaleInvoiceDiscount"];
    string cost_title = Localizer["SaleInvoiceCost"];
    string total_title = Localizer["SaleInvoiceTotalPrice"];
}

<h1 id="currencyId-receiveAmount-history" class="hidden">@Model</h1>

<script>

    let id = $("#currencyId-receiveAmount-history").text();

    function GetSaleInvoiceId() {

        return {
            SaleInvoiceId: $("#Guid").val(),
            CurrencyId: id
        }

    }

</script>

<div>
    @(Html.Kendo().Grid<WPH.Models.Receive.ReceiveAmountViewModel>()
    .Name("SaleInvoiceReceiveHistoryKendoGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {
            if((bool)ViewBag.AccessDeleteReceiveAmount)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                   $@"<a class='tooltip-error grid-btn' onClick='DeleteReceiveAmount(this);' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }


            columns.Bound(x => x.AmountTxt).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Amount"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.ReceiveDate).Format("{0: dd/MM/yyyy}").Filterable(false).Title(Localizer["Date"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(20).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Guid).Hidden();

        }
        else
        {
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(20).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.ReceiveDate).Format("{0: dd/MM/yyyy}").Filterable(false).Title(Localizer["Date"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.AmountTxt).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Amount"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            if ((bool)ViewBag.AccessDeleteReceiveAmount)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                   $@"<a class='tooltip-error grid-btn' onClick='DeleteReceiveAmount(this)' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }
        }
    })

        .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
            .PageSize(10)
            .Read(read => read.Action("GetAllReceiveAmount", "Receive").Data("GetSaleInvoiceId"))
        )
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
        .Pageable(pageable => pageable
        .Input(true)
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5)
        .Numeric(true)) // Enable paging
        .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;overflow:auto" }) // Enable sorting
    )
</div>

<script>

    function Total_Databound(total) {
        let text = "";
        if (total != null) {

            let res = total.toString().split("_");
            for (let i = 0; i < res.length; i++) {
                text += "<div style=''>" + res[i] + " </div>";
            }
        }
        return text;
    }

    function DeleteReceiveAmount(element) {

        let guid = $(element).attr('data-id');


        bootbox.confirm({
            message: "Delete This Record?",
            className: 'bootbox-class MyFont-Sarchia-grid',
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'k-primary k-button'
                },
                cancel: {
                    label: 'No',
                    className: 'k-button'
                }
            },
            callback: function (result) {

                if (result) {

                    $.ajax({
                        data: { Id: guid },
                        url: "/Receive/RemoveReceiveAmount",
                        type: "Post",
                        success: function (response) {
                            if (response != 0) {

                                $("#SaleInvoiceReceiveHistoryKendoGrid").find(".k-i-reload").click();

                            }
                        }
                    });


                }
                else {
                    return;
                }
            }
        })

    }

</script>