
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer


@{
    string edit_title = Localizer["EditProduct"];
    string remove_title = Localizer["RemoveProduct"];
}

<input id="TotalTxt" type="hidden" value="@Localizer["TotalPrice"]" />
<input id="TotalDiscountTxt" type="hidden" value="@Localizer["TotalDiscount"]" />
<input id="TotalPriceAfterDiscountTxt" type="hidden" value="@Localizer["TotalPriceAfterDiscount"]" />

<style>

    .elementBox {
        height: 100px;
        border-radius: 0.5rem;
        background-color: #fff;
        padding: 1rem;
        border: 1px solid rgba(0, 0, 0, .125);
        background-clip: border-box;
        box-shadow: rgba(146, 168, 209,0.7) 0px 0px 5px 0.1px;
        overflow-x: hidden;
        overflow-y: auto;
    }

    .elementStyle {
        overflow-wrap: break-word;
        font-size: 18px;
    }
</style>

<script>

    function onDataBound() {
        var data = this.dataSource.data();

        $.each(data, function (i, row) {
            let cont = row.get("ChildrenCount");
            if (cont == 1) {
                $('tr[data-uid="' + row.uid + '"] ').find(".k-hierarchy-cell a").remove();;
            }
        });
    }
</script>

<div>
    @(Html.Kendo().Grid<WPH.Models.ReturnPurchaseInvoiceDetail.ReturnPurchaseInvoiceDetailViewModel>()
    .Name("purchaseInvoiceDetailKendoGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {
            if ((bool)ViewBag.AccessDeleteReturnPurchaseInvoiceDetail && !(bool)(ViewBag.ReturnPurchasePaid ?? false))
            {
                columns.Bound("").Title("").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Delete_Databound(Guid,ChildrenCount)#");
            }

            if ((bool)ViewBag.AccessEditReturnPurchaseInvoiceDetail && !(bool)(ViewBag.ReturnPurchasePaid ?? false))
            {
                columns.Bound("").Title("").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Edit_Databound(Guid,ChildrenCount)#");
            }

            columns.Bound(x => x.ReasonTxt).Title(Localizer["Reason"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Reason_Databound(ReasonTxt,ChildrenCount)#");

            columns.Bound(x => x.TotalAfterDiscount).Title(Localizer["TotalAfterDiscount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            columns.Bound(x => x.Discount).Title(Localizer["Discount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("#= Discount_Databound(Discount,CurrencyName)#");
            columns.Bound(x => x.Total).Title(Localizer["Total"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("#= TotalCurrency_Databound(Total,CurrencyName)#");
            columns.Bound(x => x.PurchaseCurrency).Title(Localizer["PurchasePrice"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.FreeNum).Format("{0:#,#.##}").Title(Localizer["FreeNum"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Num).Format("{0:#,#.##}").Title(Localizer["Num"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            columns.Bound(x => x.ProductName).Title(Localizer["Product"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(20).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.ChildrenGuids).Hidden();
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.ChildrenCount).Hidden().HtmlAttributes(new { @class = "ChildrenCount" });

        }
        else
        {
            columns.Bound(x => x.ChildrenCount).Hidden().HtmlAttributes(new { @class = "ChildrenCount" });
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.ChildrenGuids).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(20).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.ProductName).Title(Localizer["Product"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            columns.Bound(x => x.Num).Format("{0:#,#.##}").Title(Localizer["Num"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.FreeNum).Format("{0:#,#.##}").Title(Localizer["FreeNum"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.PurchaseCurrency).Title(Localizer["PurchasePrice"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Total).Title(Localizer["Total"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("#= TotalCurrency_Databound(Total,CurrencyName)#");
            columns.Bound(x => x.Discount).Title(Localizer["Discount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("#= Discount_Databound(Discount,CurrencyName)#");

            columns.Bound(x => x.TotalAfterDiscount).Title(Localizer["TotalAfterDiscount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            columns.Bound(x => x.ReasonTxt).Title(Localizer["Reason"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Reason_Databound(ReasonTxt,ChildrenCount)#");


            if ((bool)ViewBag.AccessEditReturnPurchaseInvoiceDetail && !(bool)(ViewBag.ReturnPurchasePaid ?? false))
            {
                columns.Bound("").Title("").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Edit_Databound(Guid,ChildrenCount)#");
            }

            if ((bool)ViewBag.AccessDeleteReturnPurchaseInvoiceDetail && !(bool)(ViewBag.ReturnPurchasePaid ?? false))
            {
                columns.Bound("").Title("").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Delete_Databound(Guid,ChildrenCount)#");
            }
        }
    })
    .ClientDetailTemplateId("template")
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
        .PageSize(1000)
        .Read(read => read.Action("GetAll", "ReturnPurchaseInvoiceDetail").Data("GetReturnPurchaseInvoiceId"))
    )
    .Events(events => events
            .DataBound("onDataBound")
        )
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
    .Pageable(pageable => pageable
    .Input(false)
    .Refresh(true)
    .PageSizes(false)
    .ButtonCount(5)
    .Numeric(true)) // Enable paging
    .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;overflow:auto" }) // Enable sorting
    )



    <script id="template" type="text/kendo-tmpl">

        #if(ChildrenCount>1)
        {#@(Html.Kendo().Grid<WPH.Models.ReturnPurchaseInvoiceDetail.SubReturnPurchaseInvoiceDetailViewModel>()
            .Name("kendoGrid_#=Index#")
            .Columns(columns =>
            {

                if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
                {
                    if ((bool)ViewBag.AccessDeleteReturnPurchaseInvoiceDetail && !(bool)(ViewBag.ReturnPurchasePaid ?? false))
                    {

                        columns.Bound("").Title("").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("\\#= Delete_Databound(SubGuid,0)\\#");

                    }

                    if ((bool)ViewBag.AccessEditReturnPurchaseInvoiceDetail && !(bool)(ViewBag.ReturnPurchasePaid ?? false))
                    {

                        columns.Bound("").Title("").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("\\#= Edit_Databound(SubGuid,0)\\#");

                    }

                    columns.Bound(o => o.SubReasonTxt).Title(Localizer["Reason"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubTotalAfterDiscount).Title(Localizer["TotalAfterDiscount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubDiscount).Title(Localizer["Discount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("\\#= SubDiscount_Databound(SubDiscount)\\#");
                    columns.Bound(o => o.SubTotal).Title(Localizer["Total"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("\\#= SubTotal_Databound(SubTotal)\\#");
                    columns.Bound(o => o.SubPurchaseCurrency).Title(Localizer["PurchasePrice"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubFreeNum).Title(Localizer["FreeNum"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubNum).Title(Localizer["Num"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubProductName).Title(Localizer["Product"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubIndex).Filterable(false).Width(20).Title(" ").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubGuid).Hidden();

                }
                else
                {
                    columns.Bound(o => o.SubGuid).Hidden();
                    columns.Bound(o => o.SubIndex).Filterable(false).Title(" ").Width(20).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
                    columns.Bound(o => o.SubProductName).Title(Localizer["Product"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubNum).Title(Localizer["Num"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubFreeNum).Title(Localizer["FreeNum"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubPurchaseCurrency).Title(Localizer["PurchasePrice"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubTotal).Title(Localizer["Total"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("\\#= SubTotal_Databound(SubTotal)\\#");
                    columns.Bound(o => o.SubDiscount).Title(Localizer["Discount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("\\#= SubDiscount_Databound(SubDiscount)\\#");
                    columns.Bound(o => o.SubTotalAfterDiscount).Title(Localizer["TotalAfterDiscount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                    columns.Bound(o => o.SubReasonTxt).Title(Localizer["Reason"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

                    if ((bool)ViewBag.AccessEditReturnPurchaseInvoiceDetail && !(bool)(ViewBag.ReturnPurchasePaid ?? false))
                    {
                        columns.Bound("").Title("").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("\\#= Edit_Databound(SubGuid,0)\\#");

                    }

                    if ((bool)ViewBag.AccessDeleteReturnPurchaseInvoiceDetail && !(bool)(ViewBag.ReturnPurchasePaid ?? false))
                    {
                        columns.Bound("").Title("").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("\\#= Delete_Databound(SubGuid,0)\\#");

                    }
                }
            })

            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(100)
                .Read(read => read.Action("GetAllChildren", "ReturnPurchaseInvoiceDetail", new { children = "#=ChildrenGuids#" }))
            )
            //.Filterable(ftb => ftb.Mode(GridFilterMode.Row))
            //.Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
            .Pageable() // Enable paging
            .Sortable()
            .ToClientTemplate()
            )#}
        else
        {# #}#

    </script>

</div>
<div id="purchaseInvoiceDetailTotalPrice">

</div>

<script>

    function TotalCurrency_Databound(Total, CurrencyName) {

        if (Total == 0)
            return 0;

        return `<div style="white-space: nowrap;margin: 0px 2px;"> ${CurrencyName} ${parseFloat(Total).toLocaleString('en')} </div>`;
    }

    function SubTotal_Databound(Total) {

        return `<div style="white-space: nowrap;margin: 0px 2px;"> ${Total} </div>`;
    }

    function SubDiscount_Databound(Discount) {

        return `<div style="white-space: nowrap;margin: 0px 2px;"> ${Discount} </div>`;
    }


    function Discount_Databound(Discount, CurrencyName) {

        if (Discount == 0)
            return 0;

        return `<div style="white-space: nowrap;margin: 0px 2px;"> ${CurrencyName} ${parseFloat(Discount).toLocaleString('en')} </div>`;
    }


    function Reason_Databound(ReasonTxt, ChildrenCount) {

        if (ChildrenCount > 1) {
            return "";
        }

        return ReasonTxt;
    }

    function Delete_Databound(Guid, ChildrenCount) {

        if (ChildrenCount > 1) {
            return "";
        }

        return `<a class='tooltip-error grid-btn' onClick='ReturnPurchaseInvoiceDetailDeleteFunction(this)' data-id='${Guid}' data-rel='tooltip' title='@remove_title' data-original-title='Delete'>
                    <span class='red'>
                        <i class='ace-icon fa fa-trash-can bigger-120'></i>
                    </span>
                </a>`;
    }

    function Edit_Databound(Guid, ChildrenCount) {

        if (ChildrenCount > 1) {
            return "";
        }

        return `<a class='tooltip-success grid-btn edit' onClick='EditReturnPurchaseInvoiceDetail(this);' data-id='${Guid}' data-rel='tooltip' title='@edit_title' data-original-title='Edit'>
                    <span class='green'>
                        <i class='ace-icon fa fa-pencil bigger-120'></i>
                    </span>
                </a>`;
    }

    $(document).ready(function () {

        $("#purchaseInvoiceDetailKendoGrid").on("dblclick", "tr.k-state-selected", function (element) {

            $("#purchaseInvoiceDetailKendoGrid").find("tr.k-state-selected td a.edit").click();

        });
    })

    function hiddenArrow() {
        let all = $(".k-hierarchy-cell");

        for (let i = 0; i < all.length; i++) {
            let su = $(all[i]).closest('td').next('td').find('.ChildrenCount');
            console.log(su);
        }
    }

</script>
