@model Guid

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer


@{
    string font = "", pull = "", direction = "";
    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-left ";
        direction = " ";
    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-right ";
        direction = " direction:rtl;";
    }
}


<input type="hidden" id="ShowProductName" value="@ViewBag.ProductName" />
<input type="hidden" id="ProductIdHelper"  />
<script>

    function MaterialProductHistoryParams() {

        return {
            clinicSectionId: $('#ClinicSectionId').val(),
            productId: '@Model'
        };

    }

</script>

<div>
    <div>
        <div class="row" style="@direction ">

            <div class="col-sm-12" style="padding: 0; margin-bottom: 1rem; display: flex; align-items:flex-end; ">

                <div class="col-sm-2">
                    <label class="block clearfix @font">
                        <label for="form-field-8">@Localizer["Type"] : </label>
                        <span class="block input-icon input-icon-right">
                            @(Html.Kendo().DropDownList()
                            .Name("TypeFilter")
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Filter("contains")
                            .OptionLabel(" ")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetAllProductReportFilter", "Product");
                                })
                                .ServerFiltering(false);
                            })
                            .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem",onchange= "TypeFilterChange()" })
                                )
                        </span>

                    </label>
                </div>

                <div id="" class="col-sm-2 ">
                    <div id="" class="">
                        <label class="block clearfix @font">
                            <label for="form-field-8">@Localizer["Currency"] : </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().DropDownList()
                                .Name("CurrencyIdFilter")
                                .DataTextField("Name")
                                .DataValueField("Id")
                                .OptionLabel(" ")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAllCurrencies", "BaseInfo");
                                    })
                                    .ServerFiltering(false);
                                })
                                .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "TypeFilterChange()" })
                                    )
                            </span>

                        </label>
                    </div>
                </div>

                <div id="" class="col-sm-2 ">
                    <div id="" class="">
                        <label class="block clearfix @font">
                            <label for="form-field-8"> </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().DropDownList()
                                .Name("ReportYearFilter")
                                .DataTextField("Name")
                                .DataValueField("Id")
                                .Value(DateTime.Now.Year.ToString())
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAllSupplierYearFilter", "Supplier");
                                    })
                                    .ServerFiltering(false);
                                })
                                .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "yearFilterChange()" })
                                )
                            </span>

                        </label>
                    </div>
                </div>


                <div id="report_time_filter_cotainer" class="col-sm-6 hidden" style="padding: 0; display: flex;align-items:flex-end; ">

                    <div class="col-sm-5 " style="">
                        <label class="block clearfix">
                            <label for="form-field-8">@Localizer["FromDate"]: </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().DatePicker()
                                .Name("KendoFromDate")
                                .Value(DateTime.Now)
                                .Format("dd/MM/yyyy")
                                .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "dateTimePickerWorkWithSpace(this)" })
                                )
                            </span>
                        </label>
                    </div>

                    <div class="col-sm-5 " style="">
                        <label class="block clearfix">
                            <label for="form-field-8">@Localizer["ToDate"]: </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().DatePicker()
                                .Name("KendoDateTo")
                                .Value(DateTime.Now)
                                .Format("dd/MM/yyyy")
                                .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "dateTimePickerWorkWithSpace(this)" })
                                )
                            </span>
                        </label>
                    </div>

                    <div id="" class="col-sm-2 " style="">

                        @(Html.Kendo().Button()
                    .Name("btn-ReportSearch-account")
                    .HtmlAttributes(new { style = "font-size:1.5rem;padding:0.7rem;margin-bottom:5px;", type = "button", @class = "k-primary ", onclick = "btnReportSearchClick()" })
                    .Content("<i class='fa fa-search'></i>"))

                    </div>

                </div>

            </div>



        </div>
    </div>

    <div id="CardexReportContent" class="ReportContent hidden row Grid-Content @font">

        @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Product/dgProductCardexReportGrid.cshtml")
    </div>

    <div id="PurchaseReportContent" class="ReportContent hidden row Grid-Content @font">

        @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Product/dgProductPurchaseReportGrid.cshtml")
    </div>

    <div id="SaleReportContent" class="ReportContent hidden row Grid-Content @font">

        @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Product/dgProductSaleReportGrid.cshtml")
    </div>

    <div id="ReturnPurchaseReportContent" class="ReportContent hidden row Grid-Content @font">

        @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Product/dgProductReturnPurchaseReportGrid.cshtml")
    </div>

    <div id="ReturnSaleReportContent" class="ReportContent hidden row Grid-Content @font">

        @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Product/dgProductReturnSaleReportGrid.cshtml")
    </div>

    <div id="TransferReportContent" class="ReportContent hidden row Grid-Content @font">

        @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Product/dgProductTransferReportGrid.cshtml")
    </div>

    <div id="ReceiveReportContent" class="ReportContent hidden row Grid-Content @font">

        @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Product/dgProductReceiveReportGrid.cshtml")
    </div>

</div>

<script>


    $(document).ready(function () {

        $('#ProductReports-productName').text($("#ShowProductName").val());

    });


    function GetCardexReportContent(filter) {

        $.ajax({
            type: "Get",
            url: '/Product/GetProductCardexReport',
            data: filter,
            success: function (response) {

                if (response !== 0) {
                    $("#cardexReportKendoGrid").data("kendoGrid").setDataSource(response);
                } else {
                    bootbox.alert({
                        message: "@Localizer["ERROR_InsertWrong"]",
                        className: 'bootbox-class'
                    });
                }
            }
        });
    }

    function GetPurchaseReportContent(filter) {

        $.ajax({
            type: "Get",
            url: '/Product/GetProductPurchaseReport',
            data: filter,
            success: function (response) {

                if (response !== 0) {
                    $("#purchaseReportKendoGrid").data("kendoGrid").setDataSource(response);
                } else {
                    bootbox.alert({
                        message: "@Localizer["ERROR_InsertWrong"]",
                        className: 'bootbox-class'
                    });
                }
            }
        });
    }

    function GetSaleReportContent(filter) {

        $.ajax({
            type: "Get",
            url: '/Product/GetProductSaleReport',
            data: filter,
            success: function (response) {

                if (response !== 0) {
                    $("#saleReportKendoGrid").data("kendoGrid").setDataSource(response);
                } else {
                    bootbox.alert({
                        message: "@Localizer["ERROR_InsertWrong"]",
                        className: 'bootbox-class'
                    });
                }
            }
        });
    }

    function GetReturnPurchaseReportContent(filter) {

        $.ajax({
            type: "Get",
            url: '/Product/GetProductReturnPurchaseReport',
            data: filter,
            success: function (response) {

                if (response !== 0) {
                    $("#returnPurchaseReportKendoGrid").data("kendoGrid").setDataSource(response);
                } else {
                    bootbox.alert({
                        message: "@Localizer["ERROR_InsertWrong"]",
                        className: 'bootbox-class'
                    });
                }
            }
        });
    }

    function GetReturnSaleReportContent(filter) {

        $.ajax({
            type: "Get",
            url: '/Product/GetProductReturnSaleReport',
            data: filter,
            success: function (response) {

                if (response !== 0) {
                    $("#returnSaleReportKendoGrid").data("kendoGrid").setDataSource(response);
                } else {
                    bootbox.alert({
                        message: "@Localizer["ERROR_InsertWrong"]",
                        className: 'bootbox-class'
                    });
                }
            }
        });
    }

    function GetTransferReportContent(filter) {

        $.ajax({
            type: "Get",
            url: '/Product/GetProductTransferReport',
            data: filter,
            success: function (response) {

                if (response !== 0) {
                    $("#transferReportKendoGrid").data("kendoGrid").setDataSource(response);
                } else {
                    bootbox.alert({
                        message: "@Localizer["ERROR_InsertWrong"]",
                        className: 'bootbox-class'
                    });
                }
            }
        });
    }

    function GetReceiveReportContent(filter) {

        $.ajax({
            type: "Get",
            url: '/Product/GetProductReceiveReport',
            data: filter,
            success: function (response) {

                if (response !== 0) {
                    $("#receiveReportKendoGrid").data("kendoGrid").setDataSource(response);
                } else {
                    bootbox.alert({
                        message: "@Localizer["ERROR_InsertWrong"]",
                        className: 'bootbox-class'
                    });
                }
            }
        });
    }


    function TypeFilterChange() {
        let type = $("#TypeFilter").val();

        let filter = {
            ClinicSectionId: $("#ClinicSectionId").val(),
            ProductId: '@Model',
            CurrencyId: $("#CurrencyIdFilter").val(),
            Year: $("#ReportYearFilter").val(),
            DateFromTxt: $("#KendoFromDate").val(),
            DateToTxt: $("#KendoDateTo").val()
        }

        //$("#cardexReportKendoGrid").data("kendoGrid").setDataSource('');
        //$("#purchaseReportKendoGrid").data("kendoGrid").setDataSource('');
        //$("#saleReportKendoGrid").data("kendoGrid").setDataSource('');
        //$("#returnPurchaseReportKendoGrid").data("kendoGrid").setDataSource('');
        //$("#returnSaleReportKendoGrid").data("kendoGrid").setDataSource('');
        //$("#transferReportKendoGrid").data("kendoGrid").setDataSource('');
        //$("#receiveReportKendoGrid").data("kendoGrid").setDataSource('');

        $(".ReportContent").addClass('hidden');
        
        switch (type.toString()) {
            case "1": {
                $("#CardexReportContent").removeClass('hidden');
                GetCardexReportContent(filter);
            }
                break;
            case "2": {
                $("#PurchaseReportContent").removeClass('hidden');
                GetPurchaseReportContent(filter);
            }
                break;
            case "3": {
                $("#SaleReportContent").removeClass('hidden');
                GetSaleReportContent(filter);
            }
                break;
            case "4": {
                $("#ReturnPurchaseReportContent").removeClass('hidden');
                GetReturnPurchaseReportContent(filter);
            }
                break;
            case "5": {
                $("#ReturnSaleReportContent").removeClass('hidden');
                GetReturnSaleReportContent(filter);
            }
                break;
            case "6": {
                $("#TransferReportContent").removeClass('hidden');
                GetTransferReportContent(filter);
            }
                break;
            case "7": {
                $("#ReceiveReportContent").removeClass('hidden');
                GetReceiveReportContent(filter);
            }
                break;
        }
    }



    function yearFilterChange() {

        var period = $("#ReportYearFilter").data("kendoDropDownList");
        var periodValue = period.value();

        if (periodValue == 0) {
            $("#report_time_filter_cotainer").removeClass("hidden");

            let date = $("#KendoFromDate").data("kendoDatePicker");
            date.element.focus();
            date.element.select();

        } else {
            $("#report_time_filter_cotainer").addClass("hidden");

            TypeFilterChange();
        }

    }

    function btnReportSearchClick() {

        TypeFilterChange();
    }

</script>