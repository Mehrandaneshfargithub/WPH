@model WPH.Models.CustomerAccount.CustomerAccountFilterViewModel

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string font = "", pull = "", dir = "";

    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-left ";
        dir = " ";
        <h3 id="newReceiveText" class="hidden">@Localizer["New"] @Localizer["Receive"]</h3>
        <h3 id="newPartialReceiveText" class="hidden">@Localizer["New"] @Localizer["PartialReceive"]</h3>
        <h3 id="editReceiveText" class="hidden">@Localizer["Edit"] @Localizer["Receive"]</h3>
        <h3 id="editPartialReceiveText" class="hidden">@Localizer["Edit"] @Localizer["PartialReceive"]</h3>
    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-right ";
        dir = " direction:rtl; ";
        <h3 id="newReceiveText" class="hidden">@Localizer["Receive"] @Localizer["New"]</h3>
        <h3 id="newPartialReceiveText" class="hidden">@Localizer["PartialReceive"] @Localizer["New"]</h3>
        <h3 id="editReceiveText" class="hidden">@Localizer["Receive"] @Localizer["Edit"]</h3>
        <h3 id="editPartialReceiveText" class="hidden">@Localizer["PartialReceive"] @Localizer["Edit"]</h3>
    }
}

<div class="row page-header ">
    <div class="@pull">
        <h1 class="@font" style="font-size: 2.3rem">
            @Localizer["AccountInCustomers"]
        </h1>

    </div>
</div><!-- /.page-header -->

<style>


    @@media (max-width:767px) {
        .modal-dialog {
            width: 70vw;
            margin: 30px auto
        }

        .modal-content {
            -webkit-box-shadow: 0 5px 15px rgba(0,0,0,.5);
            box-shadow: 0 5px 15px rgba(0,0,0,.5)
        }

        .modal-sm {
            width: 300px
        }

        #AddReceiveModal-body {
            width: 90vw;
        }
        #AddReceiveInvoiceModal-body {
            width: 95vw;
        }
       
    }

    @@media (min-width:768px) {
        #AddReceiveModal-body {
            width: 60vw;
        }
        #AddReceiveInvoiceModal-body {
            width: 95vw;
        }
        
    }
</style>

<div class="row" style="@dir ">

    <div class="col-sm-12" style="padding: 0; margin-bottom: 1rem; display: flex; align-items:flex-end;flex-wrap:wrap ">

        <div class="col-xs-6 col-sm-4 col-md-2">
            <label class="block clearfix @font">
                <label for="form-field-8">@Localizer["Customers"] : </label>
                <span class="block input-icon input-icon-right">
                    @(Html.Kendo().DropDownList()
                    .Name("CustomerIdFilter")
                    .DataTextField("Name")
                    .DataValueField("Guid")
                    .Filter("contains")
                    .Value(Model.CustomerId.ToString())
                    .OptionLabel(" ")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetAllCustomers", "Customer");
                        })
                        .ServerFiltering(false);
                    })
                    .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem",onchange= "CustomerFilterChange(true)" })
                        )
                </span>

            </label>
        </div>

        <div id="" class="col-xs-6 col-sm-4 col-md-2 ">
            <div id="currency_container" class=" hidden">
                <label class="block clearfix @font">
                    <label for="form-field-8">@Localizer["Currency"] : </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().DropDownList()
                    .Name("CurrencyIdFilter")
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .OptionLabel(" ")
                    .Value(Model.CurrencyId.ToString())
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetAllCurrencies", "BaseInfo");
                        })
                        .ServerFiltering(false);
                    })
                    .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "filterChange()" })
                        )
                    </span>

                </label>
            </div>
        </div>

        <div id="" class="col-xs-6 col-sm-4 col-md-2 ">
            <div id="CustomerFilter_container" class=" hidden">
                <label class="block clearfix @font">
                    <label for="form-field-8"> </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().DropDownList()
                    .Name("CustomerFilter")
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .Value(Model.CustomerFilter.ToString())
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetAllSupplierFilter", "Supplier");
                        })
                        .ServerFiltering(false);
                    })
                    .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "filterChange()" })
                        )
                    </span>

                </label>
            </div>
        </div>

        <div id="" class="col-xs-6 col-sm-4 col-md-2">
            <div id="yearFilter_container" class=" hidden">
                <label class="block clearfix @font">
                    <label for="form-field-8"> </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().DropDownList()
                    .Name("CustomerYearFilter")
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .Value(Model.Year.ToString())
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetAllSupplierYearFilter", "Supplier");
                        })
                        .ServerFiltering(false);
                    })
                    .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "yearFilterChange()" })
                        )
                    </span>

                </label>
            </div>
        </div>

        <div class="col-xs-6 col-sm-4 col-md-3">

            @if ((bool)ViewBag.AccessNewReceive)
            {
                @(Html.Kendo().Button()
                .Name("btn-newReceive")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right hidden" })
                .Content(Localizer["Receive"]))

                @(Html.Kendo().Button()
                .Name("btn-newInvoiceReceive")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right hidden" })
                .Content(Localizer["ReceiveByInvoice"]))

                @*@(Html.Kendo().Button()
                    .Name("btn-newPartialReceive")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right hidden" })
                    .Content(Localizer["PartialReceive"]))*@
            }

        </div>

        <div class="col-sm-1">
            @if ((bool)ViewBag.AccessPrintReceive)
            {
                <a class="pull-right" onClick="ShowReceiveReport()" style="padding:0.2rem;cursor:pointer;font-size: 25px;">
                    <span>
                        <i class="ace-icon fa fa-print align-top bigger-125"></i>
                    </span>
                </a>
            }
        </div>
    </div>


    <div id="time_filter_cotainer" class="col-sm-12 hidden" style="padding: 0; margin-bottom: 1rem; display: flex;align-items:flex-end; ">

        <div class="col-sm-2 " style="">
        </div>

        <div class="col-sm-2 " style="">
        </div>

        <div class="col-sm-2 " style="">
            <label class="block clearfix">
                <label for="form-field-8">@Localizer["FromDate"]: </label>
                <span class="block input-icon input-icon-right">
                    @(Html.Kendo().DatePicker()
                        .Name("KendoFromDate")
                        .Value(Model.DateFromTxt)
                        .Format("dd/MM/yyyy")
                        .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "dateTimePickerWorkWithSpace(this)" })
                        )
                </span>
            </label>
        </div>

        <div class="col-sm-2 " style="">
            <label class="block clearfix">
                <label for="form-field-8">@Localizer["ToDate"]: </label>
                <span class="block input-icon input-icon-right">
                    @(Html.Kendo().DatePicker()
                        .Name("KendoDateTo")
                        .Value(Model.DateToTxt)
                        .Format("dd/MM/yyyy")
                        .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "dateTimePickerWorkWithSpace(this)" })
                        )
                </span>
            </label>
        </div>

        <div id="" class="col-sm-2 " style="">

            @(Html.Kendo().Button()
                .Name("btn-search-account")
                .HtmlAttributes(new { style = "font-size:1.5rem;padding:0.7rem;margin-bottom:5px;", type = "button", @class = "k-primary ", onclick = "btnSearchClick()" })
                .Content("<i class='fa fa-search'></i>"))

        </div>

    </div>


</div>

<div id="AddReceiveModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeAddReceiveModal()" aria-hidden="true">&times;</button>
                <h3 id="AddReceiveModal-header" class="smaller lighter blue no-margin @font">
                </h3>
            </div>

            <div id="AddReceiveModal-body" class="modal-body" >
            </div>

            <div id="AmountOverFlow" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["AmountIsGreaterThanTheRem"]
            </div>

            <div id="DiscountIsGreaterThanTheAmount" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["DiscountIsGreaterThanTheAmount"]
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-AddReceiveModal-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-AddReceiveModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick="closeAddReceiveModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="AddPartialReceiveModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir">
    <div class="modal-dialog" >
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeAddPartialReceiveModal()" aria-hidden="true">&times;</button>
                <div class=" blue @font" style="display:flex;">
                    <h3 id="AddPartialReceiveModal-header" class="smaller lighter blue no-margin @font">
                    </h3>
                    &nbsp;_	&nbsp;
                    <h3 id="AddPartialReceiveModal-Customer" class="smaller lighter blue no-margin @font">
                    </h3>
                </div>

            </div>

            <div id="AddPartialReceiveModal-body" class="modal-body" style="width:90rem">
            </div>

            <div id="AmountOverFlow" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["AmountIsGreaterThanTheRem"]
            </div>

            <div id="DiscountIsGreaterThanTheAmount" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["DiscountIsGreaterThanTheAmount"]
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div id="ErrorInSelectInvoice" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ErrorInSelectInvoice"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-AddPartialReceiveModal-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-AddPartialReceiveModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeAddPartialReceiveModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="AddReceiveInvoiceModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir">
    <div class="modal-dialog" >
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeAddReceiveInvoiceModal()" aria-hidden="true">&times;</button>
                <div class=" blue @font" style="display:flex;">
                    <h3 id="AddReceiveInvoiceModal-header" class="smaller lighter blue no-margin @font">
                    </h3>
                    &nbsp;_	&nbsp;
                    <h3 id="AddReceiveInvoiceModal-Customer" class="smaller lighter blue no-margin @font">
                    </h3>
                </div>

            </div>

            <div id="AddReceiveInvoiceModal-body" class="modal-body" >
            </div>

            <div id="CurrencyConflict" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["CurrencyConflict"]
            </div>

            <div id="AmountOverFlow" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["AmountIsGreaterThanTheRem"]
            </div>

            <div id="DiscountIsGreaterThanTheAmount" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["DiscountIsGreaterThanTheAmount"]
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div id="RepeatedReceive" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["RepeatedReceive"]
            </div>

            <div id="NegativeAmount" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["NegativeAmount"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-AddReceiveInvoiceModal-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-AddReceiveInvoiceModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick="closeAddReceiveInvoiceModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="SaleInvoiceDetailModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="z-index:999;@dir">
    <div class="modal-dialog" >
        <div class="modal-content">
            <div class="modal-header" style="padding:5px">
                <button type="button" class="close" onclick="closeSaleInvoiceDetailModal()" aria-hidden="true">&times;</button>
                <div class="col-sm-3">
                    <h4 id="SaleInvoiceDetailModal-header" class="smaller lighter blue no-margin @font">
                        @Localizer["SaleInvoice"]
                    </h4>

                </div>

            </div>

            <div id="SaleInvoiceDetailModal-body" class="modal-body" style="overflow:auto">
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-SaleInvoiceDetailModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right k-primary", onclick= "SaleInvoiceDetailsSaveChanges()" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-SaleInvoiceDetailModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeSaleInvoiceDetailModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<script>
    function GetCustomerId() {
        let id = $("#CustomerIdFilter").val();
        let currid = $("#CurrencyIdFilter").val();
        let filter = $("#CustomerFilter").val();
        let year = $("#CustomerYearFilter").val();
        return {
            CustomerId: id,
            CurrencyId: currid,
            CustomerFilter: filter,
            Year: year,
            DateFromTxt: $("#KendoFromDate").val(),
            DateToTxt: $("#KendoDateTo").val()
        }
    }
</script>

<!-- Grid -->
<div class="row Grid-Content @font">
    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/CustomerAccount/dgCustomerAccountGrid.cshtml")
</div>

@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_GridAndModalLinks.cshtml")
@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_Modal.cshtml")


<script>

    $(document).ready(function () {
        CustomerFilterChange(false);
    });

    function RemoveNullAndDuplicates(main_list) {
        let unique_list = main_list.filter(function (item, index) {

            if (item == null || item == '' || item == 'null' || main_list.indexOf(item) !== index) {
                return false;
            }

            return true;
        });

        return unique_list;
    }

    function ShowReceiveReport() {
        $(".loader").removeClass("hidden");

        let link = "/CustomerAccount/ShowReport";

        $(".page-content").load(link, function (responce) {

            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        })
    }

    $('#btn-newReceive').on("click", function () {
        $("#AddReceiveModal #RepeatedReceive").addClass("hidden");
        $("#AddReceiveModal #AmountOverFlow").addClass("hidden");
        $("#AddReceiveModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
        $("#AddReceiveModal #ERROR_Data").addClass("hidden");
        $("#AddReceiveModal #ERROR_Date").addClass("hidden");
        $("#AddReceiveModal #ERROR_SomeThingWentWrong").addClass("hidden");

        var Customer = $("#CustomerIdFilter").val();
        var currency = $("#CurrencyIdFilter").val();

        var link = "/Receive/ReceiveNewModal?CustomerId=";
        $(".loader").removeClass("hidden");

        let header = $("#newReceiveText").text();
        $('#AddReceiveModal-header').text(header);

        $('#AddReceiveModal').modal('toggle');
        $('#AddReceiveModal-body').load(link + Customer + "&currencyId=" + currency + " ", function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });
    });

    $('#btn-newPartialReceive').on("click", function () {
        $("#AddPartialReceiveModal #ErrorInSelectInvoice").addClass("hidden");
        $("#AddPartialReceiveModal #AmountOverFlow").addClass("hidden");
        $("#AddPartialReceiveModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
        $("#AddPartialReceiveModal #ERROR_Data").addClass("hidden");
        $("#AddPartialReceiveModal #ERROR_Date").addClass("hidden");
        $("#AddPartialReceiveModal #ERROR_SomeThingWentWrong").addClass("hidden");

        var Customer = $("#CustomerIdFilter").val();
        var currency = $("#CurrencyIdFilter").val();

        var link = "/Receive/PartialReceiveNewModal?CustomerId=";
        $(".loader").removeClass("hidden");

        let header = $("#newPartialReceiveText").text();
        $('#AddPartialReceiveModal-header').text(header);

        $('#AddPartialReceiveModal').modal('toggle');
        $('#AddPartialReceiveModal-body').load(link + Customer + "&currencyId=" + currency + " ", function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });
    });

    $('#btn-newInvoiceReceive').on("click", function () {
        $("#AddReceiveInvoiceModal #CurrencyConflict").addClass("hidden");
        $("#AddReceiveInvoiceModal #RepeatedReceive").addClass("hidden");
        $("#AddReceiveInvoiceModal #AmountOverFlow").addClass("hidden");
        $("#AddReceiveInvoiceModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
        $("#AddReceiveInvoiceModal #ERROR_Data").addClass("hidden");
        $("#AddReceiveInvoiceModal #ERROR_Date").addClass("hidden");
        $("#AddReceiveInvoiceModal #ERROR_SomeThingWentWrong").addClass("hidden");
        $("#AddReceiveInvoiceModal #NegativeAmount").addClass("hidden");

        var Customer = $("#CustomerIdFilter").val();
        var currency = $("#CurrencyIdFilter").val();

        var link = "/Receive/ReceiveInvoiceNewModal?CustomerId=";
        $(".loader").removeClass("hidden");

        let header = $("#newReceiveText").text();
        $('#AddReceiveInvoiceModal-header').text(header);

        $('#AddReceiveInvoiceModal').modal('toggle');
        $('#AddReceiveInvoiceModal-body').load(link + Customer + "&currencyId=" + currency + " ", function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });
    });

    function EditReceive(element) {

        var link = "/Receive/ReceiveEditModal?Id=";
        var Id = $(element).attr('data-id');
        var ReceiveType = $(element).attr('data-ReceiveType');

        $(".loader").removeClass("hidden");

        if (ReceiveType == "TotalReceive") {
            $("#AddReceiveModal #RepeatedReceive").addClass("hidden");
            $("#AddReceiveModal #AmountOverFlow").addClass("hidden");
            $("#AddReceiveModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
            $("#AddReceiveModal #ERROR_Data").addClass("hidden");
            $("#AddReceiveModal #ERROR_Date").addClass("hidden");
            $("#AddReceiveModal #ERROR_SomeThingWentWrong").addClass("hidden");

            let header = $("#editReceiveText").text();
            $('#AddReceiveModal-header').text(header);

            $('#AddReceiveModal').modal('toggle');
            $('#AddReceiveModal-body').load(link + Id + '', function () {
                $(".loader").fadeIn("slow");
                $(".loader").addClass("hidden");
            });

        } else if (ReceiveType == "PartialReceive") {
            $("#AddPartialReceiveModal #ErrorInSelectInvoice").addClass("hidden");
            $("#AddPartialReceiveModal #AmountOverFlow").addClass("hidden");
            $("#AddPartialReceiveModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
            $("#AddPartialReceiveModal #ERROR_Data").addClass("hidden");
            $("#AddPartialReceiveModal #ERROR_Date").addClass("hidden");
            $("#AddPartialReceiveModal #ERROR_SomeThingWentWrong").addClass("hidden");
            $("#AddPartialReceiveModal #NegativeAmount").addClass("hidden");

            let header = $("#editPartialReceiveText").text();
            $('#AddPartialReceiveModal-header').text(header);

            $('#AddPartialReceiveModal').modal('toggle');
            $('#AddPartialReceiveModal-body').load(link + Id + '', function () {
                $(".loader").fadeIn("slow");
                $(".loader").addClass("hidden");
            });

        } else {
            $("#AddReceiveInvoiceModal #CurrencyConflict").addClass("hidden");
            $("#AddReceiveInvoiceModal #RepeatedReceive").addClass("hidden");
            $("#AddReceiveInvoiceModal #AmountOverFlow").addClass("hidden");
            $("#AddReceiveInvoiceModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
            $("#AddReceiveInvoiceModal #ERROR_Data").addClass("hidden");
            $("#AddReceiveInvoiceModal #ERROR_Date").addClass("hidden");
            $("#AddReceiveInvoiceModal #ERROR_SomeThingWentWrong").addClass("hidden");
            $("#AddReceiveInvoiceModal #NegativeAmount").addClass("hidden");

            let header = $("#editReceiveText").text();
            $('#AddReceiveInvoiceModal-header').text(header);

            $('#AddReceiveInvoiceModal').modal('toggle');
            $('#AddReceiveInvoiceModal-body').load(link + Id + '', function () {
                $(".loader").fadeIn("slow");
                $(".loader").addClass("hidden");
            });

        }

    }

    $('#btn-AddReceiveModal-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#AddReceiveModal #RepeatedReceive").addClass("hidden");
        $("#AddReceiveModal #AmountOverFlow").addClass("hidden");
        $("#AddReceiveModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
        $("#AddReceiveModal #ERROR_Data").addClass("hidden");
        $("#AddReceiveModal #ERROR_Date").addClass("hidden");
        $("#AddReceiveModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#AddReceiveModal .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#AddReceiveModal .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    $('#btn-AddReceiveModal-accept').removeAttr("disabled");
                    isEmmpty = false;
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        var link = "/Receive/AddOrUpdate";

        var Receive_amount = [];

        var Receive = {
            Amount: $("#AddReceiveModal #Amount").val(),
            BaseAmount: $("#AddReceiveModal #BaseAmount").val(),
            DestAmount: $("#AddReceiveModal #DestAmount").val(),
            Discount: $("#AddReceiveModal #Discount").val(),
            BaseCurrencyId: $("#AddReceiveModal #BaseCurrencyId").val(),
            CurrencyId: $("#AddReceiveModal #CurrencyId").val()
        };
        Receive_amount.push(Receive);

        var data = {
            Guid: $("#AddReceiveModal #Guid").val(),
            CustomerId: $("#AddReceiveModal #CustomerId").val(),
            ReceiveDateTxt: $("#AddReceiveModal #ReceiveDateTxt").val(),
            Description: $("#AddReceiveModal #Description").val(),
            ReceiveType: $("#AddReceiveModal #ReceiveType").val(),
            ReceiveAmounts: Receive_amount
        };

        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: data,
            success: function (response) {
                $('#btn-AddReceiveModal-accept').removeAttr("disabled");

                if (response !== 0) {

                    if (response === "DateNotValid") {

                        $("#AddReceiveModal #ERROR_Date").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DataNotValid") {

                        $("#AddReceiveModal #ERROR_Data").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DiscountIsGreaterThanTheAmount") {

                        $("#AddReceiveModal #DiscountIsGreaterThanTheAmount").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "AmountOverFlow") {

                        $("#AddReceiveModal #AmountOverFlow").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else {

                        $('#AddReceiveModal').modal('hide');
                        $(".modal-backdrop:last").remove();
                        $('#AddReceiveModal-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                        $("#kendoGrid .k-pager-refresh")[0].click();

                    }
                } else {

                    $("#AddReceiveModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                }
            }
        });
    });

    $('#btn-AddPartialReceiveModal-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#AddPartialReceiveModal #ErrorInSelectInvoice").addClass("hidden");
        $("#AddPartialReceiveModal #AmountOverFlow").addClass("hidden");
        $("#AddPartialReceiveModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
        $("#AddPartialReceiveModal #ERROR_Data").addClass("hidden");
        $("#AddPartialReceiveModal #ERROR_Date").addClass("hidden");
        $("#AddPartialReceiveModal #ERROR_SomeThingWentWrong").addClass("hidden");
        $("#AddPartialReceiveModal #NegativeAmount").addClass("hidden");

        $('#AddPartialReceiveModal .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#AddPartialReceiveModal .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    $('#btn-AddPartialReceiveModal-accept').removeAttr("disabled");
                    isEmmpty = false;
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        var link = "/Receive/AddOrUpdatePartialReceive";
        var invoiceIds = [];
        var viewModel = {
            Guid: $("#AddPartialReceiveModal #Guid").val(),
            CustomerId: $("#AddPartialReceiveModal #CustomerId").val(),
            BaseCurrencyId: $("#AddPartialReceiveModal #BaseCurrencyId").val(),
            CurrencyId: $("#AddPartialReceiveModal #CurrencyId").val(),
            ReceiveDateTxt: $("#AddPartialReceiveModal #ReceiveDateTxt").val(),
            Amount: $("#AddPartialReceiveModal #Amount").val(),
            Discount: $("#AddPartialReceiveModal #Discount").val(),
            BaseAmount: $("#AddPartialReceiveModal #BaseAmount").val(),
            DestAmount: $("#AddPartialReceiveModal #DestAmount").val(),
            Description: $("#AddPartialReceiveModal #Description").val(),
        };

        $('.select_ReceiveInvoice').each(function () {
            let guid = $(this).attr("data-id");
            if (guid)
                invoiceIds.push(guid);
        });

        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: {
                viewModel: viewModel,
                invoiceIds: invoiceIds
            },
            success: function (response) {
                $('#btn-AddPartialReceiveModal-accept').removeAttr("disabled");

                if (response !== 0) {

                    if (response === "DateNotValid") {

                        $("#AddPartialReceiveModal #ERROR_Date").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DataNotValid") {

                        $("#AddPartialReceiveModal #ERROR_Data").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "ErrorInSelectInvoice") {

                        $("#AddPartialReceiveModal #ErrorInSelectInvoice").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DiscountIsGreaterThanTheAmount") {

                        $("#AddPartialReceiveModal #DiscountIsGreaterThanTheAmount").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "AmountOverFlow") {

                        $("#AddPartialReceiveModal #AmountOverFlow").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "NegativeAmount") {

                        $("#AddPartialReceiveModal #NegativeAmount").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else {

                        $('#AddPartialReceiveModal').modal('hide');
                        $(".modal-backdrop:last").remove();
                        $('#AddPartialReceiveModal-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                        $("#kendoGrid .k-pager-refresh")[0].click();

                    }
                } else {

                    $("#AddPartialReceiveModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                }
            }
        });
    });

    $('#btn-AddReceiveInvoiceModal-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#AddReceiveInvoiceModal #CurrencyConflict").addClass("hidden");
        $("#AddReceiveInvoiceModal #RepeatedReceive").addClass("hidden");
        $("#AddReceiveInvoiceModal #AmountOverFlow").addClass("hidden");
        $("#AddReceiveInvoiceModal #DiscountIsGreaterThanTheAmount").addClass("hidden");
        $("#AddReceiveInvoiceModal #ERROR_Data").addClass("hidden");
        $("#AddReceiveInvoiceModal #ERROR_Date").addClass("hidden");
        $("#AddReceiveInvoiceModal #ERROR_SomeThingWentWrong").addClass("hidden");
        $("#AddReceiveInvoiceModal #NegativeAmount").addClass("hidden");

        $('#AddReceiveInvoiceModal .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#AddReceiveInvoiceModal .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    $('#btn-AddReceiveInvoiceModal-accept').removeAttr("disabled");
                    isEmmpty = false;
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        var link = "/Receive/AddOrUpdateInvoice";
        var invoiceIds = [];
        var returnIds = [];
        var ReceiveAmounts = [];

        $('#AddReceiveInvoiceModal .ReceiveLine').each(function () {
            let line = $(this).attr("data-line");
            if (line) {
                let Receive = {
                    BaseAmount: $(`#AddReceiveInvoiceModal #BaseAmount_${line}`).val(),
                    DestAmount: $(`#AddReceiveInvoiceModal #DestAmount_${line}`).val(),
                    Discount: $(`#AddReceiveInvoiceModal #Discount_${line}`).val(),
                    CurrencyId: $(`#AddReceiveInvoiceModal #Currency_${line}`).val(),
                    BaseCurrencyName: $(`#AddReceiveInvoiceModal #BaseCurrency_${line}`).text()
                };

                ReceiveAmounts.push(Receive);
            }
        });

        var viewModel = {
            Guid: $("#AddReceiveInvoiceModal #Guid").val(),
            CustomerId: $("#AddReceiveInvoiceModal #CustomerId").val(),
            BaseCurrencyId: $("#AddReceiveInvoiceModal #BaseCurrencyId").val(),
            CurrencyId: $("#AddReceiveInvoiceModal #CurrencyId").val(),
            ReceiveDateTxt: $("#AddReceiveInvoiceModal #ReceiveDateTxt").val(),
            Discount: $("#AddReceiveInvoiceModal #Discount").val(),
            BaseAmount: $("#AddReceiveInvoiceModal #BaseAmount").val(),
            DestAmount: $("#AddReceiveInvoiceModal #DestAmount").val(),
            Description: $("#AddReceiveInvoiceModal #Description").val(),
            ReceiveAmounts: ReceiveAmounts
        };

        $('.select_receiveInvoice').each(function () {
            console.log("select_receiveInvoice");
            let guid = $(this).attr("data-id");
            if (guid)
                invoiceIds.push(guid);
        });

        $('.select_return_receiveInvoice').each(function () {
            let guid = $(this).attr("data-id");
            if (guid)
                returnIds.push(guid);
        });

        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: {
                viewModel: viewModel,
                invoiceIds: invoiceIds,
                returnIds: returnIds
            },
            success: function (response) {
                $('#btn-AddReceiveInvoiceModal-accept').removeAttr("disabled");

                if (response !== 0) {

                    if (response === "DateNotValid") {

                        $("#AddReceiveInvoiceModal #ERROR_Date").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "CurrencyConflict") {

                        $("#AddReceiveInvoiceModal #CurrencyConflict").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DataNotValid") {

                        $("#AddReceiveInvoiceModal #ERROR_Data").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "RepeatedReceive") {

                        $("#AddReceiveInvoiceModal #RepeatedReceive").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DiscountIsGreaterThanTheAmount") {

                        $("#AddReceiveInvoiceModal #DiscountIsGreaterThanTheAmount").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "AmountOverFlow") {

                        $("#AddReceiveInvoiceModal #AmountOverFlow").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "NegativeAmount") {

                        $("#AddReceiveInvoiceModal #NegativeAmount").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else {

                        $('#AddReceiveInvoiceModal').modal('hide');
                        $(".modal-backdrop:last").remove();
                        $('#AddReceiveInvoiceModal-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                        $("#kendoGrid .k-pager-refresh")[0].click();

                    }
                } else {

                    $("#AddReceiveInvoiceModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                }
            }
        });
    });

    function closeAddPartialReceiveModal() {
        $('#AddPartialReceiveModal').modal('hide');
        $('#AddPartialReceiveModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    function closeAddReceiveInvoiceModal() {
        $('#AddReceiveInvoiceModal').modal('hide');
        $('#AddReceiveInvoiceModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    function closeAddReceiveModal() {
        $('#AddReceiveModal').modal('hide');
        $('#AddReceiveModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    function CustomerFilterChange(refresh) {
        var Customer_id = $("#CustomerIdFilter").val();

        if (Customer_id == '') {
            $("#currency_container").addClass("hidden");
            $("#CustomerFilter_container").addClass("hidden");
            $("#yearFilter_container").addClass("hidden");
            $("#btn-newReceive").addClass("hidden");
            $("#btn-newInvoiceReceive").addClass("hidden");
            $("#btn-newPartialReceive").addClass("hidden");
            $("#time_filter_cotainer").addClass("hidden");


        } else {
            $("#currency_container").removeClass("hidden");
            $("#CustomerFilter_container").removeClass("hidden");
            $("#yearFilter_container").removeClass("hidden");
            $("#btn-newReceive").removeClass("hidden");
            $("#btn-newInvoiceReceive").removeClass("hidden");
            $("#btn-newPartialReceive").removeClass("hidden");

            var period = $("#CustomerYearFilter").data("kendoDropDownList");
            var periodValue = period.value();

            if (periodValue == 0) {
                $("#time_filter_cotainer").removeClass("hidden");

                let date = $("#KendoFromDate").data("kendoDatePicker");
                date.element.focus();
                date.element.select();
            }

            if (refresh)
                $("#kendoGrid .k-pager-refresh")[0].click();

        }
    }

    function yearFilterChange() {

        var period = $("#CustomerYearFilter").data("kendoDropDownList");
        var periodValue = period.value();

        if (periodValue == 0) {
            $("#time_filter_cotainer").removeClass("hidden");

            let date = $("#KendoFromDate").data("kendoDatePicker");
            date.element.focus();
            date.element.select();

        } else {
            $("#time_filter_cotainer").addClass("hidden");

            $("#kendoGrid .k-pager-refresh")[0].click();
        }

    }

    function btnSearchClick() {
        $("#kendoGrid .k-pager-refresh")[0].click();
    }

    function filterChange() {
        $("#kendoGrid .k-pager-refresh")[0].click();
    }

    function GoToReturn(element) {

        $(".loader").removeClass("hidden");
        var Id = $(element).attr('data-id');
        var link = `/ReturnSaleInvoice/EditModal?Id=${Id}&goBack=true`;

        SaveLastPositionToStorage();
        $(".page-content").load(link, function (responce) {

            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        })

    }

    function SaveLastPositionToStorage() {
        let filters = GetCustomerId();

        sessionStorage.CustomerId = filters.CustomerId;
        sessionStorage.CurrencyId = filters.CurrencyId;
        sessionStorage.CustomerFilter = filters.CustomerFilter;
        sessionStorage.Year = filters.Year;
        sessionStorage.DateFromTxt = filters.DateFromTxt;
        sessionStorage.DateToTxt = filters.DateToTxt;

    }

     
    function GoToSaleByReceive(element) {

        $('#SaleInvoiceDetailModal').modal('toggle');

        var link = "/SaleInvoice/EditModalByReceiveId?receiveId=";
        var Id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");
        $('#SaleInvoiceDetailModal-body').load(link + Id, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });

    }
    
     
    function GoToSale(element) {

        $('#SaleInvoiceDetailModal').modal('toggle');

        var link = "/SaleInvoice/EditModal?Id=";
        var Id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");
        $('#SaleInvoiceDetailModal-body').load(link + Id, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });

    }

    function closeSaleInvoiceDetailModal() {
        $("#kendoGrid").find(".k-i-reload").click();
        $('#SaleInvoiceDetailModal').modal('hide');
        $('#SaleInvoiceDetailModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    function SaleInvoiceDetailsSaveChanges() {
        $(this).attr("disabled", true);
        UpdateSaleInvoiceMaster();
        $("#kendoGrid").find(".k-i-reload").click();
        $(this).attr("disabled", false);
        $('#SaleInvoiceDetailModal').modal('hide');
        $('#SaleInvoiceDetailModal-body').empty();
        $(".modal-backdrop:last").remove();
    }


</script>