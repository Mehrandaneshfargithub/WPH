@model WPH.Models.CustomDataModels.BaseInfo.BaseInfosAndPeriodsViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string font = "", pull = "";
    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-left ";

    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-right ";

    }

}

<div class="row page-header ">
    <div class="@pull">
        <h1 class="@font" style="font-size: 2.3rem">
            @Localizer["AnalysisResult"]
        </h1>

    </div>
</div><!-- /.page-header -->

<input class="hidden" type="text" id="period-id" data-Value="@Model.periods.FirstOrDefault().Id" />
<h1 id="FromTo" class="hidden">@ViewBag.FromToId</h1>

<div class="space-10"></div>
<div class="row @font ">

    <div class="col-xs-12" style="padding:0;margin-bottom:1rem">

        <div class="col-xs-2" style="padding-left:unset;padding-right:unset;">
            @(Html.Kendo().DropDownList()
                                  .Name("sections")
                                  .BindTo(Model.sections)
                                  .DataTextField("Name")
                                  .DataValueField("Id")
                                  .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "SectionChange()" })
        )
        </div>

        <script>

            function OnPatientListSelect(e) {

                var DataItem = this.dataItem(e.item.index());
                let patientId = DataItem.Guid;
                $.ajax({
                    type: "post",
                    url: "/AnalysisResultMaster/GetAnalysisResultByPatientId",
                    data: { PatientId: patientId },
                    success: function (res) {
                        if (res !== null && res.length !== 0) {

                            let grid = $("#kendoAnalysisResultMasterGrid").data("kendoGrid");
                            grid.setDataSource(res);
                        }
                    }
                });

            }

        </script>

        <div class="col-xs-1" style="padding-left:unset;padding-right:unset;">

        </div>

        <div class="col-xs-2" style="padding-left:unset;padding-right:unset;direction:rtl">
            @(Html.Kendo().AutoComplete()
                  .Name("patientList")
                  .Placeholder(Localizer["PatientName"])
                  .DataTextField("Name")
                  .HighlightFirst(true)
                  .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem"})
                  .Filter("contains")
                  .MinLength(1)
                  .ClearButton(false)
                  .Events(e=>e.Select("OnPatientListSelect"))
                  .DataSource(source => {
                      source.Read(read =>
                      {
                          read.Action("GetPatientJustNameAndGuid", "Patient");
                      })
                      .ServerFiltering(false);
                  })
            )
        </div>

        <div class="col-xs-1" style="padding-left:unset;padding-right:unset;">
            @(Html.Kendo().Button()
                .Name("btn-clear-patientList")
                .HtmlAttributes(new { style = "font-size:1.5rem;padding:0.7rem", type = "button", @class = "k-primary pull-right", onclick = "btnClearPatientListClick()" })
                .Content("<i class='fa fa-close'></i>"))
        </div>

    </div>

    <div class="col-xs-2" style="padding-left:unset;padding-right:unset;">
        @(Html.Kendo().DropDownList()
                                  .Name("periods")
                                  .BindTo(Model.periods)
                                  .DataTextField("Name")
                                  .DataValueField("Id")
                                  .Filter("contains")

                                  .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "PeriodsChange()" })
        )
    </div>



    <div class="col-xs-10">

        <div id="DateFromDiv" class="col-xs-12 col-sm-5 hidden">
            <div class="col-xs-4 " style="text-align:left">

                <h5 class="MyFont-Roboto-grid">@Localizer["FromDate"]</h5>

            </div>
            <div class="col-xs-8">
                @(Html.Kendo().DatePicker()
                        .Name("KendoFromDate")
                        .Format("dd/MM/yyyy")
                        .Value(DateTime.Now)
                        .HtmlAttributes(new { style = "width: 100%", onchange = "dateTimePickerWorkWithSpace(this)" })
                )

            </div>
        </div>

        <div id="DateToDiv" class="col-xs-12 col-sm-5 hidden">

            <div class="col-xs-4" style="text-align:left">

                <h5 class="MyFont-Roboto-grid">@Localizer["ToDate"]</h5>

            </div>

            <div class="col-xs-8">

                @(Html.Kendo().DatePicker()
                        .Name("KendoDateTo")
                        .Format("dd/MM/yyyy")
                        .Value(DateTime.Now)
                        .HtmlAttributes(new { style = "width: 100%", onchange = "dateTimePickerWorkWithSpace(this)" })
                )
            </div>

        </div>

        <div id="SearchBtnDiv" class="col-xs-1 hidden">

            @(Html.Kendo().Button()
                .Name("btn-search-visit")
                .HtmlAttributes(new { style = "font-size:1.5rem;padding:0.7rem", type = "button", @class = "k-primary pull-right", onclick = "btnSearchClick()" })
                .Content("<i class='fa fa-search'></i>"))

        </div>

    </div>

</div>



<div id="parentkendoAnalysisResultMasterGrid" class="row Grid-Content @font">
    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/AnalysisResultMaster/dgAnalysisResultMasterGrid.cshtml")
</div>

@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_GridAndModalLinks.cshtml")
@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_Modal.cshtml")



<script>

    $(document).ready(function () {

        var fromDate = $("#KendoFromDate").data("kendoDatePicker");
        fromDate.element.focus();
        fromDate.element.select();

    })


    function btnClearPatientListClick() {
        //$("#parentkendoAnalysisResultMasterGrid").empty();

        $('#parentkendoAnalysisResultMasterGrid').load('/AnalysisResultMaster/MasterGrid', function () {

        });

        PeriodsChange();
    }

    function PeriodsChange() {

        var period = $("#periods").data("kendoDropDownList");

        var periodValue = period.value();
        $('#period-id').attr('data-Value', periodValue);

        var fromTo = $("#FromTo").text();

        if (periodValue === fromTo) {
            $("#DateFromDiv").removeClass("hidden");
            $("#DateToDiv").removeClass("hidden");
            $("#SearchBtnDiv").removeClass("hidden");
            let date = $("#KendoFromDate").data("kendoDatePicker");
            date.element.focus();
            date.element.select();
        }

        else {
            $("#DateFromDiv").addClass("hidden");
            $("#DateToDiv").addClass("hidden");
            $("#SearchBtnDiv").addClass("hidden");
            $("#kendoAnalysisResultMasterGrid").find(".k-i-reload").click();
        }

    }

    function SectionChange() {

        $("#kendoAnalysisResultMasterGrid").find(".k-i-reload").click();
    }

    function btnSearchClick() {
        var period = $("#periods").data("kendoDropDownList");

        var periodValue = period.value();

        $('#period-id').attr('data-Value', periodValue);
        $("#kendoAnalysisResultMasterGrid").find(".k-i-reload").click();
    }

    $('#KendoFromDate').keypress(function (e) {

        if (e.which === 13 || e.which === 9) {
            let date = $("#KendoDateTo").data("kendoDatePicker");
            date.element.focus();
            //date.element.select();
        }

    });

    $('#KendoFromDate').focus(function (e) {

        let date = $("#KendoFromDate").data("kendoDatePicker");
        date.element.select();

    });

    $('#KendoDateTo').keypress(function (e) {

        if (e.which === 13 || e.which === 9) {
            $("#btn-search-visit").focus();
        }

    });


    $('#KendoDateTo').focus(function (e) {

        let date = $("#KendoDateTo").data("kendoDatePicker");
        date.element.select();

    });

    //function draw2(imgData) {

    //    "use strict";

    //    var dataUrl = [];
    //    let linkSource2;

    //    //printJS({ printable: dataUrl, type: 'image' });
    //    printJS({
    //        printable: imgData.allb[0], type: 'pdf',
    //        base64: true });
    //}

    function draw2(imgData) {

        "use strict";
        var dataUrl = [];
        for (let index = 0; index < imgData.allb.length; index++) {

            //var uInt8Array = imgData.allb[index];
            //var i = uInt8Array.length;
            //var binaryString = [i];
            //while (i--) {
            //    binaryString[i] = String.fromCharCode(uInt8Array[i]);
            //}

            //var data = binaryString.join('');
            //var base64 = window.btoa(data);

            var img = new Image();
            img.src = "data:image/jpeg;base64," + imgData.allb[index];
            dataUrl.push(img.src)

        }
        printJS({ printable: dataUrl, type: 'image' });

    }



</script>
