@model Guid
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string pay_service_title = Localizer["PayService"];
}

<input type="hidden" name="ReceptionIdServiceGrid" id="ReceptionIdServiceGrid" value="@Model" />

<script>

    function GetReceptionIdForServiceGrid() {

        return {

            receptionId: $('#ReceptionIdServiceGrid').val()
        };
    }
</script>

<div>
    @(Html.Kendo().Grid<WPH.Models.ReceptionService.ReceptionServiceViewModel>()
    .Name("serviceKendoGrid")
    .Columns(columns =>
    {
        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {
            if ((bool)ViewBag.AccessNewCash)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                   $@"<a class='tooltip-success grid-btn edit' onClick='EditReceptionService(this);' data-id='#=Guid#' data-rel='tooltip' title='{pay_service_title}' data-remain='#=Rem#' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-credit-card bigger-120'></i>
                        </span>
                    </a>
                ");

            }

            if (HttpContextAccessor.HttpContext.Session.GetString("SectionTypeName") == "Hospital")
            {
                columns.Bound(x => x.PayByInsurance).Format("{0:n0}").Filterable(false).Title(Localizer["Insurance"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            }
            columns.Bound(x => x.Rem).Format("{0:n0}").Filterable(false).Title(Localizer["Remained"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.ServiceStatus).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Status"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).ClientTemplate("#= LineItems_Databound(ServiceStatus)#");
            columns.Bound(x => x.Total).Format("{0:n0}").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Total"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Price).Format("{0:n0}").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Price"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Number).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Number"]).HtmlAttributes( new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.ServiceName).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Name"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(20).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.Id).Hidden();

        }
        else
        {
            columns.Bound(x => x.Id).Hidden();
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(20).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.ServiceName).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Name"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Number).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Number"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Price).Format("{0:n0}").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Price"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Total).Format("{0:n0}").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Total"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.ServiceStatus).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Status"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= LineItems_Databound(ServiceStatus)#");
            columns.Bound(x => x.Rem).Format("{0:n0}").Filterable(false).Title(Localizer["Remained"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            if (HttpContextAccessor.HttpContext.Session.GetString("SectionTypeName") == "Hospital")
            {
                columns.Bound(x => x.PayByInsurance).Format("{0:n0}").Filterable(false).Title(Localizer["Insurance"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            }
            if ((bool)ViewBag.AccessNewCash)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                   $@"<a class='tooltip-success grid-btn edit' onClick='EditReceptionService(this)' data-id='#=Guid#' data-rel='tooltip' title='{pay_service_title}' data-remain='#=Rem#' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-credit-card bigger-120'></i>
                        </span>
                    </a>
                ");

            }

        }
    })

    .DataSource(dataSource => dataSource
    .Ajax()
    .ServerOperation(false)
    .Model(model =>
    {
        model.Id(p => p.Guid);
    })
    .PageSize(10)
    .Read(read => read.Action("GetAll", "ReceptionService").Data("GetReceptionIdForServiceGrid"))
    )
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
    .Pageable(pageable => pageable
    .Input(true)
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5)
    .Numeric(true)) // Enable paging
    .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;overflow:auto" }) // Enable sorting
    )
</div>

<script>

    $(document).ready(function () {

        $("#serviceKendoGrid").on("dblclick", "tr.k-state-selected", function (element) {

            $("#serviceKendoGrid").find("tr.k-state-selected td a.edit").click();

        });

    })

</script>