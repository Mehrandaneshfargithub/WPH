
@model WPH.Models.CustomDataModels.BaseInfo.BaseInfosAndPeriodsViewModel

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer



@{
    string font = "", pull = "", direction = "";
    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-left ";
        direction = " ";
    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-right ";
        direction = " direction:rtl; ";
    }

}


<div class="row page-header">
    <div class="@pull">
        <h1 class="@font" style="font-size: 2.3rem">
            @Localizer["AnalysisItem"]
        </h1>

    </div>

    @if ((bool)ViewBag.AccessNewAnalysisItem)
    {
        <div class="@font @pull" style="margin:0 2rem;transform:translateY(-10%)">
            <a class="btn btn-danger" onClick="AddAnalysisItem(this)" href="#" style="padding:0.2rem">
                @Localizer["New"]
                <i class="ace-icon glyphicon  glyphicon-plus align-top bigger-125"></i>
            </a>
        </div>
    }

</div><!-- /.page-header -->

<div class="row">

    <div class="col-xs-12" style="padding:0;margin-bottom:1rem">

        <div class="col-xs-2" style="padding-left:unset;padding-right:unset;">
            @(Html.Kendo().DropDownList()
            .Name("sections")
            .BindTo(Model.sections)
            .DataTextField("Name")
            .DataValueField("Id")
            .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "SectionChange()" })
        )
        </div>

    </div>

</div>

<div class="space-10"></div>
<input class="hidden" type="text" id="unitId" data-Value="@ViewBag.UnitId" />

<script>

    function GetPeriodForAnalysisItem() {

        var period = $("#sections").data("kendoDropDownList");

        var periodValue = period.value();

        return {

            ClinicSectionId: periodValue
        };
    }


</script>

<div class="row Grid-Content @font">
    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/AnalysisItem/dgAnalysisItemGrid.cshtml")
</div>




<div id="AnalysisItemModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@direction">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeAnalysisItemModal()" aria-hidden="true">&times;</button>
                <h3 id="AnalysisItemModal-header" class="smaller lighter blue no-margin @font">
                    @Localizer["New"]
                </h3>
            </div>

            <div id="AnalysisItemModal-body" class="modal-body" style="width:80vw">

            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">
                @(Html.Kendo().Button()
                    .Name("btn-newAnalysisItem-accept")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right", onclick = "analysisItemClick()" })
                    .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                    .Name("btn-AnalysisItemModal-close")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick = "closeAnalysisItemModal()" })
                    .Content(Localizer["Exit"]))
            </div>
        </div>
    </div>

</div>

@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_GridAndModalLinks.cshtml")
@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_Modal.cshtml")

<h3 class="hidden" id="newHeader">@Localizer["AnalysisItem"] - @Localizer["New"]</h3>
<h3 class="hidden" id="editHeader">@Localizer["AnalysisItem"] - @Localizer["Edit"]</h3>



<script type="text/javascript">

    function AddAnalysisItem() {
        $('#AnalysisItemModal #ERROR_SomeThingWentWrong').addClass('hidden');
        let header = $("#newHeader").text();

        $("#AnalysisItemModal-header").text(header);
        var link = $("#GridAddLink").attr("data-Value");
        $(".loader").removeClass("hidden");
        $('#AnalysisItemModal').modal('toggle');
        $('#AnalysisItemModal-body').load(link, function () {
            setTimeout(function () {
                $("#AnalysisItemName").focus();
                $("#ClinicSectionId").data("kendoDropDownList").value($("#sections").data("kendoDropDownList").value());

            }, 200);
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });

    }


    function analysisItemClick() {
        //$("#MmaxValue-box").attr('data-isEssential', 'false');
        //$('#MminValue-box').attr('data-isEssential', 'false');
        //$('#FmaxValue-box').attr('data-isEssential', 'false');
        //$('#FminValue-box').attr('data-isEssential', 'false');
        //$('#CmaxValue-box').attr('data-isEssential', 'false');
        //$('#CminValue-box').attr('data-isEssential', 'false');
        //$('#BmaxValue-box').attr('data-isEssential', 'false');
        //$('#BminValue-box').attr('data-isEssential', 'false');

        let ValueType = $('#ValueTypeId').data("kendoDropDownList");
        let ValueTypeId = ValueType.text();

        check = true;
        switch (ValueTypeId) {
            case "Numerical": {
                //$("#MmaxValue-box").attr('data-isEssential', 'true');
                //$('#MminValue-box').attr('data-isEssential', 'true');
                //$('#FmaxValue-box').attr('data-isEssential', 'true');
                //$('#FminValue-box').attr('data-isEssential', 'true');
                //$('#CmaxValue-box').attr('data-isEssential', 'true');
                //$('#CminValue-box').attr('data-isEssential', 'true');
                //$('#BmaxValue-box').attr('data-isEssential', 'true');
                //$('#BminValue-box').attr('data-isEssential', 'true');
                
                break;
            }
            case "Optional": {
                AnalysisItemValuesRange = $('#divAnalysisItemValuesRangeAdded #spanName');
                if (AnalysisItemValuesRange.length == 0) {
                    check = false;
                    $('#spanAlert').html('@Localizer["ValueNotSelected"]');
                    $('#divAlert').show(500);
                    divAlertHide();
                }
                break;
            }
            default:
        }

        if (check) {

            $('.emptybox').addClass('hidden');
            var isEmmpty = true;
            $('.emptybox').each(function () {
                if ($(this).attr('data-isEssential') === 'true') {
                    var empty = $(this).attr('id');
                    if ($('[data-checkEmpty="' + empty + '"]').val() !== undefined) {
                        let text = $('[data-checkEmpty="' + empty + '"]').val().replace(/ /g, '');
                        if (text === "") {
                            $(this).removeClass('hidden');
                            isEmmpty = false;
                            return;
                        }
                    }
                }
            });

            if (isEmmpty === false) {
                return;
            }
            var link = "/AnalysisItem/AddOrUpdate";
            var NormalValues = $('#AnalysisItemNormalValuesArea').val();
            $('#NormalValues').val(NormalValues);

            let str = '';
            $('#divAnalysisItemValuesRangeAdded #spanName').each(function (index, value) {
                str += value.innerHTML + ',';
            });
            $('#AnalysisItemValuesRanges_Value').val(str);

            $('#BaseInfoGeneralName').val(ValueTypeId);

            var data = $("#addNewFormAnalysisItem").serialize();
            $(".loader").removeClass("hidden");

            $.ajax({
                type: "Post",
                url: link,
                data: data,
                success: function (response) {
                    if (response !== 0) {
                        if (response === "ValueIsRepeated") {

                            $('#Name-Exist').removeClass('hidden');

                            $(".loader").fadeIn("slow");
                            $(".loader").addClass("hidden");
                        }
                        // else {
                        //    switch (ValueTypeId) {
                        //        
                        //        case "Optional": {
                        //            AddAnalysisItemValuesRange(response);
                        //            break;
                        //        }
                        //        default:
                        //    }
                        $('#AnalysisItemModal').modal('toggle');
                        $('#AnalysisItemModal-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                        $(".k-pager-refresh")[0].click();
                        //}
                    } else {

                        $('#AnalysisItemModal #ERROR_SomeThingWentWrong').removeClass('hidden');

                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                    }

                }
            });
        }
    }

    function AddAnalysisItemValuesRange(analysisItemId) {
        str = '';
        $('#divAnalysisItemValuesRangeAdded #spanName').each(function (index, value) {
            str += value.innerHTML + ',';
        });

        $.ajax({
            type: "Post",
            url: '/AnalysisItemValuesRange/AddOrUpdate',
            data: { Values: str, AnalysisItemId: analysisItemId },
            success: function (response) {
                if (response !== 0) {
                }
            }
        });
    }



    function closeAnalysisItemModal() {
        $('#AnalysisItemModal').modal('toggle');
        $('#AnalysisItemModal-body').empty();
    }


    function EditAnalysisItem(element) {

        $('#AnalysisItemModal #ERROR_SomeThingWentWrong').addClass('hidden');
        let header = $("#editHeader").text();

        $("#AnalysisItemModal-header").text(header);
        var link = $("#GridEditLink").attr("data-Value");
        var Id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");
        $('#AnalysisItemModal').modal('toggle');
        $('#AnalysisItemModal-body').load(link + Id, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });
    }

    function SectionChange() {

        $("#kendoAnalysisItemGrid").find(".k-i-reload").click();

    }


    function CreateChartInResult(element) {

        var Id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");


        $.ajax({
            type: "Get",
            url: `/AnalysisItem/CreateChartInResult/${Id}`,
            success: function (response) {

                if (response === 0) {

                    bootbox.alert({
                        message: "@Localizer["ERROR_InsertWrong"]",
                        className: 'bootbox-class'
                    });

                } else if (response === "OptionalTypeCannotShowInChart") {

                    bootbox.alert({
                        message: "@Localizer["OptionalTypeCannotShowInChart"]",
                        className: 'bootbox-class'
                    });

                } else {

                    $("#kendoAnalysisItemGrid").find(".k-i-reload").click();
                }

                $(".loader").fadeIn("slow");
                $(".loader").addClass("hidden");
            }
        });
    }
</script>