@model WPH.Models.CustomDataModels.BaseInfo.BaseInfosAndPeriodsViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer


@{
    string font = "", pull = "", direction = "";
    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-left ";
        direction = " ";
    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-right ";
        direction = " direction:rtl; ";
    }

}

<div class="row page-header ">

    <div class="@pull">
        <h1 class="@font" style="font-size: 2.3rem">
            @Localizer["All"] @Localizer["Analysis"]
        </h1>
    </div>

    @if ((bool)ViewBag.AccessNewAnalysis)
    {
        <div class="@font @pull" style="margin:0 2rem;transform:translateY(-10%)">
            <a class="btn btn-danger" onClick="AddAnalysis(this)" href="#" style="padding:0.2rem">
                @Localizer["New"]
                <i class="ace-icon glyphicon  glyphicon-plus align-top bigger-125"></i>
            </a>
        </div>
    }


</div>

<div class="row">

    <div class="col-xs-12" style="padding:0;margin-bottom:1rem">

        <div class="col-xs-2" style="padding-left:unset;padding-right:unset;">
            @(Html.Kendo().DropDownList()
            .Name("sections")
            .BindTo(Model.sections)
            .DataTextField("Name")
            .DataValueField("Id")
            .HtmlAttributes(new { style = "width: 100%;font-size:1.5rem", onchange = "SectionChange()" })
        )
        </div>
    </div>

</div>


<input class="hidden" type="text" id="analysis-type-id" data-Value="" />


<div class="space-10"></div>



<script>

    function GetPeriodForAnalysis() {

        var period = $("#sections").data("kendoDropDownList");

        var periodValue = period.value();

        return {

            ClinicSectionId: periodValue
        };
    }


</script>

<div class="row Grid-Content @font">

    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Analysis/dgAnalysisGrid.cshtml")
</div>


<div id="AnalysisModal" class="modal fade @font " data-backdrop="static" data-keyboard="false" style="@direction">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 id="AnalysisModal-header" class="smaller lighter blue no-margin @font">
                    @Localizer["New"]
                </h3>
            </div>

            <div id="AnalysisModal-body" class="modal-body " style="width:70rem">

            </div>

            <div class="modal-footer">
                @(Html.Kendo().Button()
                    .Name("btn-AnalysisModal-accept")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right ", onclick= "analysisClick()" })
                    .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                    .Name("btn-AnalysisModal-close")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right ", @data_dismiss="modal" })
                    .Content(Localizer["Exit"]))

            </div>
        </div>
    </div>
</div>


<div id="AddAnalysisItemToAnalysisModal" class="modal fade @font " data-backdrop="static" data-keyboard="false" style="@direction">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeAddAnalysisItem()" aria-hidden="true">&times;</button>
                <h3 id="AddAnalysisItemToAnalysisModal-header" class="smaller lighter blue no-margin @font"></h3>
            </div>

            <div id="AddAnalysisItemToAnalysisModal-body" class="modal-body rtl" style="width:80vw">

            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                    .Name("btn-AddAnalysisItemToAnalysisModal-close")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick="closeAddAnalysisItem()", @data_analysisId = "" })
                    .Content(Localizer["Exit"]))

            </div>
        </div>
    </div>
</div>


<style>
</style>

@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_GridAndModalLinks.cshtml")
@await Html.PartialAsync("~/Views/Shared/PartialViews/InterfacePartials/_Modal.cshtml")

<h3 id="newHeader" class="hidden"> @Localizer["New"] - @Localizer["Analysis"] </h3>
<h3 id="editHeader" class="hidden"> @Localizer["Analysis"] - @Localizer["Edit"] </h3>


<script type="text/javascript">

    $('#btn-close-modal-add').on("click", function () {
        $("#AnalysisTypes").data("kendoDropDownList").dataSource.read();
    });

    ////////////////////////Analysis

    function AddAnalysis() {

        let header = $("#newHeader").text();

        $("#AnalysisModal-header").text(header);
        var link = $("#GridAddLink").attr("data-Value");
        $(".loader").removeClass("hidden");
        $('#AnalysisModal').modal('toggle');
        $('#AnalysisModal-body').load(link, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
            kendo.ui.progress($("#window"), true);
        });
    }

    function analysisClick() {
        $('.emptybox').addClass('hidden');
        var isEmmpty = true;
        $('.emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() !== undefined) {
                    let text = $('[data-checkEmpty="' + empty + '"]').val().replace(/ /g, '');
                    if (text === "") {
                        $(this).removeClass('hidden');
                        isEmmpty = false;
                        return;
                    }
                }

            }
        });

        if (isEmmpty === false) {
            return;
        }


        var link = "/Analysis/AddOrUpdate";

        var data = $("#addNewForm").serialize();

        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: data,
            success: function (response) {
                if (response !== 0) {
                    if (response === "ValueIsRepeated") {

                        $('#Name-Exist').removeClass('hidden');

                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                    } else {

                        $('#AnalysisModal').modal('toggle');
                        $('#AnalysisModal-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                        $(".k-pager-refresh")[0].click();

                    }
                }
            }
        });
    }

    function EditAnalysis(element) {

        let header = $("#editHeader").text();

        $("#AnalysisModal-header").text(header);
        var link = $("#GridEditLink").attr("data-Value");
        var Id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");
        $('#AnalysisModal').modal('toggle');
        $('#AnalysisModal-body').load(link + Id, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });
    }



    ////////////////////////AnalysisItem


    function AddAnalysisItemToAnalysis(element) {

        let name = $(element).attr("data-name");
        let r = $("#thisAnalysisItems").val();
        let analysisHeadre = $("#thisAnalysisItems").text() + " " + name;
        $("#thisAnalysisItems").text(analysisHeadre);
        $("#AddAnalysisItemToAnalysisModal-header").text(name);
        var link = "/Analysis/Analysis_AnalysisItems";
        $(".loader").removeClass("hidden");
        let analysisId = $(element).attr("data-id");
        $('#AddAnalysisItemToAnalysisModal').modal('toggle');
        $('#btn-AddAnalysisItemToAnalysisModal-close').attr('data-analysisId', analysisId)
        $('#AddAnalysisItemToAnalysisModal-body').load(link, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });
    }


    function closeAddAnalysisItem() {
        $('#AddAnalysisItemToAnalysisModal').modal('hide');
        $('#AddAnalysisItemToAnalysisModal-body').empty();

        $(".k-pager-refresh")[0].click();

    }



    function GridAnalysisAnalysisItemUpPriorityFunction(element) {

        var priority = parseInt($(element).attr('data-Priority'));
        
        if (priority !== 1) {
            var Id = $(element).attr('data-id');
            var Type = "Up";

            $.ajax({
                type: "Post",
                data: { id: Id, type: Type },
                url: "/Analysis_AnalysisItem/AnalysisItemPriorityEdit",
                success: function (response) {
                    $("#kendoAnalysisAnalysisItemGrid .k-i-reload").click();
                }
            });
        }

    }

    function GridAnalysisAnalysisItemDownPriorityFunction(element) {

        var priority = parseInt($(element).attr('data-Priority'));

        var Id = $(element).attr('data-id');

        var Type = "Down";

        $.ajax({
            type: "Post",
            data: { id: Id, type: Type },
            url: "/Analysis_AnalysisItem/AnalysisItemPriorityEdit",
            success: function (response) {
                $("#kendoAnalysisAnalysisItemGrid .k-i-reload")[0].click();
            }
        });
    }


    function SectionChange() {

        $("#kendoAnalysisGrid").find(".k-i-reload").click();

    }


</script>