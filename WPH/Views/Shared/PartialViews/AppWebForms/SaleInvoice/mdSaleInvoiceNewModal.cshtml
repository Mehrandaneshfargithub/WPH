@model WPH.Models.SaleInvoice.SaleInvoiceViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string font = "", pull = "", pull_rev = "", dir = "";
    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-left ";
        pull_rev = " pull-right ";
        dir = "  ";
    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-right ";
        pull_rev = " pull-left ";
        dir = " direction:rtl; ";
    }

}


<h1 id="lock" class="hidden">@ViewBag.Lock</h1>

<div class="col-sm-3 shadow-border " id="myToast" style="position:absolute;top:0;left:40%;background-color:blue;color:white;z-index:999;transition:all 0.5s;opacity:0;visibility:hidden">

    <div class="col-sm-12">
        <div class="toast-body" style="font-size:1.7rem">
            @Localizer["Consideration"]: <span id="tostText"> It's been a long time since you visited us. We've something special for you </span>
        </div>
    </div>
</div>

<div class="row @font" style="@dir">
    <div class="col-sm-12 shadow-border" style="margin:0">

        <form id="addNewSaleInvoiceForm">
            <fieldset>
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Guid)
                @Html.HiddenFor(m => m.InvoiceNum)

                <div class="col-sm-12">

                    <div class="col-xs-12 col-sm-3" style="display:flex;align-items:flex-end">
                        <div class="col-xs-10" style="padding:0;margin:0">
                            <label class="block clearfix ">
                                <label for="form-field-8">@Localizer["Customer"]: </label>
                                <span class="block input-icon input-icon-right">
                                    @(Html.Kendo().DropDownList()
                                    .Name("CustomerId")
                                    .DataTextField("Name")
                                    .DataValueField("Guid")
                                    .Filter("contains")
                                    .OptionLabel(" ")
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetAllCustomers", "Customer");
                                        })
                                        .ServerFiltering(false);
                                    })
                                    .Value(Model.CustomerId?.ToString())
                                    .HtmlAttributes(new { style = "width: 100%;", @data_checkEmpty = "Customer1-box" })
                                    )
                                </span>
                                <span id="Customer1-box" class="emptybox hidden" data-isEssential="true" style="color:red;font-size: 11px;">
                                    @Localizer["ThisFieldIsEmptyPleaseFillIt"]
                                </span>
                            </label>

                        </div>

                        <div class="col-xs-2 " style="padding:0;margin-bottom:0.5rem">
                            <a href="\\#" id="newCustomerbtn" class="btn btn-danger @pull_rev" onclick="NewCustomer()" style=" padding:0 0.2rem;"><span class="fa fa-plus" style="margin:0.1rem"></span></a>
                        </div>
                    </div>

                    <div class="col-sm-2">
                        <label class="block clearfix">
                            <label for="form-field-8">@Localizer["InvoiceDate"]: </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().DatePicker()
                                .Name("InvoiceDateTxt")
                                .Value(Model.InvoiceDate ?? DateTime.Now)
                                .Max(DateTime.Now)
                                .Enable(false)
                                .Format("dd/MM/yyyy")
                                .HtmlAttributes(new { style = "width: 100%;", @data_checkEmpty = "InvoiceDate-box" })
                                )
                            </span>
                            <span id="InvoiceDate-box" class="emptybox hidden" data-isEssential="true" style="color:red;font-size: 11px;">
                                @Localizer["ThisFieldIsEmptyPleaseFillIt"]
                            </span>
                            <span id="Date-valid" class="emptybox hidden" style="color:red;">
                                @Localizer["DateNotValid"]
                            </span>
                        </label>
                    </div>

                    <div class="col-sm-2">
                        <label class="block clearfix">
                            <label for="form-field-8"> @Localizer["Type"] @Localizer["SalePrice"] :</label>
                            <span class="block input-icon input-icon-right">

                                @(Html.Kendo().DropDownList()
                                    .Name("SalePriceTypeId")
                                    .DataTextField("ShowName")
                                    .DataValueField("Id")
                                    .OptionLabel(" ")
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetAllSalePriceType", "BaseInfo");
                                        })
                                        .ServerFiltering(false);
                                    })
                                    .Value(Model.SalePriceTypeId?.ToString())
                                    .HtmlAttributes(new { style = "width: 100%;", @data_checkEmpty = "SalePriceTypeId-box" })
                                    )

                            </span>
                            <span id="SalePriceTypeId-box" class="emptybox hidden" data-isEssential="true" style="color:red;font-size: 11px;">
                                @Localizer["ThisFieldIsEmptyPleaseFillIt"]
                            </span>
                        </label>
                    </div>

                    <div class="col-sm-2">
                        <label class="block clearfix">
                            <label for="form-field-8"> @Localizer["InvoiceNum"] :</label>
                            <span class="block input-icon input-icon-right">

                                @(Html.Kendo().TextBox()
                                    .Name("InvoiceNum")
                                    .Value(Model.InvoiceNum)
                                    .Enable(false)
                                .HtmlAttributes(new { style = "width: 100%;", id= "InvoiceNum1" })
                                )

                            </span>
                           
                        </label>
                    </div>

                    <div class="col-sm-3">
                        <label class="block clearfix">
                            <label for="form-field-8">@Localizer["Explanation"]:</label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().TextBox()
                                    .Name("Description")
                                    .Value(Model.Description)
                                .HtmlAttributes(new { style = "width: 100%;", id= "Description1" })
                                )
                            </span>
                        </label>
                    </div>

                </div>

                <div class="col-sm-12" style="display:flex;align-items:flex-end">

                    <div class="col-sm-8">

                        </div>

                    <script>

                        function NearestExpireChange() {

                            let nearestExpire = $("#NearestExpire").is(":checked");

                            if (!nearestExpire) {

                                $("#CurrentStock").attr("disabled", true);

                            }
                            else {
                                $("#CurrentStock").removeAttr("disabled");
                            }
                        }


                    </script>

                    <div class="col-sm-8 hidden">

                        <div class="col-sm-3">

                            @(Html.Kendo().CheckBox()
                        .Name("NearestExpire")
                        .Label(Localizer["NearestExpire"])
                        .Checked(ViewBag.NearestExpire)
                        .HtmlAttributes(new { @class = "kendoCheckbox my_check_box_value",onchange= "NearestExpireChange()" })
                        )

                        </div>

                        <div class="col-sm-3">

                            @(Html.Kendo().CheckBox()
                        .Name("CurrentStock")
                        .Label(@Localizer["Stock"] + " - " + @Localizer["ThisExpire"])
                        .Checked(ViewBag.ThisExpireStock)
                        .HtmlAttributes(new { @class = "kendoCheckbox my_check_box_value" })
                        )

                        </div>

                        <div class="col-sm-3">

                            @(Html.Kendo().CheckBox()
                        .Name("LatestSellingPrice")
                        .Label(Localizer["LatestSellingPrice"])
                        .Checked(ViewBag.LatestSellingPrice)
                        .HtmlAttributes(new { @class = "kendoCheckbox my_check_box_value" })
                        )

                        </div>

                        <div class="col-sm-3">

                            @(Html.Kendo().CheckBox()
                        .Name("CreateLine")
                        .Label(Localizer["RapidSelling"])
                        .Checked(ViewBag.RapidSelling)
                        .HtmlAttributes(new { @class = "kendoCheckbox my_check_box_value" })
                        )

                        </div>

                    </div>

                    <div class="col-sm-4 ">
                       
                        @(Html.Kendo().Button()
                            .Name("btn-OkAndNew")
                            .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "btn btn-primary hidden" + pull_rev+"", onclick="okAndNew()" })
                            .Content(Localizer["Ok"] + " " + Localizer["And"] + " " + Localizer["New"]))
                        
                        @(Html.Kendo().Button()
                            .Name("btn-ShowCostsList")
                            .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "btn btn-warning hidden " + pull_rev+"" })
                            .Content(Localizer["Cost"]))
                        @(Html.Kendo().Button()
                            .Name("btn-AddMoneyConvert")
                            .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "btn btn-purple hidden " + pull_rev+"", onclick="AddMoneyConvert()" })
                            .Content(Localizer["MoneyConvert"] + " + "))
                    </div>

                </div>

                <div>
                    <div id="ERROR_Data" class="red label-white middle hidden btn-danger" style="height:40px;display:block">
                        <i class="ace-icon fa fa-stop bigger-120"></i>
                        @Localizer["ERROR_DataNotValid"]
                    </div>

                    <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                        <i class="ace-icon fa fa-stop bigger-120"></i>
                        @Localizer["ERROR_InsertWrong"]
                    </div>
                </div>

                <div class="space-24"></div>
            </fieldset>
        </form>
    </div>


    <div class="@pull col-sm-12 shadow-border" style="margin-top:0.5rem">

        <script>

            function GetSaleInvoiceId() {
                return {
                    SaleInvoiceId: $("#Guid").val()
                }
            }

        </script>


        <div class="col-sm-12 Grid-Content @font">
            @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/SaleInvoiceDetail/dgSaleInvoiceDetailGrid.cshtml", Model.Guid)
        </div>
    </div>

</div><!-- /.signup-box -->


<div id="EditSaleInvoiceDetailModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir ">
    <div class="modal-dialog" style="width:80%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeEditSaleInvoiceDetailModal()" aria-hidden="true">&times;</button>
                <h3 id="EditSaleInvoiceDetailModal-header" class="smaller lighter blue no-margin @font">
                    @Localizer["Edit"] @Localizer["SaleInvoice"]
                </h3>
            </div>

            <div id="EditSaleInvoiceDetailModal-body" class="modal-body" style="">
            </div>

            <div id="AmountOverFlow" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["DiscountIsGreaterThanTheAmount"]
            </div>

            <div id="ERROR_MoneyConvert" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ThereIsNoMoneyConvert"]
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-EditSaleInvoiceDetailModal-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-EditSaleInvoiceDetailModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeEditSaleInvoiceDetailModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="AddSaleInvoiceDetailModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir ">
    <div class="modal-dialog" style="width:80%">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeAddSaleInvoiceDetailModal()" aria-hidden="true">&times;</button>
                <h3 id="AddSaleInvoiceDetailModal-header" class="smaller lighter blue no-margin @font">
                    @Localizer["Add"] @Localizer["SaleInvoice"]
                </h3>
            </div>

            <div id="AddSaleInvoiceDetailModal-body" class="modal-body" style="">
            </div>

            <div id="AmountOverFlow" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["DiscountIsGreaterThanTheAmount"]
            </div>

            <div id="ERROR_MoneyConvert" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ThereIsNoMoneyConvert"]
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-AddSaleInvoiceDetailModal-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right", onclick = "AddSaleInvoiceDetailModal()" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-AddSaleInvoiceDetailModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closeAddSaleInvoiceDetailModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="DeleteSaleInvoiceDetailModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="widget-header" style="padding:1rem">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class='smaller @font'>
                    <i class='ace-icon fa fa-exclamation-triangle red '></i>@Localizer["DeleteRecordHeader"]
                </h3>
            </div>

            <div id="DeleteSaleInvoiceDetailModal-body" class="modal-body">
                @Localizer["DeleteRecordBody"]
            </div>

            <div id="AmountOverFlow" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["DiscountIsGreaterThanTheAmount"]
            </div>

            <div id="ERROR_ThisRecordHasDependencyOnItInAnotherEntity" class="red label-white middle hidden" style="height:40px;display:block;margin-top:2rem">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_ThisRecordHasDependencyOnItInAnotherEntity"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_SomeThingWentWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-deleteSaleInvoiceDetail-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-deleteSaleInvoiceDetail-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", @data_dismiss = "modal" })
                .Content(Localizer["Exit"]))
            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>



<div id="ExpireListModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style=" z-index:9999">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeadExpireListModal()" aria-hidden="true">&times;</button>
                <h3 id="ExpireListModal-header" class="smaller lighter blue no-margin @font">
                    Expire List
                </h3>
            </div>

            <div id="ExpireListModal-body" class="modal-body" style="width:60rem">

            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                .Name("btn-addExpire-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right", onclick = "addExpireListModal()" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-addExpire-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick= "closedExpireListModal()" })
                .Content(Localizer["Exit"]))

            </div>
        </div> @*.modal-content*@
    </div> @*.modal-dialog*@
</div>

<div id="ReceivedAmountHistoryModal" class="modal fade " data-backdrop="static" data-keyboard="false" style="z-index:99999">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeReceivedAmountHistoryModal()" aria-hidden="true">&times;</button>
                <h3 id="ReceivedAmountHistoryModal-header" class="smaller lighter blue no-margin ">
                    @Localizer["ReceivedAmountHistory"]
                </h3>
            </div>

            <div id="ReceivedAmountHistoryModal-body" class="modal-body" style="width:80vw">



            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">

                @(Html.Kendo().Button()
                    .Name("btn-ReceivedAmountHistoryModal-close")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick = "closeReceivedAmountHistoryModal()" })
                    .Content(Localizer["Exit"]))
            </div>
        </div>
    </div>

</div>
<!-- Grid -->

<script>

    var product_list = [];
    var updated = false;
    var ok_exit = false;

    $(document).ready(function () {





        SetTotalPrice('@Model.TotalPrice');
        let guid = $('#Guid').val();

        if (guid !== null && guid !== "" && guid !== undefined && guid !== "00000000-0000-0000-0000-000000000000") {
            $('#btn-ShowDiscountsList').removeClass('hidden');
            $('#btn-ShowCostsList').removeClass('hidden');
            $('#btn-AddMoneyConvert').removeClass('hidden');
            $('#btn-OkAndNew').removeClass('hidden');
            $('#btn-SaleInvoiceDetailModal-okandnew').removeClass('hidden');
            $('#btn-addSaleSaleInvoice-accept').addClass('hidden');
            $('#SalePriceTypeId').data('kendoDropDownList').enable(false);
        }
        $(".modal-backdrop:last").css('z-index','998');
        //setTimeout(function () {
        //    $("#CustomerId").focus();
        //    $('#CustomerId').data("kendoDropDownList").open();
        //}, 200);

    });

    $("#CustomerId").parent().on("keypress", function (e) {
        if (e.which === 13) {
            $('#InvoiceDateTxt').focus();
        }
    });

    $('#InvoiceDateTxt').on('keypress', function (e) {

        if (e.which === 13) {
            $("#MainInvoiceNum").focus();
        }
    });

    $('#MainInvoiceNum').on('keypress', function (e) {

        if (e.which === 13) {
            $('#Description').focus();
        }
    });

    $("#Description1").on("keypress", function (e) {
        if (e.which === 13) {
            AddNewRow();
        }
    });

    $('#btn-addSaleSaleInvoice-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#addNewSaleInvoiceForm #ERROR_Data").addClass("hidden");
        $("#addNewSaleInvoiceForm #Date-valid").addClass("hidden");
        $("#addNewSaleInvoiceForm #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#addNewSaleInvoiceForm .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('.emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    isEmmpty = false;
                    $('#btn-addSaleSaleInvoice-accept').removeAttr("disabled");
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        var link = "/SaleInvoice/AddOrUpdate";

        let SaleInvoice = {
            Guid: $("#Guid").val(),
            CustomerId: $("#CustomerId").val(),
            InvoiceDateTxt: $("#InvoiceDateTxt").val(),
            Description: $("#Description").val(),
            SalePriceTypeId: $("#SalePriceTypeId").val(),

        };

        var data = SaleInvoice;
        $(".loader").removeClass("hidden");

        $.ajax({
            type: "Post",
            url: link,
            data: data,
            success: function (response) {
                $('#btn-addSaleSaleInvoice-accept').removeAttr("disabled");

                if (response !== 0) {

                    if (response === "DateNotValid") {

                        $('"#addNewSaleInvoiceForm #Date-valid"').removeClass('hidden');

                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DataNotValid") {

                        $("#addNewSaleInvoiceForm #ERROR_Data").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "ThereIsNoMoneyConvert") {

                        bootbox.alert({
                            message: " @Localizer["ThereIsNoMoneyConvert"]",
                            className: 'bootbox-class'
                        });
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response.includes("YouHaveJust")) {

                        alert(response);
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else {

                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                        $('#Guid').val(response);
                        let grid = $("#SaleInvoiceDetailKendoGrid").data("kendoGrid");
                        grid.dataSource.options.transport.read.url = "/SaleInvoiceDetail/GetAll?saleInvoiceId=" + response;
                        //$('#btn-updateSaleInvoice-accept').removeClass('hidden');
                        //$('#btn-updateSaleInvoice-exit-accept').removeClass('hidden');
                        //$('#btn-SaleInvoiceDetailNewModal').removeClass('hidden');
                        $('#btn-ShowDiscountsList').removeClass('hidden');
                        $('#btn-ShowCostsList').removeClass('hidden');
                        $('#btn-AddMoneyConvert').removeClass('hidden');
                        $('#btn-OkAndNew').removeClass('hidden');
                        $('#btn-SaleInvoiceDetailModal-okandnew').removeClass('hidden');
                        //$('#btn-addSaleSaleInvoice-accept').addClass('hidden');
                    }
                } else {

                    $("#addNewSaleInvoiceForm #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                }
            }
        });
    });


    $("#btn-ShowDiscountsList").on("click", function () {

        $("#ShowDiscountsListModal #ERROR_Data").addClass("hidden");
        $("#ShowDiscountsListModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#ShowDiscountsListModal').modal('toggle');

        var link = "/SaleInvoiceDiscount/Form?SaleInvoiceId=";
        var Id = $("#Guid").val();
        $(".loader").removeClass("hidden");
        $('#ShowDiscountsListModal-body').load(link + Id + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });
    });

    function closeShowDiscountsListModal() {

        $('#ShowDiscountsListModal').modal('hide');
        $('#ShowDiscountsListModal-body').empty();
        $(".modal-backdrop:last").remove();
        SetTotalPricess();
    }



    $("#btn-ShowCostsList").on("click", function () {

        $("#ShowCostsListModal #ERROR_Data").addClass("hidden");
        $("#ShowCostsListModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#ShowCostsListModal').modal('toggle');
        $('#ShowCostsListModal').css('display', 'block');
        var link = "/Cost/SaleInvoiceCostForm?SaleInvoiceId=";
        var Id = $("#Guid").val();
        $(".loader").removeClass("hidden");
        $('#ShowCostsListModal-body').load(link + Id + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });
    });

    function closeShowCostsListModal() {

        $('#ShowCostsListModal').modal('hide');
        $('#ShowCostsListModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

    $("#btn-updateSaleInvoice-exit-accept").on("click", function () {
        ok_exit = true;
        $('#btn-updateSaleInvoice-accept').trigger('click');
    });

    $("#btn-updateSaleInvoice-accept").on("click", function () {
        $(this).attr("disabled", true);

        $("#addNewSaleInvoiceForm #ERROR_Data").addClass("hidden");
        $("#addNewSaleInvoiceForm #Date-valid").addClass("hidden");
        $("#addNewSaleInvoiceForm #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#addNewSaleInvoiceForm .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#addNewSaleInvoiceForm .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    isEmmpty = false;
                    $('#btn-updateSaleInvoice-accept').removeAttr("disabled");
                    ok_exit = false;
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        var link = "/SaleInvoice/AddOrUpdate";

        let SaleInvoice = {
            Guid: $("#Guid").val(),
            CustomerId: $("#CustomerId").val(),
            InvoiceDateTxt: $("#InvoiceDateTxt").val(),
            Description: $("#Description").val(),
            SalePriceTypeId: $("#SalePriceTypeId").val(),

        };

        $(".loader").removeClass("hidden");

        $.ajax({
            type: "Post",
            url: link,
            data: SaleInvoice,
            success: function (response) {
                $('#btn-updateSaleInvoice-accept').removeAttr("disabled");

                if (response === 0) {

                    ok_exit = false;
                    $("#addNewSaleInvoiceForm #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DateNotValid") {

                    ok_exit = false;
                    $("#addNewSaleInvoiceForm #Date-valid").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DataNotValid") {

                    ok_exit = false;
                    $("#addNewSaleInvoiceForm #ERROR_Data").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else {

                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                    if (ok_exit) {
                        ExitSale();
                    } else {
                        SetTotalPrice(response);
                    }
                }
            }
        });


    });


    function AddSaleInvoiceDetail() {
        let Guid = $("#Guid").val();

        let saleType = $("#SalePriceTypeId").data("kendoDropDownList").text();

        var link = "/SaleInvoiceDetail/AddModal?Id=";
        $(".loader").removeClass("hidden");
        $('.page-content').load(link + Guid, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
            $("#SaleTypeText").text(saleType);
        });


        //$("#AddSaleInvoiceDetailModal #AmountOverFlow").addClass("hidden");
        //$("#AddSaleInvoiceDetailModal #ERROR_MoneyConvert").addClass("hidden");
        //$("#AddSaleInvoiceDetailModal #ERROR_Data").addClass("hidden");
        //$("#AddSaleInvoiceDetailModal #Date-valid").addClass("hidden");
        //$("#AddSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").addClass("hidden");

        //$('#AddSaleInvoiceDetailModal').modal('toggle');

        //$('#AddSaleInvoiceDetailModal-body').empty();

        //var link = "/SaleInvoiceDetail/AddModal";

        //$(".loader").removeClass("hidden");
        //$('#AddSaleInvoiceDetailModal-body').load(link, function () {
        //    $(".loader").fadeIn("slow");
        //    $(".loader").addClass("hidden");
        //});
    }

    function EditSaleInvoiceDetail(element) {
        $("#EditSaleInvoiceDetailModal #AmountOverFlow").addClass("hidden");
        $("#EditSaleInvoiceDetailModal #ERROR_MoneyConvert").addClass("hidden");
        $("#EditSaleInvoiceDetailModal #ERROR_Data").addClass("hidden");
        $("#EditSaleInvoiceDetailModal #Date-valid").addClass("hidden");
        $("#EditSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").addClass("hidden");

        let header = '@Localizer["Edit"] @Localizer["SaleInvoice"]';
        $('#EditSaleInvoiceDetailModal-header').text(header);
        $('#EditSaleInvoiceDetailModal').modal('toggle');

        $('#EditSaleInvoiceDetailModal-body').empty();

        var link = "/SaleInvoiceDetail/EditModal?Id=";
        var Id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");
        $('#EditSaleInvoiceDetailModal-body').load(link + Id + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");

        });
    }

    function closeAddSaleInvoiceDetailModal() {

        $('#AddSaleInvoiceDetailModal').modal('hide');
        $('#AddSaleInvoiceDetailModal-body').empty();
        $(".modal-backdrop:last").remove();

    }

    function closeEditSaleInvoiceDetailModal() {

        $('#EditSaleInvoiceDetailModal').modal('hide');
        $('#EditSaleInvoiceDetailModal-body').empty();
        $(".modal-backdrop:last").remove();

    }


    $('#btn-AddSaleInvoiceDetailModal-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#AddSaleInvoiceDetailModal #AmountOverFlow").addClass("hidden");
        $("#AddSaleInvoiceDetailModal #ERROR_MoneyConvert").addClass("hidden");
        $("#AddSaleInvoiceDetailModal #Date-valid").addClass("hidden");
        $("#AddSaleInvoiceDetailModal #ERROR_Data").addClass("hidden");
        $("#AddSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#AddSaleInvoiceDetailModal .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#AddSaleInvoiceDetailModal .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    isEmmpty = false;
                    $('#btn-AddSaleInvoiceDetailModal-accept').removeAttr("disabled");
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }


        let SaleInvoiceDetail = {

            MasterId: $("#Guid").val(),
            ProductId: $("#ProductId").val(),
            ExpireDateTxt: $("#ExpireDateTxt").val(),
            BujNumber: $("#BujNumber").val(),
            Num: $("#Num").val(),
            SalePrice: $("#SalePrice").val(),
            WholeSalePrice: $("#WholeSalePrice").val(),
            SellingPrice: $("#SellingPrice").val(),
            WholeSellPrice: $("#WholeSellPrice").val(),
            MiddleSellPrice: $("#MiddleSellPrice").val(),
            Consideration: $("#Consideration").val(),
            FreeNum: $("#FreeNum").val(),
            Discount: $("#DiscountSharp").val(),
            CurrencyId: $("#CurrencyId").val(),
            SellingCurrencyId: $("#SellingCurrencyId").val(),
            WholeSellCurrencyId: $("#WholeSellCurrencyId").val(),
            MiddleSellCurrencyId: $("#MiddleSellCurrencyId").val(),
        }

        $(".loader").removeClass("hidden");

        $.ajax({
            type: "Post",
            url: "/SaleInvoiceDetail/Add",
            data: SaleInvoiceDetail,
            success: function (response) {
                $('#btn-AddSaleInvoiceDetailModal-accept').removeAttr("disabled");

                if (response === "DateNotValid") {

                    $("#AddSaleInvoiceDetailModal #Date-valid").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DiscountIsGreaterThanTheAmount") {

                    $("#AddSaleInvoiceDetailModal #AmountOverFlow").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DataNotValid") {

                    $("#AddSaleInvoiceDetailModal #ERROR_Data").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "ThereIsNoMoneyConvert") {

                    $("#AddSaleInvoiceDetailModal #ERROR_MoneyConvert").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === 0) {

                    $("#AddSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else {

                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                    $("#SaleInvoiceDetailKendoGrid .k-pager-refresh")[0].click();
                    SetTotalPrice(response);
                    closeAddSaleInvoiceDetailModal();
                    //$('#ProductId').data("kendoDropDownList").focus();
                    //$('#ProductId').data("kendoDropDownList").open();
                }
            }
        });

    });

    $('#btn-EditSaleInvoiceDetailModal-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#EditSaleInvoiceDetailModal #AmountOverFlow").addClass("hidden");
        $("#EditSaleInvoiceDetailModal #ERROR_MoneyConvert").addClass("hidden");
        $("#EditSaleInvoiceDetailModal #Date-valid").addClass("hidden");
        $("#EditSaleInvoiceDetailModal #ERROR_Data").addClass("hidden");
        $("#EditSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#EditSaleInvoiceDetailModal .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#EditSaleInvoiceDetailModal .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    isEmmpty = false;
                    $('#btn-EditSaleInvoiceDetailModal-accept').removeAttr("disabled");
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        let SellingFactor = {
            BaseAmount: $("#SellingBaseAmount").val(),
            DestAmount: $("#SellingDestAmount").val()
        };

        let WholeSellFactor = {

            BaseAmount: $("#WholeSellBaseAmount").val(),
            DestAmount: $("#WholeSellDestAmount").val()
        };

        let MiddleSellFactor = {

            BaseAmount: $("#MiddleSellBaseAmount").val(),
            DestAmount: $("#MiddleSellDestAmount").val()
        };


        let SaleInvoiceDetail = {
            Guid: $("#DetailGuid").val(),
            MasterId: $("#Guid").val(),
            ProductId: $("#ProductId").val(),
            ExpireDateTxt: $("#ExpireDateTxt").val(),
            BujNumber: $("#BujNumber").val(),
            Num: $("#Num").val(),
            SalePrice: $("#SalePrice").val(),
            WholeSalePrice: $("#WholeSalePrice").val(),
            SellingPrice: $("#SellingPrice").val(),
            WholeSellPrice: $("#WholeSellPrice").val(),
            MiddleSellPrice: $("#MiddleSellPrice").val(),
            Consideration: $("#Consideration").val(),
            FreeNum: $("#FreeNum").val(),
            Discount: $("#DiscountSharp").val(),
            CurrencyId: $("#CurrencyId").val(),
            SellingCurrencyId: $("#SellingCurrencyId").val(),
            WholeSellCurrencyId: $("#WholeSellCurrencyId").val(),
            MiddleSellCurrencyId: $("#MiddleSellCurrencyId").val(),
            SellingFactorId: $("#SellingFactorId").val(),
            WholeSellFactorId: $("#WholeSellFactorId").val(),
            MiddleSellFactorId: $("#MiddleSellFactorId").val(),
            SellingFactor: SellingFactor,
            WholeSellFactor: WholeSellFactor,
            MiddleSellFactor: MiddleSellFactor,
        }

        $(".loader").removeClass("hidden");

        $.ajax({
            type: "Post",
            url: "/SaleInvoiceDetail/Update",
            data: SaleInvoiceDetail,
            success: function (response) {
                $('#btn-EditSaleInvoiceDetailModal-accept').removeAttr("disabled");

                if (response === "DateNotValid") {

                    $("#EditSaleInvoiceDetailModal #Date-valid").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DiscountIsGreaterThanTheAmount") {

                    $("#EditSaleInvoiceDetailModal #AmountOverFlow").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DataNotValid") {

                    $("#EditSaleInvoiceDetailModal #ERROR_Data").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "ThereIsNoMoneyConvert") {

                    $("#EditSaleInvoiceDetailModal #ERROR_MoneyConvert").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === 0) {

                    $("#EditSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else {

                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                    $("#SaleInvoiceDetailKendoGrid .k-pager-refresh")[0].click();
                    SetTotalPrice(response);
                    closeEditSaleInvoiceDetailModal();
                    //$('#ProductId').data("kendoDropDownList").focus();
                    //$('#ProductId').data("kendoDropDownList").open();

                }
            }
        });

    });


    function SaleInvoiceDetailDeleteFunction(element) {

        $("#DeleteSaleInvoiceDetailModal #ERROR_ThisRecordHasDependencyOnItInAnotherEntity").addClass("hidden");
        $("#DeleteSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").addClass("hidden");
        $("#DeleteSaleInvoiceDetailModal #AmountOverFlow").addClass("hidden");

        $(".loader").removeClass("hidden");
        $('#DeleteSaleInvoiceDetailModal').modal('toggle');
        var Id = $(element).attr('data-id');
        $('#btn-deleteSaleInvoiceDetail-accept').attr('data-id', Id);
        $(".loader").fadeIn("slow");
        $(".loader").addClass("hidden");
    }

    $('#btn-deleteSaleInvoiceDetail-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#DeleteSaleInvoiceDetailModal #ERROR_ThisRecordHasDependencyOnItInAnotherEntity").addClass("hidden");
        $("#DeleteSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").addClass("hidden");
        $("#DeleteSaleInvoiceDetailModal #AmountOverFlow").addClass("hidden");

        var Id = $(this).attr('data-id');
        var link = "/SaleInvoiceDetail/Remove";

        var token = $(':input:hidden[name*="RequestVerificationToken"]');
        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: {
                __RequestVerificationToken: token.attr('value'),
                Id: Id
            },
            success: function (response) {
                $('#btn-deleteSaleInvoiceDetail-accept').removeAttr("disabled");

                if (response === "ERROR_ThisRecordHasDependencyOnItInAnotherEntity") {
                    $("#DeleteSaleInvoiceDetailModal #ERROR_ThisRecordHasDependencyOnItInAnotherEntity").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "ERROR_SomeThingWentWrong") {
                    $("#DeleteSaleInvoiceDetailModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else if (response === "DiscountIsGreaterThanTheAmount") {

                    $("#DeleteSaleInvoiceDetailModal #AmountOverFlow").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");

                } else {
                    $('#DeleteSaleInvoiceDetailModal').modal('hide');
                    $(".modal-backdrop:last").remove();

                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                    $("#SaleInvoiceDetailKendoGrid .k-pager-refresh")[0].click();
                    SetTotalPrice(response);
                }
            }
        });
    });

    function ExitSale() {
        $(".loader").removeClass("hidden");
        var link = "/SaleInvoice/Form";
        $(".page-content").load(link, function (responce) {

            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        })
    }

    function NewCustomer() {
        var link = `/Customer/AddNewModal`;
        $(".loader").removeClass("hidden");

        $('#AddNewCustomerModal').modal('toggle');
        $('#AddNewCustomerModal-body').load(link + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });
    }

    $("#btn-AddNewCustomer-accept").click(function () {
        $(this).attr("disabled", true);

        $("#AddNewCustomerModal #ERROR_Data").addClass("hidden");
        $("#AddNewCustomerModal #ERROR_SomeThingWentWrong").addClass("hidden");

        let s = $("#CustomerTypeName").val();

        $('#AddNewCustomerModal .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#AddNewCustomerModal .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    isEmmpty = false;
                    $('#btn-AddNewCustomer-accept').removeAttr("disabled");
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        //if ($("#PhoneNumber").val() > 0 && $("#PhoneNumber").val() < 8) {
        //    $("#Mobile-wrong").removeClass('hidden');
        //    return;
        //}


        var link = "/Customer/AddOrUpdate";
        var product = $("#addNewCustomerForm").serialize();

        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: product,
            success: function (response) {
                $('#btn-AddNewCustomer-accept').removeAttr("disabled");

                if (response !== 0) {
                    if (response === "ValueIsRepeated") {

                        $('#AddNewCustomerModal #Name-Exist').removeClass('hidden');

                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DataNotValid") {

                        $("#AddNewCustomerModal #ERROR_Data").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "WrongMobile") {

                        $("#Mobile-wrong").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else {

                        $('#AddNewCustomerModal').modal('hide');
                        $(".modal-backdrop:last").remove();
                        $('#AddNewCustomerModal-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                        $("#CustomerId").data("kendoDropDownList").dataSource.read();
                        let pr = $("#CustomerId").data("kendoDropDownList");
                        pr.bind("dataBound", function () {
                            pr.value(response);
                        });

                    }
                } else {

                    $("#AddNewCustomerModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                }
            }
        });
    })

    function SetTotalPrice(total) {

        @*let text = "";
        if (total != null) {

            let res = total.toString().split("_");
            for (let i = 0; i < res.length; i++) {
                text += "<div style='clear:both;'> <div class='@font @pull_rev' style='font-size: 17px;font-weight: bold;margin: 5px 10px;' >" + res[i] + " </div></div>";
            }
        }
        $('#SaleInvoiceDetailTotalPrice').empty();

        var ul = document.getElementById("SaleInvoiceDetailTotalPrice");
        ul.insertAdjacentHTML('afterbegin', text);*@
    }

    function okAndNew() {
        $(this).attr("disabled", true);
        UpdateSaleInvoiceMaster();
        $("#SaleInvoiceKendoGrid").find(".k-i-reload").click();
        $(this).attr("disabled", false);

        $('#SaleInvoiceDetailModal-body').empty();
        var link = "/SaleInvoice/AddAndNewModal";

        $(".loader").removeClass("hidden");
        $('#SaleInvoiceDetailModal-body').load(link + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
            $('#btn-SaleInvoiceDetailModal-okandnew').addClass('hidden');
        });
    }

    function RemainAfterRecieve(currencyId) {

        let total = $("#Total-" + currencyId).text();

        let discount = $("#Discount-" + currencyId).val();

        let remain = parseFloat(total) - parseFloat(discount);

        $("#Remain-" + currencyId).text(remain);

        let recieve = $("#Recieved-" + currencyId).text();

        if (recieve == "")
            recieve = "0";

        let remainAfterRecieve = remain - parseFloat(recieve);

        $("#RemainAfterRecieve-" + currencyId).text(remainAfterRecieve.toFixed(2));



    }

    /////////////saleInvoiceDetail


    function AddMoneyConvert() {
        $("#MoneyConvertModal #Date-valid").addClass("hidden");
        $("#MoneyConvertModal #ERROR_Data").addClass("hidden");
        $("#MoneyConvertModal #ERROR_SomeThingWentWrong").addClass("hidden");

        var link = "/MoneyConvert/AddNewModal";
        $(".loader").removeClass("hidden");

        
        $('#MoneyConvertModal').modal('toggle');
        $('#MoneyConvertModal-body').load(link, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });

    }

    $('#btn-MoneyConvertModal-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#MoneyConvertModal #Date-valid").addClass("hidden");
        $("#MoneyConvertModal #ERROR_Data").addClass("hidden");
        $("#MoneyConvertModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#MoneyConvertModal .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#MoneyConvertModal .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    $('#btn-MoneyConvertModal-accept').removeAttr("disabled");
                    isEmmpty = false;
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        var link = "/MoneyConvert/AddOrUpdate";
        var data = $("#addMoneyConvertForm").serialize();

        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: data,
            success: function (response) {
                $('#btn-MoneyConvertModal-accept').removeAttr("disabled");

                if (response !== 0) {
                    if (response === "DateNotValid") {

                        $("#MoneyConvertModal #Date-valid").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else if (response === "DataNotValid") {

                        $("#MoneyConvertModal #ERROR_Data").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else {

                        $('#MoneyConvertModal').modal('hide');
                        $(".modal-backdrop:last").remove();
                        $('#MoneyConvertModal-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                        let number = Currency_list.length;
                        if (number === 2) {

                            GetAllMoneyConverts(Currency_list[0].Id, Currency_list[1].Id).done(function (data) {



                                //data.map((item) => {

                                //    let string = item.BaseAmount + " " + item.BaseCurrencyName + " = " + item.DestAmount + " " + item.DestCurrencyName;

                                //    MoneyConvert_list.push({ Guid: item.Guid, String: string })
                                //});

                                const key = 'ShowMoneyConvert';

                                MoneyConvert_list = [...new Map(data.map(item =>
                                    [item[key], item])).values()];

                                CreateCurrencyTab(Currency_list, true);

                            });

                        }

                    }
                } else {

                    $("#MoneyConvertModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                }
            }
        });
    });


    function closeMoneyConvertModal() {
        $('#MoneyConvertModal').modal('toggle');
        $('#MoneyConvertModal-body').empty();
    }


    


</script>
