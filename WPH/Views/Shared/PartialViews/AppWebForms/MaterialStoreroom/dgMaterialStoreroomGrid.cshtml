
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer


@{
    string edit_title = Localizer["EditProduct"];
    string remove_title = Localizer["RemoveProduct"];
    string history_title = Localizer["ProductHistory"];
    string barcode_title = Localizer["ProductBarcode"];
}

<div style="clear:both;margin-top:1rem" >
    @(Html.Kendo().Grid<WPH.Models.MaterialStoreroom.MaterialStoreroomViewModel>    ()
    .Name("materialProductKendoGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {


            if ((bool)ViewBag.AccessDeleteMaterialStoreroom)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    $@"<a class='tooltip-error grid-btn' onClick='GridMaterialProductDeleteFunction(this);' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessEditMaterialStoreroom)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    $@"<a class='tooltip-success grid-btn edit' onClick='EditMaterial(this);' data-id='#=Guid#' data-rel='tooltip' title='{edit_title}' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            //columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "padding-left: 0px !important;padding-right: 0px !important;" })
            //.ClientTemplate(
            //    $@"<a class='tooltip-success grid-btn ' onClick='MaterialProductHistory(this);' data-id='#=Guid#' data-rel='tooltip' title='{history_title}' data-original-title='History'>
            //        <span class='purple'>
            //            <i class='ace-icon fa fa-history bigger-120'></i>
            //        </span>
            //    </a>
            //");

            columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
            .ClientTemplate(
                $@"<a class='tooltip-success grid-btn ' onClick='SetProductBarcode(this);' data-id='#=Guid#' data-rel='tooltip' title='{barcode_title}' data-original-title='SetBarcode'>
                    <span class='dark'>
                        <i class='ace-icon fa fa-barcode bigger-120'></i>
                    </span>
                </a>
            ");

            columns.Bound(x => x.Count).Format("{0:n0}").Title(Localizer["Stock"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.ProducerName).Title(Localizer["Producer"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            //columns.Bound(x => x.Barcode).Title(Localizer["Barcode"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.ProductTypeName).Title(Localizer["ProductType"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Name).Title(Localizer["Name"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(20).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Guid).Hidden();

        }
        else
        {
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(20).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Name).Title(Localizer["Name"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.ProductTypeName).Title(Localizer["ProductType"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            //columns.Bound(x => x.Barcode).Title(Localizer["Barcode"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.ProducerName).Title(Localizer["Producer"]).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Count).Format("{0:n0}").Title(Localizer["Stock"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });

            columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
            .ClientTemplate(
                $@"<a class='tooltip-success grid-btn ' onClick='SetProductBarcode(this);' data-id='#=Guid#' data-rel='tooltip' title='{barcode_title}' data-original-title='SetBarcode'>
                    <span class='dark'>
                        <i class='ace-icon fa fa-barcode bigger-120'></i>
                    </span>
                </a>
            ");

            //columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "padding-left: 0px !important;padding-right: 0px !important;" })
            //.ClientTemplate(
            //    $@"<a class='tooltip-success grid-btn ' onClick='MaterialProductHistory(this);' data-id='#=Guid#' data-rel='tooltip' title='{history_title}' data-original-title='History'>
            //        <span class='purple'>
            //            <i class='ace-icon fa fa-history bigger-120'></i>
            //        </span>
            //    </a>
            //");

            if ((bool)ViewBag.AccessEditMaterialStoreroom)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    $@"<a class='tooltip-success grid-btn edit' onClick='EditMaterial(this)' data-id='#=Guid#' data-rel='tooltip' title='{edit_title}' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessDeleteMaterialStoreroom)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    $@"<a class='tooltip-error grid-btn' onClick='GridMaterialProductDeleteFunction(this)' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }


        }
    })

        .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        //.Events(e => e.RequestStart("MaterialProductKendoGridRequestStart"))
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
            .PageSize(10)
            .Read(read => read.Action("GetAll", "MaterialStoreroom").Data("GetClinicSectionId"))
        )
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
        .Pageable(pageable => pageable
        .Input(true)
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5)
        .Numeric(true)) // Enable paging
        .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;overflow:auto" }) // Enable sorting
    )
</div>

<script>

    $(document).ready(function () {

        $("#materialProductKendoGrid").on("dblclick", "tr.k-state-selected", function (element) {

            $("#materialProductKendoGrid").find("tr.k-state-selected td a.edit").click();

        });

    })

</script>