@model Guid
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer


<div>
    @(Html.Kendo().Grid<WPH.Models.ReceptionServiceReceived.ReceptionServiceReceivedViewModel>()
    .Name("kendoUserInstallmentGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {

            
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                    $@"<a class='tooltip-error grid-btn' onClick='DeleteInstallment(this)'  data-id='#=InstallmentId#' data-rel='tooltip' title='Delete' data-original-title='Delete' data-toggle='modal'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            
            columns.Bound(x => x.Amount).Title(Localizer["Amount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.CreatedDate).Filterable(false).Format("{0: dd/MM/yyyy}").Title(Localizer["Name"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(10).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.InstallmentId).Hidden();
        }
        else
        {
            columns.Bound(x => x.InstallmentId).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(10).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.CreatedDate).Filterable(false).Format("{0: dd/MM/yyyy}").Title(Localizer["Name"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Amount).Title(Localizer["Amount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                    $@"<a class='tooltip-error grid-btn' onClick='DeleteInstallment(this)'  data-id='#=InstallmentId#' data-rel='tooltip' title='Delete' data-original-title='Delete' data-toggle='modal'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            

        }

    })

        .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
        .PageSize(10)
        .Read(read => read.Action("GetAllReceptionServiceRecievedForInstallment", "ReceptionServiceReceived", new
        {
            ReceptionId = Model
        }))
        )

        .Pageable(pageable => pageable
        .Input(true)
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5)
        .Numeric(true)) // Enable paging
        .Sortable().HtmlAttributes(new {  @style = "direction: ltr;margin-top:2rem;font-size:1.3rem;overflow:auto" }) // Enable sorting
    )
</div>

<script>

    $(document).ready(function () {

        let grid = $("#kendoUserInstallmentGrid").data("kendoGrid");

        grid.bind("dataBound", kendoGeneralPortionGrid_dataBound);

    });

    function kendoGeneralPortionGrid_dataBound() {

        let grid = $("#kendoUserInstallmentGrid").data("kendoGrid");

        let data = grid.dataSource._data;

        let allGeneral = 0;

        for (let i = 0; i < data.length; i++) {
            let Amount = data[i].get("Amount");

            allGeneral += parseFloat(Amount);

        }

        let TotalAmount = $("#totalServiceAmount").text();

        let remain = parseFloat(TotalAmount) - allGeneral;

        $("#remained").text(remain);

    }

    function DeleteInstallment(element) {

        let id = $(element).attr('data-id');


        bootbox.confirm({
            message: "Delete This Record?",
            className: 'bootbox-class MyFont-Sarchia-grid',
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'k-primary k-button'
                },
                cancel: {
                    label: 'No',
                    className: 'k-button'
                }
            },
            callback: function (result) {

                if (result) {
                    $(".loader").removeClass("hidden");
                    $.ajax({
                        data: { Id: id },
                        url: "/ReceptionServiceReceived/RemoveInstallment",
                        type: "Post",
                        success: function (response) {
                            if (response != 0) {
                                $("#kendoUserInstallmentGrid").data("kendoGrid").dataSource.read();
                                $(".loader").addClass("hidden");

                            }
                        }
                    });


                }
                else {
                    return;
                }
            }
        })

    }

</script>

