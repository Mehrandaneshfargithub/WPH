@model Guid
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer


<div>
    @(Html.Kendo().Grid<WPH.Models.ReceptionDetailPayViewModel>()
    .Name("kendoGeneralPortionGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {

            if ((bool)ViewBag.AccessDeleteReceptionDetailPay)
            {
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                    $@"<a class='tooltip-error grid-btn' onClick='GridDeleteReceptionDetailPayGeneral(this)' data-id='#=Guid#' data-rel='tooltip' title='Delete' data-original-title='Delete' data-toggle='modal'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }
            columns.Bound(x => x.Amount).Title(Localizer["Amount"]).Format("{0:n0}").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.UserPortionUserName).Filterable(false).Title(Localizer["Name"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(10).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Guid).Hidden();
        }
        else
        {
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(10).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.UserPortionUserName).Filterable(false).Title(Localizer["Name"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Amount).Title(Localizer["Amount"]).Filterable(false).Format("{0:n0}").HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            if ((bool)ViewBag.AccessDeleteReceptionDetailPay)
            {
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                    $@"<a class='tooltip-error grid-btn' onClick='GridDeleteReceptionDetailPayGeneral(this)'  data-id='#=Guid#' data-rel='tooltip' title='Delete' data-original-title='Delete' data-toggle='modal'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }

        }

    })

        .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
        .PageSize(10)
        .Read(read => read.Action("GetAllReceptionDetailPayBySpecification", "UserManagment", new
        {
            ReceptionId = Model,
            Specification = false
        }))
        )

        //.Pageable(pageable => pageable
        //.Input(true)
        //.Refresh(true)
        //.PageSizes(true)
        //.ButtonCount(5)
        //.Numeric(true)) // Enable paging
        .Sortable().HtmlAttributes(new {  @style = "direction: ltr;margin-top:2rem;font-size:1.3rem;overflow:auto" }) // Enable sorting
    )
</div>



<script>

    $(document).ready(function () {

        let grid = $("#kendoGeneralPortionGrid").data("kendoGrid");

        grid.bind("dataBound", kendoGeneralPortionGrid_dataBound);

    });

    function kendoGeneralPortionGrid_dataBound() {

        grid1 = true;

        if (grid1 && grid2) {
            setRemain();
        }

    }

    function GridDeleteReceptionDetailPayGeneral(element) {

        let id = $(element).attr('data-id');


        bootbox.confirm({
            message: "Delete This Record?",
            className: 'bootbox-class MyFont-Sarchia-grid',
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'k-primary k-button'
                },
                cancel: {
                    label: 'No',
                    className: 'k-button'
                }
            },
            callback: function (result) {

                if (result) {
                    $(".loader").removeClass("hidden");
                    $.ajax({
                        data: { Id: id },
                        url: "/UserManagment/RemoveReceptionDetailPay",
                        type: "Post",
                        success: function (response) {
                            if (response != 0) {
                                console.log("dfdfdf")
                                $("#kendoGeneralPortionGrid").data("kendoGrid").dataSource.read();
                                $(".loader").addClass("hidden");
                                $("#UserGeneralPortionName").data("kendoDropDownList").dataSource.read();

                            }
                        }
                    });


                }
                else {
                    return;
                }
            }
        })
    }

</script>