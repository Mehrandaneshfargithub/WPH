@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer


@{

    string edit_title = Localizer["EditAnalysis"];
    string remove_title = Localizer["RemoveAnalysis"];
    string up_title = Localizer["IncreasePriority"];
    string down_title = Localizer["DecreasePriority"];
    string item_title = Localizer["SetAnalysisItems"];
}


<div>
    @(Html.Kendo().Grid<WPH.Models.CustomDataModels.Analysis.AnalysisViewModel>()
    .Name("kendoAnalysisGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {
            if ((bool)ViewBag.AccessDeleteAnalysis)
            {
                columns.Bound("").Title(" ").Width(10).HeaderHtmlAttributes(new { @style = "color:white;" })
                .ClientTemplate(
                   $@"<a class='tooltip-error grid-btn' onClick='GridDeleteFunction(this)' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete' data-toggle='modal'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessEditAnalysis)
            {
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                   $@"<a class='tooltip-success grid-btn edit' onClick='EditAnalysis(this)' data-id='#=Guid#' data-rel='tooltip' title='{edit_title}' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            columns.Bound("").Title(string.Empty).Width(30)
            .ClientTemplate(
              $@"<a class='tooltip-success grid-btn' onClick='GridAnalysisUpPriorityFunction(this);' data-id='#=Guid#' data-Priority='#=Priority#' data-rel='tooltip' title='{up_title}' data-original-title='Up'>
                    <span class='blue'>
                        <i class='ace-icon fa fa-arrow-up bigger-120'></i>
                    </span>
                </a>
            ");

            columns.Bound("").Title(string.Empty).Width(30)
            .ClientTemplate(
              $@"<a class='tooltip-success grid-btn' onClick='GridAnalysisDownPriorityFunction(this);' data-id='#=Guid#' data-Priority='#=Priority#' data-rel='tooltip' title='{down_title}' data-original-title='Down'>
                    <span class='red'>
                        <i class='ace-icon fa fa-arrow-down bigger-120'></i>
                    </span>
                </a>
            ");

            columns.Bound("").Title(" ").Width(10)
            .ClientTemplate(
               $@"<a class='tooltip-success grid-btn' onClick='AddAnalysisItemToAnalysis(this)' data-id='#=Guid#' data-name='#=Name#' data-rel='tooltip' title='{item_title}' data-original-title='Items'>
                    <span class='green'>
                        <i class='ace-icon fa fa-cubes bigger-120'></i>
                    </span>
                </a>
            ");

            columns.Bound(x => x.ModifiedUserName).Filterable(false).Title(Localizer["Name"] + ' ' + Localizer["User"] + '(' + Localizer["Modified"] + ')').HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.CreatedUserName).Filterable(false).Title(Localizer["Name"] + ' ' + Localizer["User"] + '(' + Localizer["New"] + ')').HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.DiscountCurrencyName).Filterable(false).Title(Localizer["Type"] + ' ' + Localizer["Currency"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.TotalAmountWithDiscount).Filterable(false).Format("{0:n2}").Title(Localizer["TotalAmount"] + ' ' + Localizer["After"] + ' ' + Localizer["Discount"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Discount).Format("{0:n2}").Filterable(false).Title(Localizer["Discount"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.TotalAmount).Format("{0:n2}").Filterable(false).Title(Localizer["TotalAmount"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Note).Filterable(false).Title(Localizer["AnalysisNote"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound("").Title("").Width(10)
            .ClientTemplate(
               @"<span class='blue grid-btn' onClick='ActiveDeactiveAnalysis(this)' data-id='#=Guid#'>
                        <i style='font-size:18px' class='#if(IsActive){#fa fa-check-square#}else{#fa fa-square-o#}#'></i>
                </span>
            ");
            columns.Bound(x => x.Abbreviation).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Abbreviation"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Code).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Code"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Name).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Width(300).Title(Localizer["AnalysisName"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(10).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.IsActive).Hidden();
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.GridFormat).Hidden();
            columns.Bound(x => x.Priority).Hidden();
        }
        else
        {
            columns.Bound(x => x.GridFormat).Hidden();
            columns.Bound(x => x.Priority).Hidden();
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.IsActive).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(10).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Name).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Width(300).Title(Localizer["AnalysisName"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Code).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Width(300).Title(Localizer["Code"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Abbreviation).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Width(300).Title(Localizer["Abbreviation"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound("").Title("").Width(10)
            .ClientTemplate(
               @"<span class='blue grid-btn' onClick='ActiveDeactiveAnalysis(this)' data-id='#=Guid#'>
                        <i style='font-size:18px' class='#if(IsActive){#fa fa-check-square#}else{#fa fa-square-o#}#'></i>
                </span>
            ");
            columns.Bound(x => x.Note).Filterable(false).Title(Localizer["AnalysisNote"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.TotalAmount).Filterable(false).Format("{0:n2}").Title(Localizer["TotalAmount"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Discount).Filterable(false).Title(Localizer["Discount"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.TotalAmountWithDiscount).Filterable(false).Format("{0:n2}").Title(Localizer["TotalAmount"] + ' ' + Localizer["After"] + ' ' + Localizer["Discount"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.DiscountCurrencyName).Filterable(false).Title(Localizer["Type"] + ' ' + Localizer["Currency"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.CreatedUserName).Filterable(false).Title(Localizer["Name"] + ' ' + Localizer["User"] + '(' + Localizer["New"] + ')').HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.ModifiedUserName).Filterable(false).Title(Localizer["Name"] + ' ' + Localizer["User"] + '(' + Localizer["Modified"] + ')').HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });

            columns.Bound("").Title(" ").Width(10)
            .ClientTemplate(
               $@"<a class='tooltip-success grid-btn' onClick='AddAnalysisItemToAnalysis(this)' data-id='#=Guid#' data-name='#=Name#' data-rel='tooltip' title='{item_title}' data-original-title='Items'>
                    <span class='green'>
                        <i class='ace-icon fa fa-cubes bigger-120'></i>
                    </span>
                </a>
            ");

            columns.Bound("").Title(string.Empty).Width(30)
            .ClientTemplate(
               $@"<a class='tooltip-success grid-btn' onClick='GridAnalysisDownPriorityFunction(this);' data-id='#=Guid#' data-Priority='#=Priority#' data-rel='tooltip' title='{down_title}' data-original-title='Down'>
                    <span class='red'>
                        <i class='ace-icon fa fa-arrow-down bigger-120'></i>
                    </span>
                </a>
            ");

            columns.Bound("").Title(string.Empty).Width(30)
            .ClientTemplate(
               $@"<a class='tooltip-success grid-btn' onClick='GridAnalysisUpPriorityFunction(this);' data-id='#=Guid#' data-Priority='#=Priority#' data-rel='tooltip' title='{up_title}' data-original-title='Up'>
                    <span class='blue'>
                        <i class='ace-icon fa fa-arrow-up bigger-120'></i>
                    </span>
                </a>
            ");

            if ((bool)ViewBag.AccessEditAnalysis)
            {
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                   $@"<a class='tooltip-success grid-btn edit' onClick='EditAnalysis(this)' data-id='#=Guid#' data-rel='tooltip' title='{edit_title}' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessDeleteAnalysis)
            {
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                   $@"<a class='tooltip-error grid-btn' onClick='GridDeleteFunction(this)' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete' data-toggle='modal'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }
        }

    })

        .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
        .PageSize(50)
        .Read(read => read.Action("GetAll", "Analysis").Data("GetPeriodForAnalysis"))
        )
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
        .Pageable(pageable => pageable
        .Input(true)
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5)
        .Numeric(true)) // Enable paging
        .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;font-size:1.3rem;overflow:auto", @class = "MyFont-Roboto-header" }) // Enable sorting
    )
</div>


<script>


    $(document).ready(function () {


        $("#kendoAnalysisGrid").on("dblclick", "tr.k-state-selected", function (element) {

            $("#kendoAnalysisGrid").find("tr.k-state-selected td a.edit").click();

        });

    })

    function AnalysisItem(element) {
        $(".loader").removeClass("hidden");
        let Guid = $(element).attr("data-id");
        link = "/AnalysisItem/Form"
        $(".page-content").load(link, function () {
            let analysDrop = $("#analysis").data("kendoDropDownList");
            analysDrop.bind("dataBound", function () {
                analysDrop.value(Guid);

                $('#analysisid').attr('data-Value', Guid);
                $(".k-pager-refresh")[0].click();

            });


            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });

    }


    function ActiveDeactiveAnalysis(element) {

        let id = $(element).attr('data-id');
        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: "/Analysis/ActiveDeactiveAnalysis",
            data: { AnalysisId: id },
            success: function (response) {

                $(".loader").fadeIn("slow");
                $(".loader").addClass("hidden");
                $("#kendoAnalysisGrid").find(".k-pager-refresh").click();
            }
        });

    }


</script>