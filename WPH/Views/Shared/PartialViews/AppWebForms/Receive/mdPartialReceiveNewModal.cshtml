@model WPH.Models.Receive.ReceiveViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string font = "", pull = "", row_reverse = "", dir = "";

    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-left ";
        row_reverse = "row";
        dir = " ";

    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-right ";
        row_reverse = "row-reverse";
        dir = " direction:rtl; ";
        <h3 id="newReceiveText" class="hidden">@Localizer["Receive"] @Localizer["New"]</h3>
    }

}

<script>

    $('#AddPartialReceiveModal-customer').text('@Model.CustomerName');

    function ChangeBaseCurrency(e) {
        var dataItem = this.dataItem(e.item);

        var currencyId = $("#CurrencyId").data("kendoDropDownList");
        currencyId.value(dataItem.Id);

        $("#BaseAmount").data("kendoNumericTextBox").value(1);
        $("#DestAmount").data("kendoNumericTextBox").value(1);
        $("#lblBaseAmount").text(" ");
        $("#lblDestAmount").text(" ");
        $("#convert_container").addClass("hidden");

        RefreshGrids();
    }

    function DataBoundBaseCurrency() {
        var baseCurrencyId = $("#BaseCurrencyId").data("kendoDropDownList");

        var currencyId = $("#CurrencyId").data("kendoDropDownList");
        currencyId.dataSource.data(baseCurrencyId.dataSource.data());
        //currencyId.value(Model.CurrencyId);

        RefreshGrids();
    }

    function GetCustomerAndCurrency() {

        return {
            customerId: $("#CustomerIdFilter").val(),
            currencyId: $("#BaseCurrencyId").val()
        };
    }

</script>

@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.Guid)
@Html.HiddenFor(m => m.CustomerId)
@Html.HiddenFor(m => m.ReceiveType)

<div style="clear:both;overflow:hidden;">

    @*<div class="col-sm-12" style="padding:0px;">*@

    <div class="col-sm-12" style="padding:0px;">

        <div class="col-sm-12" style="padding:0px;">

            <div class="col-sm-2">
                <label class="block clearfix">
                    <label for="form-field-8">@Localizer["BaseCurrency"] : </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().DropDownList()
                        .Name("BaseCurrencyId")
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .Events(e => e.Change("ChangeBaseCurrency").DataBound("DataBoundBaseCurrency"))
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetAllCurrencies", "BaseInfo");
                            })
                            .ServerFiltering(false);
                        })
                        //.Value(Model.BaseCurrencyId?.ToString())
                        .HtmlAttributes(new { style = "width: 100%;" })
                        )
                    </span>
                </label>
            </div>

            <div class="col-sm-2">
                <label class="block clearfix">
                    <label for="form-field-8">@Localizer["Date"] : </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().DatePicker()
                        .Name("ReceiveDateTxt")
                        .Format("dd/MM/yyyy")
                        .Value(Model.ReceiveDate ?? DateTime.Now)
                        .Enable((bool)(ViewBag.AccessEditDate ?? false))
                        .HtmlAttributes(new { style = "width: 100%;", @data_checkEmpty = "ReceiveDateTxt-box" })
                        )
                    </span>
                    <span id="ReceiveDateTxt-box" class="emptybox hidden" data-isEssential="true" style="color:red;">
                        @Localizer["ThisFieldIsEmptyPleaseFillIt"]
                    </span>
                    <span id="Date-valid" class="emptybox hidden" style="color:red;">
                        @Localizer["DateNotValid"]
                    </span>
                </label>
            </div>

            <div class="col-sm-2">
                <label class="block clearfix">
                    <label for="form-field-8">@Localizer["Amount"] : </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().NumericTextBox<decimal>()
                        .Name("Amount")
                        .Format("#.##")
                        .Min(0)
                        //.Value(Model.Amount ?? 0)
                        .HtmlAttributes(new { style = "width: 100%", @data_checkEmpty = "Amount-box" })
                        )
                    </span>
                    <span id="Amount-box" class="emptybox hidden" data-isEssential="true" style="color:red;">
                        @Localizer["ThisFieldIsEmptyPleaseFillIt"]
                    </span>
                </label>
            </div>

            <div class="col-sm-2">
                <label class="block clearfix">
                    <label for="form-field-8">@Localizer["Currency"] : </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().DropDownList()
                        .Name("CurrencyId")
                        .DataTextField("Name")
                        .DataValueField("Id")
                        //.DataSource(source =>
                        //{
                        //    source.Read(read =>
                        //    {
                        //        read.Action("GetAllCurrencies", "BaseInfo");
                        //    })
                        //    .ServerFiltering(false);
                        //})
                        //.Value(Model.BaseCurrencyId?.ToString())
                        .HtmlAttributes(new { style = "width: 100%;", onchange = "changeCurrency()" })
                        )
                    </span>
                </label>
            </div>

            <div id="convert_container" class="col-sm-2 hidden" style="padding:0px;">
                <div class="col-sm-6">
                    <label class="block clearfix ">
                        <label id="lblBaseAmount" for="form-field-8"></label>
                        <span class="block input-icon input-icon-right">
                            @(Html.Kendo().NumericTextBox<decimal>()
                        .Name("BaseAmount")
                        .Decimals(0)
                        .Min(1)
                        //.Value(Model.BaseAmount ?? 1)
                        .HtmlAttributes(new { style = "width: 100%" })
                        )
                        </span>
                    </label>
                </div>

                <div class="col-sm-6">
                    <label class="block clearfix ">
                        <label id="lblDestAmount" for="form-field-8"></label>
                        <span class="block input-icon input-icon-right">
                            @(Html.Kendo().NumericTextBox<decimal>()
                        .Name("DestAmount")
                        .Decimals(0)
                        .Min(1)
                        //.Value(Model.DestAmount ?? 1)
                        .HtmlAttributes(new { style = "width: 100%"})
                        )
                        </span>
                    </label>
                </div>
            </div>

            <div class="col-sm-2" style="padding:0px;">
                <div class="col-sm-6">
                    <label class="block clearfix">
                        <label for="form-field-8">% @Localizer["Discount"]: </label>
                        <span class="block input-icon input-icon-right">
                            @(Html.Kendo().NumericTextBox<decimal>()
                        .Name("DetailDiscount")
                        .Culture("en-US")
                        .Format("#.##")
                        .Min(0)
                        .Max(100)
                        .SelectOnFocus(true)
                        .Value(0)
                        .HtmlAttributes(new { style = "width: 100%" })
                        )
                        </span>
                    </label>
                </div>

                <div class="col-sm-6">
                    <label class="block clearfix">
                        <label for="form-field-8"># @Localizer["Discount"]: </label>
                        <span class="block input-icon input-icon-right">
                            @(Html.Kendo().NumericTextBox<decimal>()
                        .Name("Discount")
                        .Culture("en-US")
                        .Format("#.##")
                        .Min(0)
                        .SelectOnFocus(true)
                        //.Value(Model.Discount ?? 0)
                        .HtmlAttributes(new { style = "width: 100%" })
                        )
                        </span>
                    </label>
                </div>
            </div>


        </div>


        <div class="col-sm-12" style="padding:0px;">

            <div class="col-sm-2">
                <label class="block clearfix">
                    <label for="form-field-8">@Localizer["Total"] : </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().TextBox()
                        .Name("TotalAmount")
                        .Enable(false)
                        .HtmlAttributes(new { style = "width: 100%" })
                        )
                    </span>
                </label>
            </div>

            <div class="col-sm-2">
                <label class="block clearfix">
                    <label for="form-field-8">@Localizer["Receiveed"] : </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().TextBox()
                        .Name("ReceiveedAmount")
                        .Enable(false)
                        .HtmlAttributes(new { style = "width: 100%" })
                        )
                    </span>
                </label>
            </div>

            <div class="col-sm-2">
                <label class="block clearfix">
                    <label for="form-field-8">@Localizer["Rem"] : </label>
                    <span class="block input-icon input-icon-right">
                        @(Html.Kendo().TextBox()
                        .Name("RemAmount")
                        .Enable(false)
                        .HtmlAttributes(new { style = "width: 100%" })
                        )
                    </span>
                </label>
            </div>

            <div class="col-sm-2">

            </div>

            <div class="col-sm-2" style="padding:0px;">

            </div>


        </div>
    </div>

    <div class="row page-header ">

    </div>

    <div style="width:100%">

        <div style="width:98%;margin: 0px auto;">
            <div style="width:100%;display:flex;margin:10px 0px;">
                <div style="width:46%;">
                    <h1 class="@font blue" style="font-size:1.4rem;margin: 0px;">
                        @Localizer["ReceiveSaleInvoice"]
                    </h1>
                </div>
                <div style="width: 8%;">

                </div>
                <div style="width: 46%;">
                    <h1 class="@font blue" style="font-size:1.4rem;margin: 0px;">
                        @Localizer["NotReceiveSaleInvoice"]
                    </h1>
                </div>
            </div>
            <div style="width:100%;display:flex;">

                <div class=" Grid-Content @font" style="width:46%;height:200px;overflow-y: auto;overflow-x: hidden;">
                    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Receive/dgReceiveInvoiceGrid.cshtml")
                </div>
                <div style="width: 8%;height:200px;display:flex;flex-direction:column;align-items:center;justify-content: center;">
                    @(Html.Kendo().Button()
                        .Name("btn_select_receive")
                        .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "btn btn-success" })
                        .Content(Localizer["<"]))
                    @(Html.Kendo().Button()
                        .Name("btn_notSelect_receive")
                        .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "btn btn-danger " })
                        .Content(Localizer[">"]))
                </div>
                <div class=" Grid-Content @font" style="width: 46%;height:200px;overflow-y: auto;overflow-x: hidden;">

                    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Receive/dgTotalInvoiceGrid.cshtml")
                </div>
            </div>
        </div>


        <div style="width:98%;margin: 0px auto;">
            <div style="width:100%;display:flex;margin:10px 0px;">
                <div style="width:46%;">
                    <h1 class="@font blue" style="font-size:1.4rem;margin: 0px;">
                        @Localizer["ReceiveReturnSaleInvoice"]
                    </h1>
                </div>
                <div style="width: 8%;">

                </div>
                <div style="width: 46%;">
                    <h1 class="@font blue" style="font-size:1.4rem;margin: 0px;">
                        @Localizer["NotReceiveReturnSaleInvoice"]
                    </h1>
                </div>
            </div>
            <div style="width:100%;display:flex;">

                <div class=" Grid-Content @font" style="width:46%;height:200px;overflow-y: auto;overflow-x: hidden;">
                    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Receive/dgReceiveReturnInvoiceGrid.cshtml")
                </div>
                <div style="width: 8%;height:200px;display:flex;flex-direction:column;align-items:center;justify-content: center;">
                    @(Html.Kendo().Button()
                        .Name("btn_select_return")
                        .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "btn btn-success" })
                        .Content(Localizer["<"]))
                    @(Html.Kendo().Button()
                        .Name("btn_notSelect_return")
                        .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "btn btn-danger " })
                        .Content(Localizer[">"]))
                </div>
                <div class=" Grid-Content @font" style="width: 46%;height:200px;overflow-y: auto;overflow-x: hidden;">
                    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Receive/dgTotalReturnInvoiceGrid.cshtml")
                </div>
            </div>
        </div>

    </div>

    <div class="row page-header ">

    </div>


    <div style="width:100%">

        <div style="width:98%;margin: 0px auto;">
            <div style="width:100%;margin:10px 0px;">
                <div style="">
                    <h1 class="@font blue" style="font-size:1.4rem;margin: 0px;">
                        @Localizer["ReceiveHistory"]
                    </h1>
                </div>

            </div>
            <div style="width:100%;">

                <div class=" Grid-Content @font" style="height:200px;overflow-y: auto;overflow-x: hidden;">
                    @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/Receive/dgPartialReceiveHistoryGrid.cshtml")
                </div>

            </div>
        </div>

    </div>

    @*</div>*@
    <div class="col-sm-12">
        <label class="block clearfix">
            <label for="form-field-8">@Localizer["Description"] : </label>
            <span class="block input-icon input-icon-right">
                @(Html.Kendo().TextArea()
                    .Name("Description")
                    .Rows(3)
                    .Value(Model.Description)
                    .HtmlAttributes(new { style = "font-size:1.5rem;width:100%" })
                    )
            </span>
        </label>
    </div>
</div>
<script>

    SetDiscount();
    $(document).ready(function () {

        setTimeout(function () {
            $("#BaseCurrencyId").data("kendoDropDownList").focus();
        }, 500);
    });

    function RefreshGrids() {
        var guid = $("#Guid").val();
        var customerId = $("#CustomerIdFilter").val();
        var currencyId = $("#BaseCurrencyId").val();

        $.ajax({
            type: "Get",
            url: "/SaleInvoice/GetNotPartialReceiveSaleInvoice",
            data: { customerId: customerId, currencyId: currencyId, receiveId: guid  },
            success: function (response) {

                $("#totalInvoiceKendoGrid").data("kendoGrid").setDataSource(response);
            }
        });

        $.ajax({
            type: "Get",
            url: "/SaleInvoice/GetPartialReceiveSaleInvoice",
            data: { receiveId: guid, currencyId: currencyId  },
            success: function (response) {
                let list = response.map(a => a.ReceiveIds);
                GetPartialReceiveHistory(list);

                $("#TotalAmount").val(CalculateTotal(response));

                $("#receiveInvoiceKendoGrid").data("kendoGrid").setDataSource(response);
            }
        });

        $.ajax({
            type: "Get",
            url: "/ReturnSaleInvoice/GetNotPartialReceiveReturnSaleInvoice",
            data: { customerId: customerId, currencyId: currencyId },
            success: function (response) {

                $("#totalReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(response);
            }
        });

        $.ajax({
            type: "Get",
            url: "/ReturnSaleInvoice/GetPartialReceiveReturnSaleInvoice",
            data: { receiveId: guid, currencyId: currencyId  },
            success: function (response) {

                $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(response);
            }
        });
    }

    $('#BaseCurrencyId').parent().keypress(function (e) {
        if (e.which === 13 || e.which === 9) {
            $('#ReceiveDateTxt').focus();
        }
    });

    $('#ReceiveDateTxt').on('keypress', function (e) {
        if (e.which === 13) {
            $("#CurrencyId").data("kendoDropDownList").focus();
        }
    });

    $('#CurrencyId').parent().keypress(function (e) {
        if (e.which === 13 || e.which === 9) {
            let currency = $("#CurrencyId").val();
            let base = $("#BaseCurrencyId").val();

            if (currency !== base) {
                $('#BaseAmount').data("kendoNumericTextBox").focus();

            } else {

                $('#DetailDiscount').data("kendoNumericTextBox").focus();
            }
        }
    });

    $("#BaseAmount").on("keypress", function (e) {
        if (e.which === 13) {
            $("#DestAmount").data("kendoNumericTextBox").focus();
        }
    });

    $("#DestAmount").on("keypress", function (e) {
        if (e.which === 13) {
            $('#DetailDiscount').data("kendoNumericTextBox").focus();
        }
    });

    $("#DetailDiscount").on("focus", function (e) {
        $('#DetailDiscount').select();
    });

    $("#DetailDiscount").focusout(function () {

        let wholepur = $('#Amount').val();
        if (wholepur > 0) {
            let dis = $('#DetailDiscount').data("kendoNumericTextBox").value();
            let amount = (dis * wholepur) / 100;
            $('#Discount').data("kendoNumericTextBox").value(amount);
        }

    });

    $("#DetailDiscount").on("keypress", function (e) {
        if (e.which === 13) {
            $('#Discount').data("kendoNumericTextBox").focus();
        }
    });


    $("#Discount").on("keypress", function (e) {
        if (e.which === 13) {
            $('#Description').focus();
        }
    });

    $("#Discount").on("focus", function (e) {
        $('#Discount').select();
    });

    $("#Discount").focusout(function () {
        SetDiscount();
    });

    function SetDiscount() {
        let wholepur = $('#Amount').val();
        if (wholepur > 0) {
            let dis = $('#Discount').data("kendoNumericTextBox").value();
            let amount = (100 * dis) / wholepur;
            $('#DetailDiscount').data("kendoNumericTextBox").value(amount);
        }
    }

    function changeCurrency() {
        let currency = $("#CurrencyId").val();
        let base = $("#BaseCurrencyId").val();

        if (currency !== base) {
            $("#convert_container").removeClass('hidden');

            $("#lblBaseAmount").text($("#BaseCurrencyId").data("kendoDropDownList").text());
            $("#lblDestAmount").text($("#CurrencyId").data("kendoDropDownList").text());

        } else {

            $("#BaseAmount").data("kendoNumericTextBox").value(1);
            $("#DestAmount").data("kendoNumericTextBox").value(1);
            $("#lblBaseAmount").text(" ");
            $("#lblDestAmount").text(" ");
            $("#convert_container").addClass("hidden");
        }
    }


    $('#btn_select_receive').on("click", function () {
        $(this).attr("disabled", true);

        let totalInvoice_dataSource = $("#totalInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let receiveInvoice_dataSource = $("#receiveInvoiceKendoGrid").data("kendoGrid").dataSource.data();

        let selected_list = [];
        $(".select_totalInvoice").find(":checkbox:checked").each(function () {

            selected_list.push($(this).parent().attr("data-receiveids"));
        });

        $(".select_receiveInvoice").find(":checkbox").each(function () {

            selected_list.push($(this).parent().attr("data-receiveids"));
        });

        $(".select_return_receiveInvoice").find(":checkbox").each(function () {

            selected_list.push($(this).parent().attr("data-receiveids"));
        });

        if (CheckConflict(selected_list)) {
            bootbox.alert({
                message: "<h5 class='MyFont-Roboto-header red'>@Localizer["ErrorInSelectInvoice"]</h5>",
                className: 'bootbox-class MyFont-Roboto-header',
                size: 'small',

            });
            $('#btn_select_receive').removeAttr("disabled");
            return;
        }

        let unique_list = RemoveNullAndDuplicates(selected_list);

        $(".select_totalInvoice").find(":checkbox").each(function () {

            if ($(this).is(':checked') || unique_list.includes($(this).parent().attr("data-receiveids"))) {
                let description = $(this).parent().attr("data-desctiption");
                if (description == null || description == 'null')
                    description = '';

                var elem = {
                    ClinicSectionId: null,
                    CreatedUserId: null,
                    Description: description,
                    Guid: $(this).parent().attr("data-id"),
                    Id: 0,
                    Index: 0,
                    InvoiceDate: "",
                    InvoiceDateTxt: $(this).parent().attr("data-date"),
                    InvoiceNum: $(this).parent().attr("data-invoice"),
                    MainInvoiceNum: $(this).parent().attr("data-mainInvoice"),
                    ModifiedUserId: null,
                    SaleInvoiceDetails: null,
                    CustomerId: null,
                    CustomerName: null,
                    TotalPrice: $(this).parent().attr("data-price"),
                    ReceiveIds: $(this).parent().attr("data-receiveids")
                };

                receiveInvoice_dataSource.push(elem);

                totalInvoice_dataSource = RemoveFromListByGuid(totalInvoice_dataSource, $(this).parent().attr("data-id"));
            }
        });


        let totalReturn_dataSource = $("#totalReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let receiveReturn_dataSource = $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();

        $(".select_return_totalInvoice").find(":checkbox").each(function () {

            if (unique_list.includes($(this).parent().attr("data-receiveids"))) {
                let description = $(this).parent().attr("data-desctiption");
                if (description == null || description == 'null')
                    description = '';

                var elem = {
                    ClinicSectionId: null,
                    CreatedUserId: null,
                    Description: description,
                    Guid: $(this).parent().attr("data-id"),
                    Id: 0,
                    Index: 0,
                    InvoiceDate: "",
                    InvoiceDateTxt: $(this).parent().attr("data-date"),
                    InvoiceNum: $(this).parent().attr("data-invoice"),
                    MainInvoiceNum: $(this).parent().attr("data-mainInvoice"),
                    ModifiedUserId: null,
                    SaleInvoiceDetails: null,
                    CustomerId: null,
                    CustomerName: null,
                    TotalPrice: $(this).parent().attr("data-price"),
                    ReceiveIds: $(this).parent().attr("data-receiveids")
                };

                receiveReturn_dataSource.push(elem);

                totalReturn_dataSource = RemoveFromListByGuid(totalReturn_dataSource, $(this).parent().attr("data-id"));
            }
        });

        $("#totalReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(totalReturn_dataSource);
        $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(ResetIndexList(receiveReturn_dataSource));

        $("#totalInvoiceKendoGrid").data("kendoGrid").setDataSource(totalInvoice_dataSource);
        $("#receiveInvoiceKendoGrid").data("kendoGrid").setDataSource(ResetIndexList(receiveInvoice_dataSource));

        let sum = CalculateTotal(receiveInvoice_dataSource);
        let ret_dataSource = $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let ret = CalculateTotal(ret_dataSource);

        sum = sum - ret;
        $("#TotalAmount").val(sum);

        GetPartialReceiveHistory(unique_list);

        $('#btn_select_receive').removeAttr("disabled");
    });

    $('#btn_notSelect_receive').on("click", function () {
        $(this).attr("disabled", true);

        let receiveInvoice_dataSource = $("#receiveInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let totalInvoice_dataSource = $("#totalInvoiceKendoGrid").data("kendoGrid").dataSource.data();

        let selected_list = [];
        let not_selected_list = [];
        $(".select_receiveInvoice").find(":checkbox:checked").each(function () {

            selected_list.push($(this).parent().attr("data-receiveids"));
        });

        let unique_list = RemoveNullAndDuplicates(selected_list);

        $(".select_receiveInvoice").find(":checkbox").each(function () {

            if ($(this).is(':checked') || unique_list.includes($(this).parent().attr("data-receiveids"))) {

                let description = $(this).parent().attr("data-desctiption");
                if (description == null || description == 'null')
                    description = '';

                var elem = {
                    ClinicSectionId: null,
                    CreatedUserId: null,
                    Description: description,
                    Guid: $(this).parent().attr("data-id"),
                    Id: 0,
                    Index: 0,
                    InvoiceDate: "",
                    InvoiceDateTxt: $(this).parent().attr("data-date"),
                    InvoiceNum: $(this).parent().attr("data-invoice"),
                    MainInvoiceNum: $(this).parent().attr("data-mainInvoice"),
                    ModifiedUserId: null,
                    SaleInvoiceDetails: null,
                    CustomerId: null,
                    CustomerName: null,
                    TotalPrice: $(this).parent().attr("data-price"),
                    ReceiveIds: $(this).parent().attr("data-receiveids")
                };

                totalInvoice_dataSource.push(elem);

                receiveInvoice_dataSource = RemoveFromListByGuid(receiveInvoice_dataSource, $(this).parent().attr("data-id"));
            } else {

                not_selected_list.push($(this).parent().attr("data-receiveids"));
            }
        });


        let receiveReturn_dataSource = $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let totalReturn_dataSource = $("#totalReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();

        $(".select_return_receiveInvoice").find(":checkbox").each(function () {

            if (unique_list.includes($(this).parent().attr("data-receiveids"))) {
                let description = $(this).parent().attr("data-desctiption");
                if (description == null || description == 'null')
                    description = '';

                var elem = {
                    ClinicSectionId: null,
                    CreatedUserId: null,
                    Description: description,
                    Guid: $(this).parent().attr("data-id"),
                    Id: 0,
                    Index: 0,
                    InvoiceDate: "",
                    InvoiceDateTxt: $(this).parent().attr("data-date"),
                    InvoiceNum: $(this).parent().attr("data-invoice"),
                    MainInvoiceNum: $(this).parent().attr("data-mainInvoice"),
                    ModifiedUserId: null,
                    SaleInvoiceDetails: null,
                    CustomerId: null,
                    CustomerName: null,
                    TotalPrice: $(this).parent().attr("data-price"),
                    ReceiveIds: $(this).parent().attr("data-receiveids")
                };

                totalReturn_dataSource.push(elem);

                receiveReturn_dataSource = RemoveFromListByGuid(receiveReturn_dataSource, $(this).parent().attr("data-id"));
            }
        });

        $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(ResetIndexList(receiveReturn_dataSource));
        $("#totalReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(totalReturn_dataSource);


        $("#receiveInvoiceKendoGrid").data("kendoGrid").setDataSource(receiveInvoice_dataSource);
        $("#totalInvoiceKendoGrid").data("kendoGrid").setDataSource(ResetIndexList(totalInvoice_dataSource));


        let sum = CalculateTotal(receiveInvoice_dataSource);
        let ret_dataSource = $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let ret = CalculateTotal(ret_dataSource);

        sum = sum - ret;
        $("#TotalAmount").val(sum);

        GetPartialReceiveHistory(not_selected_list);

        $('#btn_notSelect_receive').removeAttr("disabled");
    });

    $('#btn_select_return').on("click", function () {
        $(this).attr("disabled", true);

        @*let totalReturn_dataSource = $("#totalReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let receiveReturn_dataSource = $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();

        let selected_list = [];
        $(".select_return_totalInvoice").find(":checkbox:checked").each(function () {

            selected_list.push($(this).parent().attr("data-receiveids"));
        });

        $(".select_return_receiveInvoice").find(":checkbox").each(function () {

            selected_list.push($(this).parent().attr("data-receiveids"));
        });

        $(".select_receiveInvoice").find(":checkbox").each(function () {

            selected_list.push($(this).parent().attr("data-receiveids"));
        });

        if (CheckConflict(selected_list)) {
            bootbox.alert({
                message: "<h5 class='MyFont-Roboto-header red'>@Localizer["ErrorInSelectInvoice"]</h5>",
                className: 'bootbox-class MyFont-Roboto-header',
                size: 'small',

            });
            $('#btn_select_return').removeAttr("disabled");
            return;
        }

        let unique_list = RemoveNullAndDuplicates(selected_list);

        $(".select_return_totalInvoice").find(":checkbox").each(function () {

            if ($(this).is(':checked') || unique_list.includes($(this).parent().attr("data-receiveids"))) {
                let description = $(this).parent().attr("data-desctiption");
                if (description == null || description == 'null')
                    description = '';

                var elem = {
                    ClinicSectionId: null,
                    CreatedUserId: null,
                    Description: description,
                    Guid: $(this).parent().attr("data-id"),
                    Id: 0,
                    Index: 0,
                    InvoiceDate: "",
                    InvoiceDateTxt: $(this).parent().attr("data-date"),
                    InvoiceNum: $(this).parent().attr("data-invoice"),
                    MainInvoiceNum: $(this).parent().attr("data-mainInvoice"),
                    ModifiedUserId: null,
                    SaleInvoiceDetails: null,
                    CustomerId: null,
                    CustomerName: null,
                    TotalPrice: $(this).parent().attr("data-price"),
                    ReceiveIds: $(this).parent().attr("data-receiveids")
                };

                receiveInvoice_dataSource.push(elem);

                totalReturn_dataSource = RemoveFromListByGuid(totalReturn_dataSource, $(this).parent().attr("data-id"));
            }
        });


        let  = $("#totalReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let  = $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();

        $(".select_return_totalInvoice").find(":checkbox").each(function () {

            if (unique_list.includes($(this).parent().attr("data-receiveids"))) {
                let description = $(this).parent().attr("data-desctiption");
                if (description == null || description == 'null')
                    description = '';

                var elem = {
                    ClinicSectionId: null,
                    CreatedUserId: null,
                    Description: description,
                    Guid: $(this).parent().attr("data-id"),
                    Id: 0,
                    Index: 0,
                    InvoiceDate: "",
                    InvoiceDateTxt: $(this).parent().attr("data-date"),
                    InvoiceNum: $(this).parent().attr("data-invoice"),
                    MainInvoiceNum: $(this).parent().attr("data-mainInvoice"),
                    ModifiedUserId: null,
                    SaleInvoiceDetails: null,
                    CustomerId: null,
                    CustomerName: null,
                    TotalPrice: $(this).parent().attr("data-price"),
                    ReceiveIds: $(this).parent().attr("data-receiveids")
                };

                receiveReturn_dataSource.push(elem);

                totalReturn_dataSource = RemoveFromListByGuid(totalReturn_dataSource, $(this).parent().attr("data-id"));
            }
        });

        $("#totalReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(totalReturn_dataSource);
        $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(ResetIndexList(receiveReturn_dataSource));

        $("#totalInvoiceKendoGrid").data("kendoGrid").setDataSource(totalInvoice_dataSource);
        $("#receiveInvoiceKendoGrid").data("kendoGrid").setDataSource(ResetIndexList(receiveInvoice_dataSource));

        let sum = CalculateTotal(receiveInvoice_dataSource);
        let ret_dataSource = $("#receiveReturnInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        let ret = CalculateTotal(ret_dataSource);

        sum = sum - ret;
        $("#TotalAmount").val(sum);

        GetPartialReceiveHistory(unique_list);

        $('#btn_select_receive').removeAttr("disabled");*@














        //$(".select_return_totalInvoice").find(":checkbox").each(function () {

        //    if ($(this).is(':checked') || unique_list.includes($(this).parent().attr("data-receiveids"))) {
        //        let description = $(this).parent().attr("data-desctiption");
        //        if (description == null || description == 'null')
        //            description = '';

        //        var elem = {
        //            ClinicSectionId: null,
        //            CreatedUserId: null,
        //            Description: description,
        //            Guid: $(this).parent().attr("data-id"),
        //            Id: 0,
        //            Index: 0,
        //            InvoiceDate: "",
        //            InvoiceDateTxt: $(this).parent().attr("data-date"),
        //            InvoiceNum: $(this).parent().attr("data-invoice"),
        //            MainInvoiceNum: $(this).parent().attr("data-mainInvoice"),
        //            ModifiedUserId: null,
        //            SaleInvoiceDetails: null,
        //            CustomerId: null,
        //            CustomerName: null,
        //            TotalPrice: $(this).parent().attr("data-price"),
        //            ReceiveIds: $(this).parent().attr("data-receiveids")
        //        };

        //        receiveInvoice_dataSource.push(elem);

        //        totalInvoice_dataSource = RemoveFromListByGuid(totalInvoice_dataSource, $(this).parent().attr("data-id"));
        //    }
        //});



        //$("#totalReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(totalInvoice_dataSource);
        //$("#receiveReturnInvoiceKendoGrid").data("kendoGrid").setDataSource(ResetIndexList(receiveInvoice_dataSource));

        //let ret = CalculateTotal(receiveInvoice_dataSource);
        //let sum_dataSource = $("#receiveInvoiceKendoGrid").data("kendoGrid").dataSource.data();
        //let sum = CalculateTotal(sum_dataSource);

        //sum = sum - ret;
        //$("#TotalAmount").val(sum);

        //GetPartialReceiveHistory(unique_list);

        $('#btn_select_return').removeAttr("disabled");
    });

    $('#btn_notSelect_return').on("click", function () {
        $(this).attr("disabled", true);


        $('#btn_notSelect_return').removeAttr("disabled");
    });

    function CalculateTotal(main_list) {
        let baseCurrencyId = $("#BaseCurrencyId").data("kendoDropDownList");
        let currency = baseCurrencyId.text();
        let sum = 0;

         main_list.filter(function (item) {

            if (item.TotalPrice != null) {

                let res = item.TotalPrice.toString().split("_");
                for (let i = 0; i < res.length; i++) {
                    if (res[i].includes(currency)) {

                        sum += Number(GetFirstNumber(res[i]));
                    }
                }
            }

            return false;
        });

        return sum;
    }

    function CheckConflict(check_list) {

        var count = 0;
        let list_withOutNull = check_list.filter(function (item) {

            if (item == null || item == '' || item == 'null') {
                count++;
                return false;
            }

            return true;
        });

        if (list_withOutNull.length == 0)
            return false;

        let equ = list_withOutNull.every((val, i, arr) => val === arr[0]);
        if (!equ)
            return true;

        let check_add_count = 1;
        let guid = $("#Guid").val();
        if (guid == null || guid == '' || guid == 'null' || guid == '00000000-0000-0000-0000-000000000000')
            check_add_count = 0;

        let receive_ids = list_withOutNull[0].split(" ");
        if (receive_ids.length > check_add_count && count > 0)
            return true;

        return false;
    }


    function GetPartialReceiveHistory(unique_list) {
        $.ajax({
            type: "Post",
            url: "/Receive/GetPartialReceiveHistory",
            data: { receiveIds: unique_list },
            success: function (response) {

                let sum = 0;
                response.filter(function (item) {

                    if (item.Amount) {
                        sum += item.Amount;
                    }

                    return true;
                });
                $("#ReceiveedAmount").val(sum);

                let total = $("#TotalAmount").val();
                let rem = total - sum;
                $("#RemAmount").val(rem);

                $("#partialReceiveHistoryKendoGrid").data("kendoGrid").setDataSource(response);
            }
        });
    }

</script>
