@using Microsoft.AspNetCore.Http
@using WPH.Models.BaseInfo
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string font = "", pull = "", dir = "";
    if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en")
    {
        font = " MyFont-Roboto-grid ";
        pull = " pull-right ";
        dir = " ";
        <h3 id="newServiceText" class="hidden">@Localizer["New"] @Localizer["Service"]</h3>
    }
    else
    {
        font = " MyFont-Sarchia-grid ";
        pull = " pull-left ";
        dir = " direction:rtl; ";
        <h3 id="newServiceText" class="hidden">@Localizer["Service"] @Localizer["New"]</h3>
    }
}

@Html.AntiForgeryToken()


<div class="col-sm-12 shadow-border" style="margin:0">

    <h4 class="MyFont-Roboto" style="border-bottom: dotted 1px #808080"> @Localizer["Services"]</h4>

    <div class="col-sm-12 " style="display:flex;align-items: flex-end;">

        <div class="col-sm-3">
            <label class="block clearfix">
                <label for="form-field-8">@Localizer["Date"]</label>
                <span class="block input-icon input-icon-right">
                    <input id="ServiceDate" class="boldText" title="datepicker" style="width: 100%; margin: 0" />
                </span>
            </label>
        </div>

        <div class="col-sm-5">
            <label class="block clearfix">

                <label for="form-field-8">@Localizer["Other"]</label>
                <span class="block input-icon input-icon-right">

                    @{
                        string width = "100%";
                    }

                    @if ((bool)ViewBag.AccessNewService)
                    {
                        width = "80%";
                        <a href="\\#" class="  @pull btn btn-danger" data-value="Other" onclick="NewService(this)" style=" padding:0 0.2rem;"><span class="fa fa-plus" style="margin:0.1rem"></span></a>

                    }

                    <input id="ServiceName" class="boldText" style="width: @width; margin: 0" />
                </span>
            </label>
        </div>

        <div class="col-sm-3">
            <label class="block clearfix">
                <label for="form-field-8">@Localizer["Num"]</label>
                <span class="block input-icon input-icon-right">
                    <input id="ServiceValue" class="boldText" style="width: 100%; margin: 0" />
                </span>
            </label>
        </div>

        <div class="col-sm-1">

            @(Html.Kendo().Button()
                        .Name("btn-add-service")
                        .HtmlAttributes(new { style = "font-size:1.5rem;padding:0.7rem;margin-bottom:5px;", type = "button", @class = "k-primary", onclick = "addService()" })
                        .Content(Localizer["Add"]))

        </div>

    </div>

    <div class="col-sm-12 ">

        @await Html.PartialAsync("~/Views/Shared/PartialViews/AppWebForms/ReceptionService/dgReceptionSpeceficServiceGrid.cshtml", new SectionViewModel { Id = ViewBag.ReceptionId, Name = "Other" })

    </div>

</div>


<div id="CreateNewServiceModal" class="modal fade @font" data-backdrop="static" data-keyboard="false" style="@dir">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="closeCreateNewServiceModal()" aria-hidden="true">&times;</button>
                <h3 id="CreateNewServiceModal-header" class="smaller lighter blue no-margin @font">
                </h3>
            </div>

            <div id="CreateNewServiceModal-body" class="modal-body">
            </div>

            <div id="ERROR_Data" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_DataNotValid"]
            </div>

            <div id="ERROR_SomeThingWentWrong" class="red label-white middle hidden" style="height:40px;display:block">
                <i class="ace-icon fa fa-stop bigger-120"></i>
                @Localizer["ERROR_InsertWrong"]
            </div>

            <div class="modal-footer">
                @(Html.Kendo().Button()
                .Name("btn-CreateNewServiceModal-accept")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                .Name("btn-CreateNewServiceModal-close")
                .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick = "closeCreateNewServiceModal()" })
                .Content(Localizer["Exit"]))
            </div>
        </div>
    </div>
</div>

<script>

    $("#ServiceDate").kendoDateTimePicker({
        value: new Date(),
        max: new Date(),
        format: "dd/MM/yyyy HH:mm",
        dateInput: true
    });

    $("#ServiceName").kendoDropDownList({
        dataTextField: "Name",
        dataValueField: "Guid",
        dataSource: {
            serverFiltering: false,
            transport: {
                read: {
                    url: "/Service/GetAllSpeceficServices?ServiceName=Other",
                }
            }
        }
    });

    $("#ServiceValue").kendoNumericTextBox({
    });


    function addService() {

        var TempDate = $("#ServiceDate").data("kendoDateTimePicker");
        var Date = TempDate.value();
        let cMonth = Date.getMonth() + 1;
        let cDay = Date.getDate();

        if (cMonth < 10)
            cMonth = "0" + cMonth;

        if (cDay < 10)
            cDay = "0" + cDay;

        let CostDateDay = cDay;
        let CostDateMonth = cMonth;
        let CostDateYear = Date.getFullYear();
        let CostDateHour = Date.getHours();
        let CostDateMin = Date.getMinutes();

        let SerNum = $("#ServiceValue").data("kendoNumericTextBox").value();
        if (SerNum === null || SerNum < 1) {
            SerNum = 1;
        }
        let receptionId = $("#Reception-Id").text();
        let ServiceId = $("#ServiceName").val();
        let Service = $("#ServiceName").data("kendoDropDownList");
        var dataItem = Service.dataItem();

        $.ajax({
            type: "Post",
            data:
            {
                ReceptionId: receptionId,
                ServiceId: ServiceId,
                Number: SerNum,
                Price: dataItem.Price,
                ServiceDateDay: CostDateDay,
                ServiceDateMonth: CostDateMonth,
                ServiceDateYear: CostDateYear,
                ServiceDateHour: CostDateHour,
                ServiceDateMin: CostDateMin
            },
            url: "/ReceptionService/AddReceptionService",
            success: function (response) {

                if (response === 0) {
                    bootbox.alert({
                        message: '@Localizer["ERROR_InsertWrong"]',
                        className: 'bootbox-class'
                    });

                } else if (response === "NotEnoughProductCount") {
                    bootbox.alert({
                        message: '@Localizer["NotEnoughProductCount"]',
                        className: 'bootbox-class'
                    });

                } else {

                    $("#Other .k-i-reload").click();
                }


            }
        });

    }


    function NewService(element) {

        txt = $(element).attr('data-value');

        if (txt != 'Transfusion' && txt != 'Other' && txt != 'Stitch')
            return;

        $("#CreateNewServiceModal #ERROR_Data").addClass("hidden");
        $("#CreateNewServiceModal #ERROR_SomeThingWentWrong").addClass("hidden");

        var link = `/Service/SingleNewModal?typeName=${txt}`;
        $(".loader").removeClass("hidden");

        let header = $("#newServiceText").text();
        $('#CreateNewServiceModal-header').text(header);

        $('#CreateNewServiceModal').modal('toggle');
        $('#CreateNewServiceModal-body').load(link + '', function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        });

    }

    $('#btn-CreateNewServiceModal-accept').on("click", function () {
        $(this).attr("disabled", true);

        $("#CreateNewServiceModal #ERROR_Data").addClass("hidden");
        $("#CreateNewServiceModal #ERROR_SomeThingWentWrong").addClass("hidden");

        $('#CreateNewServiceModal .emptybox').addClass('hidden');
        var isEmmpty = true;
        $('#CreateNewServiceModal .emptybox').each(function () {
            if ($(this).attr('data-isEssential') === 'true') {
                var empty = $(this).attr('id');
                if ($('[data-checkEmpty="' + empty + '"]').val() === "") {
                    $(this).removeClass('hidden');
                    $('#btn-CreateNewServiceModal-accept').removeAttr("disabled");
                    isEmmpty = false;
                    return;
                }
            }
        });

        if (isEmmpty === false) {
            return;
        }

        var link = "/Service/AddOrUpdate";
        var data = $("#addNewServiceForm").serialize();

        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: data,
            success: function (response) {
                $('#btn-CreateNewServiceModal-accept').removeAttr("disabled");

                if (response !== 0) {
                    if (response === "ValueIsRepeated") {

                        $('#CreateNewServiceModal #Name-Exist').removeClass('hidden');
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");
                    } else if (response === "DataNotValid") {

                        $("#CreateNewServiceModal #ERROR_Data").removeClass("hidden");
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else {

                        $('#CreateNewServiceModal').modal('hide');
                        $(".modal-backdrop:last").remove();
                        $('#CreateNewServiceModal-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                        if (txt == 'Transfusion') {
                            $("#TransfusionName").data("kendoDropDownList").dataSource.read();
                            let pr = $("#TransfusionName").data("kendoDropDownList");
                            pr.bind("dataBound", function () {
                                pr.value(response);
                            });
                            txt = '';
                        } else if (txt == 'Other') {
                            $("#ServiceName").data("kendoDropDownList").dataSource.read();
                            let pr = $("#ServiceName").data("kendoDropDownList");
                            pr.bind("dataBound", function () {
                                pr.value(response);
                            });
                            txt = '';
                        } else if (txt == 'Stitch') {
                            $("#StitchName").data("kendoDropDownList").dataSource.read();
                            let pr = $("#StitchName").data("kendoDropDownList");
                            pr.bind("dataBound", function () {
                                pr.value(response);
                            });
                            txt = '';
                        }
                    }
                } else {

                    $("#CreateNewServiceModal #ERROR_SomeThingWentWrong").removeClass("hidden");
                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                }
            }
        });
    });

    function closeCreateNewServiceModal() {

        $('#CreateNewServiceModal').modal('hide');
        $('#CreateNewServiceModal-body').empty();
        $(".modal-backdrop:last").remove();
    }

</script>