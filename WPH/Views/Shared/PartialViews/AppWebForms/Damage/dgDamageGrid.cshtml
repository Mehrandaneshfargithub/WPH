
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{
    string edit_title = Localizer["EditDamage"];
    string remove_title = Localizer["RemoveDamage"];
    string discount_title = Localizer["ReturnDamage"];
    string total_title = Localizer["DamageTotalPrice"];
}


<div>
    @(Html.Kendo().Grid<WPH.Models.Damage.DamageViewModel>()
    .Name("damageKendoGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {
            if((bool)ViewBag.AccessDeleteDamage)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    $@"<a class='tooltip-error grid-btn' onClick='GridDeleteFunctionWithPass(this);' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessEditDamage)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    $@"<a class='tooltip-success grid-btn edit' onClick='EditDamage(this);' data-id='#=Guid#' data-rel='tooltip' title='{edit_title}' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            //columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
            //.ClientTemplate(
            //    $@"<a class='tooltip-success grid-btn ' onClick='ShowDiscountsList(this)' data-id='#=Guid#' data-rel='tooltip' title='{discount_title}' data-original-title='Discounts'>
            //        <span class='purple'>
            //            <i class='ace-icon fa fa-percent bigger-120'></i>
            //        </span>
            //    </a>
            //");

            //columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
            //.ClientTemplate(
            //    $@"<a class='tooltip-success grid-btn ' onClick='ShowTotalPrice(this)' data-id='#=Guid#' data-rel='tooltip' title='{total_title}' data-original-title='Total'>
            //        <span class='green'>
            //            <i class='ace-icon  fa-regular fa-envelope-open-text  bigger-120'></i>
            //        </span>
            //    </a>
            //");

            columns.Bound(x => x.Description).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Description"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.TotalPrice).Title(Localizer["TotalAfterDiscount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Total_Databound(TotalPrice)#");
            columns.Bound(x => x.TotalDiscount).Title(Localizer["TotalDiscount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Total_Databound(TotalDiscount)#");
            columns.Bound(x => x.TotalPrice).Title(Localizer["Total"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= AddDiscount(TotalDiscount,TotalPrice)#");
            columns.Bound(x => x.ReasonTxt).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Reason"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.CostTypeTxt).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["CostType"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.InvoiceNum).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["InvoiceNum"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.InvoiceDate).Format("{0: dd/MM/yyyy}").Filterable(false).Title(Localizer["InvoiceDate"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(20).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Guid).Hidden();

        }
        else
        {
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(20).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.InvoiceDate).Format("{0: dd/MM/yyyy}").Filterable(false).Title(Localizer["InvoiceDate"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.InvoiceNum).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["InvoiceNum"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.CostTypeTxt).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["CostType"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.ReasonTxt).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Reason"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.TotalPrice).Title(Localizer["Total"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= AddDiscount(TotalDiscount,TotalPrice)#");
            columns.Bound(x => x.TotalDiscount).Title(Localizer["TotalDiscount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Total_Databound(TotalDiscount)#");
            columns.Bound(x => x.TotalPrice).Title(Localizer["TotalAfterDiscount"]).Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).ClientTemplate("#= Total_Databound(TotalPrice)#");
            columns.Bound(x => x.Description).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Description"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            //columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
            //.ClientTemplate(
            //    $@"<a class='tooltip-success grid-btn ' onClick='ShowTotalPrice(this)' data-id='#=Guid#' data-rel='tooltip' title='{total_title}' data-original-title='Total'>
            //        <span class='green'>
            //            <i class='ace-icon  fa-regular fa-envelope-open-text  bigger-120'></i>
            //        </span>
            //    </a>
            //");

            //columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
            //.ClientTemplate(
            //    $@"<a class='tooltip-success grid-btn ' onClick='ShowDiscountsList(this)' data-id='#=Guid#' data-rel='tooltip' title='{discount_title}' data-original-title='Discounts'>
            //        <span class='purple'>
            //            <i class='ace-icon fa fa-percent bigger-120'></i>
            //        </span>
            //    </a>
            //");

            if ((bool)ViewBag.AccessEditDamage)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    $@"<a class='tooltip-success grid-btn edit' onClick='EditDamage(this)' data-id='#=Guid#' data-rel='tooltip' title='{edit_title}' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessDeleteDamage)
            {
                columns.Bound("").Title(string.Empty).Width(10).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    $@"<a class='tooltip-error grid-btn' onClick='GridDeleteFunctionWithPass(this)' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }
        }
    })

        .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
            .PageSize(10)
            .Read(read => read.Action("GetAll", "Damage").Data("GetPeriodForDamage"))
        )
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
        .Pageable(pageable => pageable
        .Input(true)
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5)
        .Numeric(true)) // Enable paging
        .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;overflow:auto" }) // Enable sorting
    )
</div>

<script>

    function AddDiscount(discount, total) {
        if (discount == '' || discount == null || discount == 'null')
            return Total_Databound(total);

        let total_dis = discount.split("_");
        let amount = total.split("_");
        let result = "";

        for (var i = 0; i < amount.length; i++) {
            var money = amount[i].split(" ");
            var add_dis;

            for (var j = 0; j < total_dis.length; j++) {
                if (total_dis[j].includes(money[0])) {
                    add_dis = total_dis[j];
                    break;
                }
            }

            if (add_dis == '' || add_dis == null || add_dis == 'null') {

                result += `${money[0]} ${money[1]}_`;
            }
            else {
                let sum = Number(GetFirstNumber(money[1]));
                let dis = Number(GetFirstNumber(add_dis));

                sum += dis;

                result += `${money[0]} ${parseFloat(sum).toLocaleString('en')}_`;
            }
        }

        return Total_Databound(result);
    }

    function Total_Databound(total) {
        let text = "";
        if (total != null) {

            let res = total.toString().split("_");
            for (let i = 0; i < res.length; i++) {
                text += "<div style='white-space: nowrap;'>" + res[i] + " </div>";
            }
        }
        return text;
    }


    $(document).ready(function () {

        $("#damageKendoGrid").on("dblclick", "tr.k-state-selected", function (element) {

            $("#damageKendoGrid").find("tr.k-state-selected td a.edit").click();

        });

    })

</script>