@model WPH.Models.CustomDataModels.Doctor.DoctorViewModel


@Html.AntiForgeryToken()
@Html.HiddenFor(p => p.Guid)
<div style="display: flex; justify-content: center;">
    <img id="ReportLogo" style="width:250px;height:250px;object-fit: contain;cursor: pointer;" src="" />
</div>

<input type="file" value="" id="logoFile" style="display: none;">


<script>

    $(document).ready(function () {

        ReadImage('@Model?.LogoAddress?.Replace("\\", "/")', 'ReportLogo');

        function ReadImage(path, img_id) {
            if (path == null || path == '')
                return;

            var res = path.split(".");
            var name = `server.${res[res.length - 1]}`;
            var xhr = new XMLHttpRequest();
            xhr.open("GET", path, true);
            xhr.responseType = "blob";
            xhr.onload = function (e) {

                var reader = new FileReader();
                reader.onload = function (event) {

                    var res = event.target.result;
                    $(`#${img_id}`).attr('src', res);
                    $(`#${img_id}`).attr('name', name);
                }
                var file = this.response;
                reader.readAsDataURL(file);

            };
            xhr.send();
        }
    });


    $("#ReportLogo").click(function (e) {
        $('#logoFile').trigger('click');
    });

    $("#logoFile").change(function () {
        readURLAttachments(this, 'ReportLogo');
    });

    function dataURLtoFile(dataurl, filename) {
        var arr = dataurl.split(',');
        if (dataurl == null || dataurl == '' || arr.length < 2)
            return null;
        var mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);
        while (n--) {
            u8arr[n] = bstr.charCodeAt(n);
        };
        return new File([u8arr], filename, { type: mime });
    }

    function readURLAttachments(input, img_prev) {
        var img_tag = document.getElementById(img_prev);
        if (input.files && input.files.length > 0 && input.files[0].type.match('image')) {

            let img = input.files[0];
            var reader = new FileReader();
            reader.onload = function (e) {
                img_tag.src = e.target.result;
                img_tag.setAttribute("name", img.name);
            }
            reader.readAsDataURL(img);

        };
    };

</script>
