@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

<div>
    @(Html.Kendo().Grid<WPH.Models.AnalysisResultMaster.AnalysisResultMasterGridViewModel>()
    .Name("kendoAnalysisResultMasterGrid")
    .HtmlAttributes(new { Class = "k-grid-header" })
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {

            if ((bool)ViewBag.UseOnlineResult)
            {
                columns.Bound("").Title("").Width(30)
                .ClientTemplate(
                    @"<a class='tooltip-success grid-btn' onClick='SendReportOnline(this)'  data-sectionTypeName='#=ClinicSectionTypeName#'  data-id='#=Guid#' data-rel='tooltip' title='UploadResult' data-original-title='UploadResult'>
                        <span class='blue'>
                            <i class='ace-icon fa fa-upload bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessPrintAnalysisResult)
            {
                columns.Bound("").Title("").Width(30)
                .ClientTemplate(
                    @"<a class='tooltip-success grid-btn' onClick='PrintAnalysisReport(this)'  data-sectionTypeName='#=ClinicSectionTypeName#'  data-id='#=Guid#' data-rel='tooltip' title='Print' data-original-title='Print'>
                        <span class='blue'>
                            <i class='ace-icon fa fa-print bigger-120'></i>
                        </span>
                    </a>
                ");
            }


            if ((bool)ViewBag.AccessEditAnalysisResult)
            {
                columns.Bound("").Title("").Width(30)
                .ClientTemplate(
                    @"<a class='tooltip-success grid-btn edit' onClick='GoToAnalysisResult(this);' data-id='#=Guid#' data-rel='tooltip' title='Edit' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if (ViewBag.useDollar == "true")
            {
                columns.Bound("").Title("Get Money").Width(30)
                .ClientTemplate(
                    @"<a class='tooltip-success grid-btn #if(PatientReceptionRemained === 0){# hidden #}#' #if(PatientReceptionRemained !== 0){# onClick='AddNewReceived(this);' #}#'  data-id='#=PatientReceptionId#' data-amount='#=PatientReceptionRemained#' data-rel='tooltip' title='Get Money' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-dollar bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.UseOnlineResult)
            {
                columns.Bound(x => x.UploadDate).Filterable(false).Format("{0: dd/MM/yyyy}").Title(Localizer["Upload Date"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                columns.Bound(x => x.ServerNumber).Filterable(false).Title(Localizer["Server Number"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            }

            columns.Bound(x => x.PrintedNum).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Num"]+" "+ Localizer["Print"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            if (ViewBag.useDollar == "true")
            {
                columns.Bound(x => x.PatientReceptionRemained).Filterable(false).Title(Localizer["Remain"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            }
            //columns.Bound(x => x.PatientReception.Barcode).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Barcode"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.PhoneNumber).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Mobile"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Gender).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Gender"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Age).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Age"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.PatientName).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["PatientName"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.ReceptionNum).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["InvoiceNum"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.InvoiceDate).Filterable(false).Format("{0: dd/MM/yyyy}").Title(Localizer["InvoiceDate"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
            columns.Bound(x => x.Index).Filterable(false).Width(5).Title("#").HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" }).Width(30);
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.ReceptionId).Hidden();
            columns.Bound(x => x.ClinicSectionTypeName).Hidden();
        }
        else
        {
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.ClinicSectionTypeName).Hidden();
            columns.Bound(x => x.ReceptionId).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" }).Width(30);
            columns.Bound(x => x.InvoiceDate).Filterable(false).Format("{0: dd/MM/yyyy}").Title(Localizer["InvoiceDate"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.ReceptionNum).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["InvoiceNum"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.PatientName).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["PatientName"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Age).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Age"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Gender).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Gender"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.PhoneNumber).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Mobile"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            //columns.Bound(x => x.PatientReception.Barcode).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Barcode"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            if (ViewBag.useDollar == "true")
            {
                columns.Bound(x => x.PatientReceptionRemained).Filterable(false).Title(Localizer["Remain"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });

            }

            columns.Bound(x => x.PrintedNum).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains))).Title(Localizer["Num"] + " " + Localizer["Print"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            if ((bool)ViewBag.UseOnlineResult)
            {
                columns.Bound(x => x.UploadDate).Filterable(false).Format("{0: dd/MM/yyyy}").Title(Localizer["Upload Date"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });
                columns.Bound(x => x.ServerNumber).Filterable(false).Title(Localizer["Server Number"]).HtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Roboto-grid" }).HeaderHtmlAttributes(new { @style = "text-align:center;", @class = "MyFont-Sarchia-grid" });

            }
            if (ViewBag.useDollar == "true")
            {
                columns.Bound("").Title("Get Money").Width(30)
                .ClientTemplate(
                    @"<a class='tooltip-success grid-btn #if(PatientReceptionRemained === 0){# hidden #}#' #if(PatientReceptionRemained !== 0){# onClick='AddNewReceived(this);' #}#'  data-id='#=PatientReceptionId#' data-amount='#=PatientReceptionRemained#' data-rel='tooltip' title='Get Money' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-dollar bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessEditAnalysisResult)
            {
                columns.Bound("").Title("").Width(30).HtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                    @"<a class='tooltip-success grid-btn edit' onClick='GoToAnalysisResult(this)' data-id='#=Guid#' data-rel='tooltip' title='Edit' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.AccessPrintAnalysisResult)
            {
                columns.Bound("").Title("").Width(30)
                .ClientTemplate(
                    @"<a class='tooltip-success grid-btn' onClick='PrintAnalysisReport(this)'   data-sectionTypeName='#=ClinicSectionTypeName#'   data-id='#=Guid#' data-rel='tooltip' title='Print' data-original-title='Print'>
                        <span class='blue'>
                            <i class='ace-icon fa fa-print bigger-120'></i>
                        </span>
                    </a>
                ");
            }

            if ((bool)ViewBag.UseOnlineResult)
            {
                columns.Bound("").Title("").Width(30)
                .ClientTemplate(
                    @"<a class='tooltip-success grid-btn' onClick='SendReportOnline(this)'  data-sectionTypeName='#=ClinicSectionTypeName#'  data-id='#=Guid#' data-rel='tooltip' title='UploadResult' data-original-title='UploadResult'>
                        <span class='blue'>
                            <i class='ace-icon fa fa-upload bigger-120'></i>
                        </span>
                    </a>
                ");
            }
        }

    })

        .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
        //.Sort(sort => sort.Add("InvoiceDate").Descending())
        .PageSize(10)
        .Read(read => read.Action("GetAll", "AnalysisResultMaster").Data("GetPeriodForAnalysisResultMaster"))
        )
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
        .Pageable(pageable => pageable
        .Input(true)
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5)
        .Numeric(true)) // Enable paging

        .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;overflow:auto" }) // Enable sorting


    )
</div>




<div id="PatientReceptionReceivedModal" class="modal fade MyFont-Roboto-grid" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content col-xs-12">
            <div class="modal-header col-xs-12">
                <button type="button" class="close" onclick="closePatientReceptionReceivedModal()" aria-hidden="true">&times;</button>
                <h3 id="PatientReceptionReceivedModal-header" class="smaller lighter blue no-margin MyFont-Roboto-grid">Received</h3>
            </div>

            <div id="PatientReceptionReceivedModal-body" class="modal-body col-xs-12">

            </div>

            <div class="modal-footer col-xs-12">
                @(Html.Kendo().Button()
                    .Name("btn-PatientReceptionReceived-accept")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right", onclick = "addNewPatientReceptionReceived()" })
                    .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                    .Name("btn-PatientReceptionReceived-close")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick = "closePatientReceptionReceivedModal()" })
                    .Content(Localizer["Exit"]))

            </div>
        </div>
    </div>
</div>




<script>

    $(document).ready(function () {

        $("#kendoAnalysisResultMasterGrid").on("dblclick", "tr.k-state-selected", function (element) {

            $("#kendoAnalysisResultMasterGrid").find("tr.k-state-selected td a.edit").click();

        });

    })

    function GoToAnalysisResult(element) {
        $(".loader").removeClass("hidden");
        let id = $(element).attr("data-id");
        $(".page-content").load("/AnalysisResultMaster/EditModal?Id=" + id, function (responce) {

            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
        })
    }

    function PrintAnalysisReport(element) {

        let id = $(element).attr("data-id");
        let type = $(element).attr("data-sectionTypeName");
        let link = "";
        if (type === "Radiology") {
            link = "/AnalysisResultMaster/PrintAnalysisResultReportRadiology";
        }
        else {
            link = "/AnalysisResultMaster/PrintAnalysisResultReport";
        }

        $(".loader").removeClass("hidden");
        $.ajax({
            url: link,
            type: "Post",
            data: { AnalysisResultMasterId: id },
            success: function (response) {

                draw2(response);
                $(".loader").fadeIn("slow");
                $(".loader").addClass("hidden");

                $.ajax({
                    url: "/AnalysisResultMaster/IncreasePrintNumber",
                    type: "Post",
                    data: { AnalysisResultMasterId: id },
                    success: function (response) {

                        $(".k-pager-refresh")[0].click();
                    },

                });

            },
            error: function (response) {

            }
        });


    }

    function SendReportOnline(element) {

        let id = $(element).attr("data-id");
        let type = $(element).attr("data-sectionTypeName");
        let link = "";
        if (type === "Radiology") {
            link = "/AnalysisResultMaster/SendRadiologyResultOnline";
        }
        else {
            link = "/AnalysisResultMaster/SendResultOnline";
        }

        $(".loader").removeClass("hidden");
        $.ajax({
            url: link,
            type: "Post",
            data: { AnalysisResultMasterId: id },
            success: function (response) {

                if (response === 200 || response == '') {
                    $("#kendoAnalysisResultMasterGrid .k-pager-refresh")[0].click();

                    bootbox.alert({
                        message: "<h5 class='MyFont-Roboto-header'>File Uploaded Successfully</h5>",
                        className: 'bootbox-class MyFont-Roboto-header',
                        size: 'small',

                    });

                } else {
                    bootbox.alert({
                        message: `<h5 class='MyFont-Roboto-header'>${response}</h5>`,
                        className: 'bootbox-class MyFont-Roboto-header',
                        size: 'small',

                    });
                }

                //draw2(response);
                $(".loader").fadeIn("slow");
                $(".loader").addClass("hidden");

            },
            error: function (response) {

            }
        });


    }


    var receptionId;

    function AddNewReceived(element) {

        receptionId = $(element).attr('data-id');
        let amount = $(element).attr('data-amount');
        var link = "/PatientReceptionReceived/AddNewModal";
        $(".loader").removeClass("hidden");
        $('#PatientReceptionReceivedModal').modal('toggle');
        $('#PatientReceptionReceivedModal-body').load(link, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
            $("#PatientReceptionReceivedAmount").val(amount);
        });

    }


    function addNewPatientReceptionReceived() {

        let amount = parseFloat($("#PatientReceptionReceivedAmount").val());


        if (amount === 0 || amount === null || amount === undefined || Number.isNaN(amount)) {
            $("#PatientReceptionReceivedAmount-box").removeClass('hidden');
            return;
        }


        var data = { PatientReceptionId: receptionId, Amount: amount, AmountCurrencyId: $("#PatientReceptionReceivedAmountCorrencyId").val() };
        $(".loader").removeClass("hidden");

        $.ajax({
            type: "Post",
            url: "/PatientReceptionReceived/AddOrUpdate",
            data: data,
            success: function (response) {
                if (response !== 0) {

                    $(".loader").fadeIn("slow");
                    $(".loader").addClass("hidden");
                    $(".k-pager-refresh")[0].click();
                }
            }
        });


        $('#PatientReceptionReceivedModal').modal('toggle');
        $('#PatientReceptionReceivedModal-body').empty();

    }


    function closePatientReceptionReceivedModal() {
        $('#PatientReceptionReceivedModal').modal('toggle');
        $('#PatientReceptionReceivedModal-body').empty();
    }


</script>
