@model WPH.Models.CustomDataModels.Patient.PatientViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer




<div id="signup-box" class="signup-box no-border">
    <div class="widget-body">
        <div class="widget-main">
            <form id="addNewPatientForm">
                <fieldset>
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Guid)
                    @Html.HiddenFor(m => m.NameHolder)
                    @Html.HiddenFor(m => m.PhoneNumberHolder)
                    @Html.HiddenFor(m => m.ClinicSectionId)
                    @Html.HiddenFor(m => m.FileNum)
                    @Html.HiddenFor(m => m.FormNumber)
                    @Html.HiddenFor(m => m.MotherJobId, new { @id = "MotherJobId" })
                    @Html.HiddenFor(m => m.AddressId, new { @id = "AddressId" })
                    @Html.HiddenFor(m => m.FatherJobId, new { @id = "FatherJobId" })


                    <div class="col-sm-6">

                        @{
                            if (HttpContextAccessor.HttpContext.Session.GetString("SectionTypeName") == "Clinic")
                            {
                                if (Model.FileNumChoose ?? false)
                                {
                                    <label class="block clearfix">

                                        <label for="form-field-8">@Localizer["FormNumber"]: </label>
                                        <span class="block input-icon input-icon-right">

                                            @(Html.Kendo().TextBox()
                                                .Name("FormNumber")
                                                .Value(Model.FormNumber)
                                                .HtmlAttributes(new { @id = "FormNumber2", style = "width: 100%" })
                                            )

                                        </span>

                                    </label>
                                }
                                else
                                {
                                    <label class="block clearfix">
                                        <span class="red fa fa-asterisk smaller-60 redStar"></span><label for="form-field-8">@Localizer["FormNumber"]: </label>
                                        <span class="block input-icon input-icon-right">


                                            @(Html.Kendo().TextBox()
                                                .Name("FileNum")
                                                .Value(Model.FileNum)
                                                .HtmlAttributes(new { @id = "FileNum2", style = "width: 100%", @data_checkEmpty = "FileNumber-box" })
                                            )

                                        </span>
                                        <span id="FileNumber-box" class="emptybox hidden" data-isEssential="true" style="color:red;">
                                            @Localizer["ThisFieldIsEmptyPleaseFillIt"]
                                        </span>
                                    </label>
                                }
                            }

                        }


                        <label class="block clearfix">
                            <span class="red fa fa-asterisk smaller-60 redStar"></span><label for="form-field-8">@Localizer["PatientName"]: </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().TextBox()
                                    .Name("Name")
                                    .Value(Model.Name)
                                    .HtmlAttributes(new { @id = "PatientNamePatinetForm", style = "width: 100%", @data_checkEmpty = "Name-box" })
                                )

                            </span>
                            <span id="Name-box" class="emptybox hidden" data-isEssential="true" style="color:red;">
                                @Localizer["ThisFieldIsEmptyPleaseFillIt"]
                            </span>
                            <span id="Name-Exist" class="emptybox hidden" data-isEssential="true" style="color:red;">
                                @Localizer["TheNameIsDuplicatedPleaseTryAnotherName"]
                            </span>
                        </label>


                        <label class="block clearfix">
                            <label for="form-field-8">@Localizer["Mobile"]: </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().TextBox()
                                    .Name("PhoneNumber")
                                    .Value(Model.PhoneNumber)
                                    .HtmlAttributes(new { style = "width: 100%", @validate_mobile = "Mobile-wrong", onkeypress = "return OnlyNumberKey(event)" })
                                )
                            </span>
                            <span id="PhoneNumber-box" class="emptybox hidden" data-isEssential="false" style="color:red;">
                                @ViewBag.ThisFieldIsEmptyPleaseFillIt
                            </span>
                            <span id="Mobile-wrong" class="hidden" style="color:red;">
                                @Localizer["MobileNotCorrect"]
                            </span>
                        </label>


                        <label class="block clearfix">
                            <label for="form-field-8">@Localizer["DateOfBirth"]: </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().DatePicker()
                                  .Name("DateOfBirth")
                                  .Max(DateTime.Now)
                                  .Value(Model.DateOfBirth)
                                  .Format("dd/MM/yyyy")
                                  .Events(e =>
                                  {

                                      e.Change("changeBirthOfDatePatientDatetimePicker");
                                  })
                                  .HtmlAttributes(new { style = "width: 100%", title = "datepicker", onchange = "dateTimePickerWorkWithSpace(this)" })
                                )
                                @(Html.Kendo().TextBox()
                                    .Name("DateOfBirthYear")
                                    .HtmlAttributes(new { @class = "hidden" })
                                )
                                @(Html.Kendo().TextBox()
                                    .Name("DateOfBirthMonth")
                                    .HtmlAttributes(new { @class = "hidden" })
                                )
                                @(Html.Kendo().TextBox()
                                    .Name("DateOfBirthDay")
                                    .HtmlAttributes(new { @class = "hidden" })
                                )


                                <label for="form-field-8" style="width:100%">@Localizer["Age"]: </label>

                                <span style="width:25%">
                                    <label for="form-field-8">@Localizer["Year"]: </label>
                                    @(Html.Kendo().TextBox()
                                        .Name("Year")

                                        .HtmlAttributes(new { onchange = "ReserveInsertAge(this)", id = "Year", style = "width: 25%", onkeypress = "return OnlyNumberKey(event)" })
                                    )
                                </span>



                                <span style="width:25%">

                                    <label for="form-field-8">@Localizer["Month"]: </label>

                                    @(Html.Kendo().TextBox()
                                        .Name("Month")

                                        .HtmlAttributes(new { onchange = "ReserveInsertAge(this)", id = "Month", style = "width: 25%", onkeypress = "return OnlyNumberKey(event)" })
                                    )

                                </span>





                            </span>
                        </label>


                        @*<label class="block clearfix">
                                <label for="form-field-8">@ViewBag.AgeTranslated : </label>
                                <span class="block input-icon input-icon-right">
                                    <label for="form-field-8">@ViewBag.YearTranslated : </label>
                                    @(Html.Kendo().TextBoxFor(m => m.Year)
                                        .Name("Year")
                                        .HtmlAttributes(new { onchange = "ReserveInsertAge(this)" })
                                    )

                                    <label for="form-field-8">@ViewBag.MonthTranslated : </label>
                                    @(Html.Kendo().TextBoxFor(m => m.Month)
                                        .Name("Month")
                                        .HtmlAttributes(new { onchange = "ReserveInsertAge(this)" })
                                    )
                                </span>
                            </label>*@





                    </div>

                    <div class="col-sm-6">



                        <label class="block clearfix">
                            <label for="form-field-8">@Localizer["Gender"]: </label>
                            <span class="block input-icon input-icon-right">
                                @(Html.Kendo().DropDownList()
                                      .Name("GenderId")
                                      .DataTextField("Name")
                                      .DataValueField("Id")
                                      .DataSource(source =>
                                        {
                                          source.Read(read =>
                                          {
                                              read.Action("GetAllGenders", "BaseInfo");
                                          })
                                          .ServerFiltering(false);
                                      })
                                      .Value(Model.GenderId.ToString())
                                      .HtmlAttributes(new { style = "width: 100%;" })
                                )
                            </span>
                        </label>

                        <script>

                            function OnSelect(e) {

                                var DataItem = this.dataItem(e.item.index());
                                var id = this.element.attr('id');

                                if (id === "FatherJobName") {
                                    $("#FatherJobId").val(DataItem.Guid);
                                    return
                                }

                                if (id === "MotherJobName") {
                                    $("#MotherJobId").val(DataItem.Guid);
                                    return
                                }

                                if (id === "AddressName") {
                                    $("#AddressId").val(DataItem.Guid);
                                    return
                                }

                            }

                        </script>


                        @{
                            if (ViewBag.SectionTypeName != "Lab")
                            {


                                <label class="block clearfix">
                                    <label for="form-field-8">@Localizer["Address"]: </label>

                                    <span class="block input-icon input-icon-right">

                                        @{
                                            if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
                                            {
                                                <a href="\\#" class="k-link k-button k-button-icon pull-left" onclick="AddAddress()" style="padding:0.2rem 0.1rem"><span class="fa fa-plus" style="margin:0.1rem"></span></a>

                                            }
                                            else
                                            {
                                                <a href="\\#" class="k-link k-button k-button-icon pull-right" onclick="AddAddress()" style="padding:0.2rem 0.1rem"><span class="fa fa-plus" style="margin:0.1rem"></span></a>

                                            }
                                        }




                                        @(Html.Kendo().AutoComplete()
                                          .Name("AddressName")
                                          .DataTextField("Name")
                                          .Filter(FilterType.Contains)
                                          .HighlightFirst(true)
                                          .MinLength(1)
                                          .ClearButton(false)
                                          .Events(events => events.Select("OnSelect"))
                                          .HtmlAttributes(new { style = "font-size:1.5rem;width:80%", @id = "AddressName" })
                                          .DataSource(source =>
                                          {
                                              source.Read(read =>
                                              {
                                                  read.Action("GetAllAddress", "BaseInfo");
                                              })
                                              .ServerFiltering(false);
                                          })
                                          .Value(Model.AddressName)
                                        )



                                    </span>

                                </label>


                                @*<label class="block clearfix">
                                    <label for="form-field-8">@Localizer["FatherJob"]: </label>
                                    <span class="block input-icon input-icon-right">



                                        <a href="\\#" class="k-link k-button k-button-icon pull-left" onclick="AddJob()" style="padding:0.2rem 0.1rem"><span class="fa fa-plus" style="margin:0.1rem"></span></a>



                                        @(Html.Kendo().AutoComplete()
                                          .Name("FatherJobName")
                                          .DataTextField("Name")
                                          .HighlightFirst(true)
                                          .Filter(FilterType.Contains)
                                          .MinLength(0)

                                          .ClearButton(false)
                                          .Events(events => events.Select("OnSelect"))
                                          .HtmlAttributes(new { style = "font-size:1.5rem;width:80%", @id = "FatherJobName" })
                                          .DataSource(source =>
                                          {
                                              source.Read(read =>
                                              {
                                                  read.Action("GetAllJobs", "BaseInfo");
                                              })
                                              .ServerFiltering(false);
                                          })
                                          .Value(Model.FatherJobName)
                                        )



                                    </span>

                                </label>*@


                                @*<label class="block clearfix">
                                    <label for="form-field-8">@Localizer["MotherJob"]: </label>
                                    <span class="block input-icon input-icon-right">

                                        <a href="\\#" class="k-link k-button k-button-icon pull-left" onclick="AddJob()" style="padding:0.2rem 0.1rem"><span class="fa fa-plus" style="margin:0.1rem"></span></a>


                                        @(Html.Kendo().AutoComplete()
                                      .Name("MotherJobName")
                                      .DataTextField("Name")
                                      .Filter(FilterType.Contains)
                                      .MinLength(0)
                                      .HighlightFirst(true)
                                      .ClearButton(false)
                                      .Events(events => events.Select("OnSelect"))
                                      .HtmlAttributes(new { style = "font-size:1.5rem;width:80%", @id = "MotherJobName" })
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetAllJobs", "BaseInfo");
                                          })
                                          .ServerFiltering(false);
                                      })
                                      .Value(Model.MotherJobName)
                                        )


                                    </span>

                                </label>*@
                            }
                        }

                    </div>






                    <div class="space-24"></div>
                </fieldset>
            </form>

        </div>
    </div><!-- /.widget-body -->
</div><!-- /.signup-box -->
<input class="hidden" type="text" id="Address" data-Value="@ViewBag.addressId" />
<h3 class="hidden" id="AddressText">@Localizer["Address"] @Localizer["New"]  </h3>
<input class="hidden" type="text" id="Job" data-Value="@ViewBag.jobId" />
<h3 class="hidden" id="JobText">@Localizer["Job"] @Localizer["New"]  </h3>



<div id="my-modalTest-new" class="modal fade @if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en") {
                                                                                    @:MyFont-Roboto-grid
                                                                                  } else {
                                                                                    @:MyFont-Sarchia-grid
                                                                                        }" data-backdrop="static" data-keyboard="false" style="@if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en") {
            @:direction:rtl
                }">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="CloseTestModal()" aria-hidden="true">&times;</button>
                <h3 id="new-modalTest-header" class="smaller lighter blue no-margin @if (HttpContextAccessor.HttpContext.Session.GetString("culture") == "en") {
                                                                                    @:MyFont-Roboto-grid
                                                                                  } else {
                                                                                    @:MyFont-Sarchia-grid
                                                                                        }">
                    @Localizer["NewTest"]
                </h3>
            </div>

            <div id="new-modalTest-body" class="modal-body">

            </div>

            <div class="modal-footer">
                @(Html.Kendo().Button()
                    .Name("btn-test-accept")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "k-primary pull-right" })
                    .Content(Localizer["Ok"]))
                @(Html.Kendo().Button()
                    .Name("btn-test-accept-close")
                    .HtmlAttributes(new { style = "font-size:15px;height:35px;margin:2px;", type = "button", @class = "pull-right", onclick="CloseTestModal()" })
                    .Content(Localizer["Exit"]))

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>


<script>

    var Numbers = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "/", ".", "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩", " "];

    var EnglishKey = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "q", "Q", "w", "e", "E", "r", "R", "t", "T", "y", "Y", "u", "U", "i", "I", "o", "O", "p", "P", "a"
        , "A", "s", "S", "d", "D", "f", "F", "g", "G", "h", "H", "j", "J", "k", "K", "l", "L", "z", "Z", "x", "X", "c", "C", "v", "V", "b", "B", "n", "N", "m", "M"];

    var KurdishKey = [1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1602, 96, 1608, 1749, 1610, 1585, 1685, 1578, 1591, 1740, 1742, 1574, 1569
        , 1581, 1593, 1734, 1572, 1662, 1579, 1575, 1570, 1587, 1588, 1583, 1584, 1601, 1573, 1711, 1594, 1607, 8204, 1688, 1571, 1705, 1603, 1604
        , 1717, 1586, 1590, 1582, 1589, 1580, 1670, 1700, 1592, 1576, 1609, 1606, 1577, 1605, 1600
    ];


    let addressAuto;
    let fatherJobAuto;
    let motherJobAuto;


    $(document).ready(function () {

        let date = $("#DateOfBirth").data("kendoDatePicker");
        //let date4 = date.value();
        //let date41 = $("#DateOfBirth").val();
        if ($("#DateOfBirth").val() !== "")
            getAge(kendo.toString(date.value(), 'd'));
        addressAuto = $("#AddressName").data("kendoAutoComplete");
        fatherJobAuto = $("#FatherJobName").data("kendoAutoComplete");
        motherJobAuto = $("#MotherJobName").data("kendoAutoComplete");
        setTimeout(function () {
            $('#PatientNamePatinetForm').focus();
        }, 200);

        if ("@ViewBag.SectionTypeName" === "Lab")
    {

        $("#GenderId").parent().on("keypress", function(e){
            if (e.which === 13 ) {
                $('#btn-patientNew-accept').focus();
            }
        });

    }

    })



    function ReserveInsertAge(element) {

        var Year = parseInt($('#Year').val());
        var Month = parseInt($('#Month').val());
        if ($('#Month').val() === "" || Month === undefined) {
            Month = 0;
        }
        if ($('#Year').val() === "" || Year === undefined) {
            Year = 0;
        }

        if (Month > 11) {
            Month = 11;
            $('#Month').val('11')
        }
        var today = new Date();
        //var birthDay = today.getFullYear() - age;
        var birthDay = today;
        birthDay.setFullYear(birthDay.getFullYear() - Year);
        birthDay.setMonth(birthDay.getMonth() - Month);
        let birthMonth = birthDay.getMonth() + 1;
        if (birthMonth.toString() !== "10" && birthMonth.toString() !== "11" && birthMonth.toString() !== "12") {
            birthMonth = "0" + birthMonth.toString();
        }


        $('#DateOfBirthYear').val(birthDay.getFullYear());
        $('#DateOfBirthMonth').val(birthMonth);
        $('#DateOfBirthDay').val(1);


        $('#DateOfBirth').val('01/'+birthMonth+'/'+birthDay.getFullYear());

    }

     function AddAddress() {
        Job = false;
        var link = "/BaseInfo/AddNewModal";
         $(".loader").removeClass("hidden");
         let header = $("#AddressText").text();
         let addressId = $("#Address").attr('data-Value');
        $("#new-modalTest-header").text(header);
        $('#my-modalTest-new').modal('toggle');
        $('#new-modalTest-body').load(link, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
            $("#TypeId").val(addressId);

        });


    }

    $("#AddressName").on('focus', function (e) {

        let value = addressAuto.value();
        //var autocomplete = $("#ContentTagsAddt").data("kendoAutoComplete");
        addressAuto.search(value);
    });


    $("#FatherJobName").on('focus', function (e) {

        let value = fatherJobAuto.value();
        fatherJobAuto.search(value);
    });


    $("#MotherJobName").on('focus', function (e) {

        let value = motherJobAuto.value();
        motherJobAuto.search(value);
    });



    function AddJob() {
        Job = true;
        var link = "/BaseInfo/AddNewModal";
        $(".loader").removeClass("hidden");
        let jobId = $("#Job").attr('data-Value');
        let header = $("#JobText").text();
        $("#new-modalTest-header").text(header);
        $('#my-modalTest-new').modal('toggle');
        $('#new-modalTest-body').load(link, function () {
            $(".loader").fadeIn("slow");
            $(".loader").addClass("hidden");
            $("#TypeId").val(jobId);
        });

    }


    $('#btn-test-accept').on("click", function () {
        $(this).attr("disabled", true);

        if ($("#Name").val() === "") {
            $("#Name-box").removeClass('hidden');
            $('#btn-test-accept').removeAttr("disabled");
            return;
        }
        var link = "/BaseInfo/AddOrUpdate";
        var GridRefreshLink = "/BaseInfo/RefreshGrid";
        var data = $("#addNewForm").serialize();
        var JobId;
        if(Job)
            JobId = $("#Job").attr('data-Value');
        else
            JobId = $("#Address").attr('data-Value');
        

        $(".loader").removeClass("hidden");
        $.ajax({
            type: "Post",
            url: link,
            data: data,
            success: function (response) {
                $('#btn-test-accept').removeAttr("disabled");

                if (response !== 0) {
                    if (response === "ValueIsRepeated") {

                        $('#Name-Exist').removeClass('hidden');
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    } else {

                        $('#my-modalTest-new').modal('hide');
                        $(".modal-backdrop:last").remove();
                        $('#new-modalTest-body').empty();
                        $(".loader").fadeIn("slow");
                        $(".loader").addClass("hidden");

                    }
                }
            }
        });
    });




    function CloseTestModal() {

        $(".loader").removeClass("hidden");
        $('#my-modalTest-new').modal('hide');
        $('#new-modalTest-body').empty();
        $(".loader").fadeIn("slow");
        $(".loader").addClass("hidden");
    }


    $('#PatientNamePatinetForm').focus(function () {
        $("#Name-Exist").addClass('hidden');
        $("#Name-box").addClass('hidden');
    });

    $('#PhoneNumber').focus(function () {
        $("#PhoneNumber-Exist").addClass('hidden');
        $("#PhoneNumber-box").addClass('hidden');
    });

    $('#FormNumber2').on('keypress', function (e) {
        if (e.which === 13) {
            $("#PatientNamePatinetForm").focus();
        }
    });

    $('#FileNum2').on('keypress', function (e) {
        if (e.which === 13) {
            $("#PatientNamePatinetForm").focus();
        }
    });

    $('#PatientNamePatinetForm').on('keypress', function (e) {
        if (e.which === 13) {
            $("#PhoneNumber").focus();
        }
    });

    $('#PatientNamePatinetForm').on('focus', function (e) {
        $('#PatientNamePatinetForm').select();
    });


    $('#PhoneNumber').focus(function (e) {

        $("#PhoneNumber").select();


    });

    $('#PhoneNumber').keypress(function (e) {

        $("#PhoneNumber-box-wrong").addClass('hidden');


        let char = Numbers.indexOf(e.key)

        if (char !== -1 || e.which === 13 || e.which === 9) {

            let index = KurdishKey.indexOf(e.which);
            if (e.which === 13 || e.which === 9) {
                //if ($(this).val().length < 8) {
                //    $("#PhoneNumber-box-wrong").removeClass('hidden');
                //    return;
                //}
                let date = $("#DateOfBirth").data("kendoDatePicker");
                date.element.focus();
                date.element.select();


            }
            else if(index !== -1) {
                e.preventDefault();
                let index1 = EnglishKey[index];
                let preVal = $(this).val();
                $(this).val(preVal + index1);
            }
        }
        else {
            e.preventDefault();
        }


    });

    $('#DateOfBirth').keypress(function (e) {

        let char = Numbers.indexOf(e.key)

        if (char !== -1 || e.which === 13 || e.which === 9) {
            let index = KurdishKey.indexOf(e.which);

            if (e.which === 13 || e.which === 9) {
                let gender = $("#GenderId").data("kendoDropDownList");
                    gender.focus();
                    gender.open();
            }

            else if (index !== -1) {
                e.preventDefault();
                let index1 = EnglishKey[index];
                let preVal = $(this).val();
                $(this).val(preVal + index1);
            }
        }
        else {
            e.preventDefault();
        }


    });



    $('#AddressName').keypress(function (e) {
            if (e.which === 13 || e.which === 9) {
                //let FatherJob = $("#FatherJobId").data("kendoDropDownList");
                    fatherJobAuto.focus();
            }
    });

    $('#FatherJobName').keypress(function (e) {
            if (e.which === 13 || e.which === 9) {
                //let MotherJob = $("#MotherJobId").data("kendoDropDownList");
                    motherJobAuto.focus();
            }
    });

    $('#MotherJobName').keypress(function (e) {
            if (e.which === 13 || e.which === 9) {
                $('#Explanation').focus();
            }
    });


    $('#Year').keypress(function (e) {
        if (e.which === 13 || e.which === 9) {

            let date = $("#DateOfBirth").data("kendoDatePicker");
            date.element.focus();
            $('#Month').focus();

        }
    });

     $('#Year').focus(function (e) {
            $('#Year').select();
    });

    $('#Month').keypress(function (e) {
        if (e.which === 13 || e.which === 9) {
            if (parseInt($('#Month').val()) > 11) {
                $('#Month').val("11");

            }
            let date = $("#DateOfBirth").data("kendoDatePicker");
            date.element.focus();
            let gender = $("#GenderId").data("kendoDropDownList");
                    gender.focus();
                    gender.open();
        }
    });

    $('#Month').focus(function (e) {
            $('#Month').select();
    });

</script>
