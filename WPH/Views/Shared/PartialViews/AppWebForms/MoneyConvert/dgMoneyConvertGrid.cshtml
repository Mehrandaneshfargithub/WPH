
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject WPH.Resources.SharedViewLocalizer Localizer

@{

    string edit_title = Localizer["EditMoneyConvert"];
    string remove_title = Localizer["RemoveMoneyConvert"];
}


<div>
    @(Html.Kendo().Grid<WPH.Models.CustomDataModels.MoneyConvert.MoneyConvertViewModel>
    ()
    .Name("kendoMoneyConvertGrid")
    .Columns(columns =>
    {

        if (HttpContextAccessor.HttpContext.Session.GetString("culture") != "en")
        {
            if ((bool)ViewBag.AccessDeleteMoneyConvert)
            {
                columns.Bound("").Title(" ").Width(10).HeaderHtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
               $@"<a class='tooltip-error grid-btn' onClick='GridDeleteMoneyConvertFunction(this)' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete' data-toggle='modal'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }


            if ((bool)ViewBag.AccessEditMoneyConvert)
            {
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                   $@"<a class='tooltip-success grid-btn edit' onClick='EditMoneyConvert(this);' data-id='#=Guid#' data-rel='tooltip' title='{edit_title}' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");

            }

            columns.Bound(x => x.DestAmount).Title(Localizer["DestAmount"]).Format("{0:n0}").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.BaseAmount).Title(Localizer["BaseAmount"]).Format("{0:n0}").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.DestCurrencyName).Title(Localizer["DestCurrency"]).HtmlAttributes(new { @style = "text-align:center;font-size:1.5rem" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.BaseCurrencyName).Title(Localizer["BaseCurrency"]).HtmlAttributes(new { @style = "text-align:center;font-size:1.5rem" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Date).Title(Localizer["Date"]).Format("{0: dd/MM/yyyy}").Filterable(x => x.Cell(y => y.Template("CostDateFilterInCostGrid"))).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Index).Filterable(false).Width(10).Title("#").HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Guid).Hidden();
        }
        else
        {
            columns.Bound(x => x.Guid).Hidden();
            columns.Bound(x => x.Index).Filterable(false).Title("#").Width(10).HtmlAttributes(new { @style = "text-align:center;font-size:1.5rem" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.Date).Title(Localizer["Date"]).Format("{0: dd/MM/yyyy}").Filterable(x => x.Cell(y => y.Template("CostDateFilterInCostGrid"))).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.BaseCurrencyName).Title(Localizer["BaseCurrency"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.DestCurrencyName).Title(Localizer["DestCurrency"]).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.BaseAmount).Title(Localizer["BaseAmount"]).Format("{0:n0}").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });
            columns.Bound(x => x.DestAmount).Title(Localizer["DestAmount"]).Format("{0:n0}").Filterable(false).HtmlAttributes(new { @style = "text-align:center;" }).HeaderHtmlAttributes(new { @style = "text-align:center;" });

            if ((bool)ViewBag.AccessEditMoneyConvert)
            {
                columns.Bound("").Title(" ").Width(10)
                .ClientTemplate(
                   $@"<a class='tooltip-success grid-btn edit' onClick='EditMoneyConvert(this);' data-id='#=Guid#' data-rel='tooltip' title='{edit_title}' data-original-title='Edit'>
                        <span class='green'>
                            <i class='ace-icon fa fa-pencil bigger-120'></i>
                        </span>
                    </a>
                ");
            }


            if ((bool)ViewBag.AccessDeleteMoneyConvert)
            {
                columns.Bound("").Title(" ").Width(10).HeaderHtmlAttributes(new { @style = "text-align:center;" })
                .ClientTemplate(
                   $@"<a class='tooltip-error grid-btn' onClick='GridDeleteMoneyConvertFunction(this)' data-id='#=Guid#' data-rel='tooltip' title='{remove_title}' data-original-title='Delete' data-toggle='modal'>
                        <span class='red'>
                            <i class='ace-icon fa fa-trash-can bigger-120'></i>
                        </span>
                    </a>
                ");
            }

        }

    })

        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(p => p.Guid);
        })
        .PageSize(10)
        .Read(read => read.Action("GetAll", "MoneyConvert").Data("GetPeriodAndTimeForMoneyConvert"))
        )
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
        .Pageable(pageable => pageable
        .Input(true)
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5)
        .Numeric(true)) // Enable paging
        .Sortable().HtmlAttributes(new { @style = "direction: ltr;margin-top:2rem;font-size:1.3rem;overflow:auto" }) // Enable sorting
    )
</div>


<script>

    $(document).ready(function () {

        $("#kendoMoneyConvertGrid").on("dblclick", "tr.k-state-selected", function (element) {

            $("#kendoMoneyConvertGrid").find("tr.k-state-selected td a.edit").click();

        });

    })

</script>